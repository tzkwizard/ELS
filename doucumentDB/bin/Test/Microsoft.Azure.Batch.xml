<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Batch</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Batch.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a compute node on which to start a new task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AffinityInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AffinityInformation"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AffinityInformation.AffinityId">
            <summary>
            Gets or sets an opaque string that represents a previously run task or compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler">
            <summary>
            A <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> which you can use to specify under what conditions an operation to
            add multiple tasks to a job should retry, terminate or be considered successful.
            </summary>
            <remarks>You do not need to specify this behavior explicitly; if you do not, a default behavior
            is used.  This behavior uses the <see cref="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)"/>
            criteria.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientBehavior">
            <summary>
            Derived classes modify operational behaviors of a Azure Batch Service client.  Derived classes can be called out of order and simultaneously by several threads.  Implementations should be threadsafe.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.#ctor(System.Func{Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken,Microsoft.Azure.Batch.AddTaskResultStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> class with the specified result handler function.
            </summary>
            <param name="resultHandler">A function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)">
            <summary>
            The default result handler for the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior. This handler
            treats success and 'TaskExists' errors as successful, retries server errors (HTTP 5xx), and throws
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> on client error (HTTP 4xx).
            </summary>
            <param name="addTaskResult">The result of a single Add Task operation.</param>
            <param name="cancellationToken">The cancellation token associated with the AddTaskCollection operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.AddTaskResultStatus"/> which indicates whether the <paramref name="addTaskResult"/>
            is classified as a success or as requiring a retry.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.ResultHandler">
            <summary>
            Gets or sets the function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResult">
            <summary>
            The result of adding a single task within an Add Task Collection operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.TaskId">
            <summary>
            Gets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Task">
            <summary>
            Gets details of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.RetryCount">
            <summary>
            Gets the number of times the Add Task operation was retried for this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.StatusCode">
            <summary>
            Gets the HTTP status code of the response to the Add Task request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ETag">
            <summary>
            Gets the ETag of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.LastModified">
            <summary>
            Gets the last-modified time (UTC) of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ClientRequestId">
            <summary>
            Gets the client request id for the original Add Task request, if present and requested to be returned. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ContentType">
            <summary>
            Gets the content-type of the Add Task response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ContentId">
            <summary>
            Gets the content-id of the Add Task response if present.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.DataServiceId">
            <summary>
            Gets the OData id of the resource acted on by the Add Task request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Location">
            <summary>
            Gets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Error">
            <summary>
            Gets additional Batch-specific error details, if the Add Task request failed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResultStatus">
            <summary>
            Used by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> to classify an <see cref="T:Microsoft.Azure.Batch.AddTaskResult"/> as successful or
            requiring a retry.
            </summary>
            <remarks>AddTaskResultStatus is not used to report non-retryable failure; a result handler should throw
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> for that.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Success">
            <summary>
            Classifies the result as a success.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Retry">
            <summary>
            Classifies the result as requiring a retry.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager">
            <summary>
            Manages the AddTasks workflow, performs multiple CloudTaskAdd requests, and handles retries/exception handling.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.#ctor(Microsoft.Azure.Batch.JobOperations,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Creates the AddTasks workflow manager with the specified arguments.
            </summary>
            <param name="jobOperations"></param>
            <param name="jobId"></param>
            <param name="tasksToAdd"></param>
            <param name="parallelOptions">The parallel options associated with this operation.  If this is null, the default is used.</param>
            <param name="fileStagingArtifacts">File staging artifacts associated with this operation.  If the customer does not set this, it is unviewable by them.</param>
            <param name="bhMgr">The behavior manager.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.CheckForCancellationOrTimeoutAndThrow">
            <summary>
            Checks for operation cancelation or timeout, and throws the corresponding exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.IsWorkflowDone">
            <summary>
            Determines if the workflow has finished or not.
            </summary>
            <returns>True if the workflow has successfully completed, false if it has not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.StageFilesAndAddTasks(System.Collections.Generic.Dictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask},System.String)">
            <summary>
            Performs file staging and also issues the AddTaskCollection request for the set of tasks to add.
            </summary>
            <param name="tasksToAdd">The set of tasks to add.</param>
            <param name="namingFragment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessProtocolAddTaskResults(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.AddTaskResult},System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask})">
            <summary>
            Processes a set AddTaskResults from the protocol and groups them according to the results of the AddTaskResultHandler
            </summary>
            <param name="addTaskResults"></param>
            <param name="taskMap">Dictionary of task name to task object instance for the specific protocol response.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessPendingOperationResults">
            <summary>
            Waits for a pending operation to complete and throws if the operation failed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask">
            <summary>
            Internal task wrapper which tracks a tasks retry count and holds a reference to the protocol object and CloudTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask.GetProtocolTask">
            <summary>
            Gets the finalized version of this task.  Also internally updates this.Task to refer to a bound read-only copy of the original
            CloudTask.  Subsequent calls to this method will return a reference to the same object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumeratorBase`1">
            <summary>
            Implementents sync and async enumerator based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerator`1">
            <summary>
            An enumerator which exposes an asynchronous mechanism for iteration.
            
            Enumerator instances are not threadsafe.
            
            Each enumerator fetches the collection from the server. 
            As a consequence, each enumerator can see different data (collection size, contents, etc.).
            
            Care should be taken to avoid multiple retrievals of the data from the server via casual use of foreach/ForeachAsync and other collection operations.
            
            </summary>
            <typeparam name="T">The type of the enumerator.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.MoveNextAsync">
            <summary>
            Begins an asynchronous call to advance the enumerator to the next element of the collection.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.ResetAsync">
            <summary>
            Begins an asynchronous call to set the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.IPagedEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListCertificatesEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobPrepReleaseTaskStatusEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            An iterator that lists-jobs (not by schedule)
            </summary>
            <param name="parentBatchClient"></param>
            <param name="behaviorMgr"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,System.String,Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            An iterator that calls list-jobs-by-schedule
            </summary>
            <param name="parentBatchClient"></param>
            <param name="jobScheduleId"></param>
            <param name="behaviorMgr"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolsEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolUsageMetricsEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByTaskEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListTasksEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByNodeEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobSchedulesEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListComputeNodesEnumerator.GetNextBatchFromServer(Microsoft.Azure.Batch.SkipTokenHandler)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchCredentials">
            <summary>
            Base class for credentials used to authenticate access to an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchCredentials"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl">
            <summary>
            Gets the Batch service endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials"/> class with the specified Batch service endpoint, account name, and access key.
            <param name="baseUrl">The Batch service endpoint.</param>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The Base64 encoded account access key.</param>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.KeyValue">
            <summary>
            Gets the Base64 encoded account access key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Code">
            <summary>
            Gets a code for the autoscale error.  See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Message">
            <summary>
            Gets a message describing the autoscale error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Values">
            <summary>
            Gets a list of additional error details related to the autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleEvaluation">
            <summary>
            Holds the results from a call to EvaluateAutoScale.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleEvaluation.AutoScaleRun">
            <summary>
            Gets the result of evaluation of an AutoScale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleEvaluation.DataServiceId">
            <summary>
            The identity of the resource acted by the EvaluateAutoScaleRequest.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRun">
            <summary>
            The results and errors from an evaluation or execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Timestamp">
            <summary>
            Gets the time at which the autoscale formula was last evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Results">
            <summary>
            Gets the final values of all variables used in the evaluation of the autoscale formula.  
            Each variable value is returned in the form $variable=value, and variables are separated 
            by semicolons.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Error">
            <summary>
            Gets details of the error encountered evaluating the autoscale formula on the pool,
            if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobOperations">
            <summary>
            Performs operations on Azure Batch jobs.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJob"/>
        </member>
        <member name="T:Microsoft.Azure.Batch.IInheritedBehaviors">
            <summary>
            Methods and properties that are inherited from the instantiating parent object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors">
            <summary>
            This collection is initially populated by instantiation or by copying from the instantiating parent object (inheritance).
            In this model, the collections are independent but the members are shared references.
            Members of this collection alter or customize various behaviors of Azure Batch Service client objects.
            These behaviors are generally inherited by any child class instances.  
            Modifications are applied in the order of the collection.
            The last write wins.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob(System.String,Microsoft.Azure.Batch.PoolInformation)">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <param name="jobId">The Id of the job.</param>
            <param name="poolInformation">The information about the pool the job will run on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>The get job operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJob(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJob(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListTasks(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTask(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTaskAsync.</para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTask.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.NodeFile">NodeFiles</see> in the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="taskId">The id of the task.</param>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The add task operation runs asynchronously.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <remarks>
            <para>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobPreparationAndReleaseTaskStatus(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the status of <see cref="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask"/> and <see cref="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask"/> tasks for the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate statuses asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the statuses are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; statuses are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ExponentialRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using an exponential backoff scheme to determine the interval between retries. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.IRetryPolicy">
            <summary>
            Represents a retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.LinearRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using a specified fixed time interval between retries.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestInformation">
            <summary>
            A set of common information associated with a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.AzureError">
            <summary>
            Gets or sets the Azure Error information which contains detailed metadata around 
            the specific error encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusMessage">
            <summary>
            Gets or sets the HTTP status message for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusCode">
            <summary>
            Gets or sets the HTTP status code for the request.
            In cases where an HTTP response was never recieved (for example on client side timeout) this property is null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ClientRequestId">
            <summary>
            Gets or sets the client-request-id set by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ServiceRequestId">
            <summary>
            Gets or sets the service request ID for this request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestResult">
            <summary>
            Represents the result of a physical request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RequestResult.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/>.
            </summary>
            <param name="requestInformation">The information associated with the individual request.</param>
            <param name="exception">The exception hit during the execution of the request (or null if there was no exception).</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.RequestInformation">
            <summary>
            Gets information about the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Exception">
            <summary>
            Gets the exception hit during execution of the request, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Task">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.Task"/> object associated with the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RetryDecision">
            <summary>
            Represents a decision made by an <see cref="T:Microsoft.Azure.Batch.Common.IRetryPolicy"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry">
            <summary>
            A retry decision with <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to false
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RetryDecision.RetryWithDelay(System.TimeSpan)">
            <summary>
            Create a new <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> with the specified delay before the next retry.
            </summary>
            <param name="retryDelay">The duration to wait before performing the retry.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object with the specified retry delay and <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to true.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.RetryDelay">
            <summary>
            Gets the delay before the next retry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry">
            <summary>
            Gets whether a retry should be performed or not.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            Holds the status of the Job Preparation task and Job Release task for a given compute node in a given pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeId">
            <summary>
            Gets the identifer of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeUrl">
            <summary>
            Gets the Url of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInformation">
            <summary>
            Gets the execution information of Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation">
            <summary>
            Gets the execution information of Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Gets the identifer of the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile">
            <summary>
            Exposes methods and properties to access files from Nodes or Tasks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsStringAsync(System.IO.Stream,System.Text.Encoding,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to return the contents of the file as a string.
            </summary>
            <param name="destinationStream">The stream into which the contents of the file are copied.</param>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, ASCII is used.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsString(System.IO.Stream,System.Text.Encoding,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to return the contents of the file as a string.
            </summary>
            <param name="destinationStream">The stream into which the contents of the file are copied.</param>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, ASCII is used.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A string containing the contents of the file.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to delete the file.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the file.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.IsDirectory">
            <summary>
            Gets the value that indicates whether the file is a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Properties">
            <summary>
            Gets the FileProperties of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Url">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile.FileItemBox">
            <summary>
            Encapsulates the properties of a FileItem so as to allow atomic replacement for Refresh().
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AzureError">
            <summary>
            An error received from the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AzureError.Code">
            <summary>
            Gets a code for the error.  See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AzureError.Message">
            <summary>
            Gets a message describing the error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AzureError.Values">
            <summary>
            Gets a collection of key-value pairs containing additional details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AzureErrorDetail">
            <summary>
            An item of additional information included in an <see cref="T:Microsoft.Azure.Batch.AzureError"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AzureErrorDetail.Key">
            <summary>
            Gets an identifier specifying the meaning of the <see cref="P:Microsoft.Azure.Batch.AzureErrorDetail.Value"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AzureErrorDetail.Value">
            <summary>
            Gets the additional information included with the <see cref="T:Microsoft.Azure.Batch.AzureError"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientParallelOptions">
            <summary>
            Stores options that configure the operation of methods on Batch client parallel operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism">
            <summary>
            Gets or sets the maximum number of concurrent tasks enabled by this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default value is 1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken">
            <summary>
            Gets or sets the <see cref="T:System.Threading.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default is <see cref="P:System.Threading.CancellationToken.None"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BehaviorManager">
            <summary>
            Tools for managing multiple collections of behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BehaviorManager.GetBehaviors``1">
            <summary>
            Gets an ordered list of behaviors of the specific type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.BehaviorManager.MasterListOfBehaviors">
            <summary>
            Returns a new list of behaviors that is the concatination of the base + per-call.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IRefreshable">
            <summary>
            Provides a mechanism for refreshing a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to refresh the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.  If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to force a refresh of the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service. If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.#ctor(Microsoft.Azure.Batch.CertificateOperations,Microsoft.Azure.Batch.Protocol.Models.Certificate,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Instantiates an object bound to the values in the protocol object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDelete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.GetProtocolObject">
            <summary>
            Returns the instance of the protocol object to which the current object is bound.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Thumbprint">
            <summary>
            Gets the thumbprint of the certificate. This is a sequence of up to 40 hex digits.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm">
            <summary>
            Gets the algorithm used to derive the thumbprint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Url">
            <summary>
            Gets the URL of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.State">
            <summary>
            Gets the current state of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.StateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousState">
            <summary>
            Gets the previous state of the certificate.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its previous state.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousStateTransitionTime property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Data">
            <summary>
            Gets the base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref="T:Microsoft.Azure.Batch.Certificate"/> was created).
            </summary>
            <remarks>
            <para>This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/>.  It is not defined
            for certificates retrieved from the Batch service.</para>
            <para>The maximum size is 10 KB.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CertificateFormat">
            <summary>
            Gets the format of the certificate data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Password">
            <summary>
            Gets the password to access the certificate private key.
            </summary>
            <remarks>
            This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data
            (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)"/> and <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)"/>).
            It is not defined for certificates retrieved from the Batch service.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PublicData">
            <summary>
            Gets the public part of the certificate as a string containing base-64 encoded .cer format data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.DeleteCertificateError">
            <summary>
            Gets the error that occurred on the last attempt to delete this certificate.
            </summary>
            <remarks>
            This property is null unless the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateOperations">
            <summary>
            Performs certificate-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>The get certificate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificate(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .cer file.
            </summary>
            <param name="cerFileName">The path to the .cer file.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[])">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .cer format data in memory.
            </summary>
            <param name="cerRawData">The certificate data in .cer format.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .pfx file.
            </summary>
            <param name="pfxFileName">The path to the .pfx file.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data in memory.
            </summary>
            <param name="pfxRawData">The certificate data in .pfx format.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.ListCertificates(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.Certificate">certificates</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate certificates asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the certificates are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; certificates are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CertificateOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.ParentBatchClient">
            <summary>
            allows child objects to access the protocol wrapper and secrets to make verb calls
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ChangeTrackingBox`1">
            <summary>
            Boxes any object and tracks if it has been changed at the "overwrite" or "set"
            level.
            
            The object itself might also implement IChangeTracking and track its own finegrained
            changes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IChangeTracking`1">
            <summary>
            Used to special case change tracking.  Typically this is for complex
            properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IChangeTracking`1.PropId">
            <summary>
            The property id of the property being tracked.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IChangeTracking`1.Value">
            <summary>
            The value for which changes are being tracked.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IChangeTracking`1.HasChanged">
            <summary>
            True if the property has changed.
            This will recursive/deep for complex properties.
            No setter because deep/recursive clearing is probably not desirable.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Creates an unbound job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.#ctor(Microsoft.Azure.Batch.BatchClient,Microsoft.Azure.Batch.Protocol.Models.CloudJob,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Creates a bound Job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use JobOperations.AddTaskAsync.</para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use JobOperations.AddTask.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings.  These environment variables are set for all tasks 
            in this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> (including the Job Manager, Job Preparation and Job
            Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CreationTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.DisplayName">
            <summary>
            Gets or sets the display name of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ETag">
            <summary>
            Gets the ETag for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ExecutionInformation">
            <summary>
            Gets the execution information for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Id">
            <summary>
            Gets or sets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobManagerTask">
            <summary>
            Gets or sets the Job Manager task.  The Job Manager task is launched when the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task.  The Batch service will run the Job Preparation task on a 
            compute node before starting any tasks of that job on that compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task.  The Batch service runs the Job Release task when the job ends,
            on each compute node where any task of the job has run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.LastModified">
            <summary>
            Gets the last modified time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousState">
            <summary>
            Gets the previous state of the job.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job entered its previous state.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousStateTransitionTime property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Priority">
            <summary>
            Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.
            </summary>
            <remarks>
            The default value is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.State">
            <summary>
            Gets the current state of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.StateTransitionTime">
            <summary>
            Gets the time at which the job entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Statistics">
            <summary>
            Gets resource usage statistics for the entire lifetime of the job.
            </summary>
            <remarks>This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> was retrieved with an
            <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> including the 'stats' attribute; otherwise it is null.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Url">
            <summary>
            Gets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings">
            <summary>
            Error code strings from Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ActiveJobAndScheduleQuotaReached">
            <summary>
            The account has reached its quota of active jobs and job schedules.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScalingFormulaSyntaxError">
            <summary>
            An automatic scaling formula has a syntax error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScaleFormulaTooLong">
            <summary>
            An automatic scaling formula is too long.  The maximum length is 8192 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateBeingDeleted">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateExists">
            <summary>
            The certificate you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateNotFound">
            <summary>
            The certificate on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateActive">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateDeleteFailed">
            <summary>
            A certificate could not be deleted because it is still in use.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.FileNotFound">
            <summary>
            A node file requested from a task or compute node was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidCertificateReferences">
            <summary>
            A pool specification specifies one or more invalid certificates (for example, certificates that are
            not present in the Batch account).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidConstraintValue">
            <summary>
            A value in a job or task constraint is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRestAPIForAccountSetting">
            <summary>
            There is a conflict between the REST API being used and the account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingDeleted">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingTerminated">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobCompleted">
            <summary>
            A job operation was attempted which is not permitted when the job has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotActive">
            <summary>
            A job operation was attempted which is not permitted when the job is not active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotRunOnTVM">
            <summary>
            A Job Preparation task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotSpecified">
            <summary>
            The specified job does not have a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotRunOnTVM">
            <summary>
            A Job Release task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotSpecified">
            <summary>
            The specified job does not have a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotFound">
            <summary>
            The job on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.IOError">
            <summary>
            An I/O error occurred while trying to access a resource within the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationInvalidForCurrentState">
            <summary>
            The specified operation is not valid for the current state of the resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionDisabled">
            <summary>
            The specified Azure Guest OS version is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionExpired">
            <summary>
            The specified Azure Guest OS version is expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionNotFound">
            <summary>
            The specified Azure Guest OS version was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangePriority">
            <summary>
            A job priority was specified which was outside the permitted range of -1000 to 1000.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PathNotFound">
            <summary>
            A file path was not found on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingDeleted">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingResized">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being resized.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingCreated">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolExists">
            <summary>
            The pool you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotEligibleForOSVersionUpgrade">
            <summary>
            The specified pool is not eligible for an operating system version upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotFound">
            <summary>
            The pool on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolQuotaReached">
            <summary>
            The account has reached its quota of pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolVersionEqualsUpgradeVersion">
            <summary>
            The pool is already on the operating system version to which it was asked to upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.StorageAccountNotFound">
            <summary>
            A requested storage account was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskCompleted">
            <summary>
            A task operation was attempted which is not permitted when the task has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskFilesUnavailable">
            <summary>
            The node files for a task are not available, for example because the retention period has expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskExists">
            <summary>
            The task you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobPreparationTask">
            <summary>
            The task id is the same as that of the Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobReleaseTask">
            <summary>
            The task id is the same as that of the Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskNotFound">
            <summary>
            The task on which an operation was attempted is not present in the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingCreated">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingStarted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being started.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingRebooted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being rebooted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingReimaged">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeCountsMismatch">
            <summary>
            The node counts do not match.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeNotFound">
            <summary>
            The compute node on which an operation was attempted is not present in the given pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeStateUnusable">
            <summary>
            A compute node operation was attempted which is not permitted when the node is unusable.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserExists">
            <summary>
            The compute node user account you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserNotFound">
            <summary>
            The compute node user account on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UpgradePoolVersionConflict">
            <summary>
            The pool is already upgrading to a different operating system version.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedConstraint">
            <summary>
            A requested job or task constraint is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedRequestVersion">
            <summary>
            The specified version of the Batch REST API is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingDeleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingTerminated">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleCompleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule has completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleDisabled">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleExists">
            <summary>
            The job schedule you are attempting to add already exists in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleNotFound">
            <summary>
            The job schedule on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AuthenticationFailed">
            <summary>
            The Batch service failed to authenticate the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ConditionNotMet">
            <summary>
            A read operation included a HTTP conditional header, and the condition was not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.EmptyMetadataKey">
            <summary>
            An add or update request specified a metadata item whose key is an empty string.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.HostInformationNotPresent">
            <summary>
            The host information was missing from the HTTP request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InternalError">
            <summary>
            An internal error occurred in the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidAuthenticationInfo">
            <summary>
            The authentication credentials were not provided in the correct format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHeaderValue">
            <summary>
            The value of one of the HTTP headers was in an incorrect format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHttpVerb">
            <summary>
            The Batch service did not recognise the HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidInput">
            <summary>
            One of the request inputs is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidMetadata">
            <summary>
            An add or update request specified a metadata item which contains characters that are not permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidPropertyValue">
            <summary>
            The value of a property in the HTTP request body is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRequestBody">
            <summary>
            The HTTP request body is not syntactically valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidQueryParameterValue">
            <summary>
            The HTTP request URI contained invalid value for one of the query parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRange">
            <summary>
            The specified byte range is invalid for the given resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidUri">
            <summary>
            The HTTP request URI was invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MetadataTooLarge">
            <summary>
            The size of the metadata exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingContentLengthHeader">
            <summary>
            The HTTP Content-Length header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredHeader">
            <summary>
            A required HTTP header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredProperty">
            <summary>
            A required property was not specified in the HTTP request body.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredQueryParameter">
            <summary>
            A required query parameter was not specified in the URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NotImplemented">
            <summary>
            The operation is not implemented.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeInput">
            <summary>
            One of the request inputs is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeQueryParameterValue">
            <summary>
            A query parameter in the request URL is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationTimedOut">
            <summary>
            The operation could not be completed within the permitted time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestBodyTooLarge">
            <summary>
            The size of the HTTP request body exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestUrlFailedToParse">
            <summary>
            The Batch service could not parse the request URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceNotFound">
            <summary>
            The specified resource does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceAlreadyExists">
            <summary>
            The specified resource already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceTypeMismatch">
            <summary>
            The resource does not match the expected type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ServerBusy">
            <summary>
            The Batch service is currently unable to receive requests.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHeader">
            <summary>
            One of the HTTP headers specified in the request is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVerb">
            <summary>
            The resource does not support the specified HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVersion">
            <summary>
            The Batch service does not support the specified version of the HTTP protocol.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedProperty">
            <summary>
            One of the properties specified in the HTTP request body is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedQueryParameter">
            <summary>
            One of the query parameters specified in the URL is not supported.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes">
            <summary>
            Contains error codes specific to pool resize errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AccountCoreQuotaReached">
            <summary>
            The account has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationFailed">
            <summary>
            An error occurred while trying to allocate the desired number of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationTimedout">
            <summary>
            The Batch service was unable to allocate the desired number of compute nodes within the resize timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.RemoveNodesFailed">
            <summary>
            An error occurred when removing compute nodes from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.ResizeStopped">
            <summary>
            The user stopped the resize operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.Unknown">
            <summary>
            The reason for the failure is not known.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes">
            <summary>
            Contains error codes specific to job scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.AutoPoolCreationFailedWithQuotaReached">
            <summary>
            The Batch service could not create an auto pool to run the job on, because the account
            has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidAutoScaleFormulaInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid automatic scaling formula.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidCertificatesInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid certificate reference (for example, to a
            certificate that does not exist).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes">
            <summary>
            Contains error codes specific to task scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobAccessDenied">
            <summary>
            Access was denied when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobDownloadMiscError">
            <summary>
            An error occurred when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobDownloadTimedOut">
            <summary>
            A timeout occurred when downloading a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobNotFound">
            <summary>
            A resource file required for the task does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.CommandLaunchFailed">
            <summary>
            An error occurred when launching the task's command line.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.CommandProgramNotFound">
            <summary>
            The program specified in the task's command line was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.DiskFull">
            <summary>
            The compute node disk ran out of space when downloading the resource files required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceDirectoryCreateFailed">
            <summary>
            The compute node could not create a directory for the task's resource files.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceFileCreateFailed">
            <summary>
            The compute node could not create a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceFileWriteFailed">
            <summary>
            The compute node could not write to a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.TaskEnded">
            <summary>
            The task ended.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComplexProperty">
            <summary>
            Marks a property id as being a complex property.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Code">
            <summary>
            Gets a code for the certificate deletion error.  See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Message">
            <summary>
            Gets a message describing the certificagte deletion error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Values">
            <summary>
            Gets a list of additional error details related to the certificate deletion error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.DetailLevel">
            <summary>
            Controls the amount of detail requested from the Azure Batch service when listing or
            retrieving resources.
            </summary>
            <remarks>The only supported implementation of DetailLevel is <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/>.
            Other implementations are ignored.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Language">
            <summary>
            Gets the language code of the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Value">
            <summary>
            Gets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.CreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.LastModified">
            <summary>
            Gets the time at which the file was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingIncorrectArtifact">
            <summary>
              Looks up a localized string similar to An incorrect artifact implementation class was provided..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingLocalFileNotFound">
            <summary>
              Looks up a localized string similar to The following local file cannot be staged because it cannot be found: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingOnlyASingleStorageAccount">
            <summary>
              Looks up a localized string similar to All files destined for the default blob container must use the same instance of StorageCredentials..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingPropertyCanBeSetOnlyOnce">
            <summary>
              Looks up a localized string similar to The following property has been set once and cannot be set again: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerable`1">
            <summary>
            Exposes enumerators for a paged collection. These enumerators support simple iteration over a paged collection of a specified type.
            
            Paged collections are backed by one or more calls to the Batch Service.  
            Each of these calls can return a variable sized page of data which is then consumed by the enumerator. 
            </summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator">
            <summary>
            Returns an asynchronous enumerator that iterates through the paged collection.
            </summary>
            <returns>The type of objects to enumerate.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IComplexPropertyFactory`1.CreateComplexProperty(`0)">
            <summary>
            Creates a complex property.  This will be called once JIT.
            </summary>
            <param name="genericId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JITComplexPropertyManager`1.IsJITComplexProperty(`0,Microsoft.Azure.Batch.IChangeTracking{`0}@)">
            <summary>
            Non complex properties return false immediately.
            Complex properties return true and are JIT instantiated once and thereafter returned from cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JITComplexPropertyManager`1.IsJITOverwriteProperty(`0,System.Object)">
            <summary>
            Non complex properties return false immediately.
            Complex properties are overwritten with the given value;
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.JITComplexPropertyManager`1.BeingTrackedCollection">
            <summary>
            The collection of objects for which changes are being tracked.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JITComplexPropertyManager`1.AtLeastOnePropHasChanged">
            <summary>
            Returns true if at least one property has been changed.  False otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobConstraints">
            <summary>
            Specifies the execution constraints for a job. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a <see cref="T:Microsoft.Azure.Batch.JobConstraints"/> object with the specified max wall clock time and max task retry count.
            </summary>
            <param name="maxWallClockTime">The max wall clock time of the job.</param>
            <param name="maxTaskRetryCount">The max task retry count for each task in the job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a job is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for a job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobExecutionInformation">
            <summary>
            Information about the execution of an Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobExecutionInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation)">
            <summary>
            Initialize a new instance of JobExecutionInfo.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.StartTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.EndTime">
            <summary>
            Gets the completion time of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.PoolId">
            <summary>
            Gets the pool Id of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.SchedulingError">
            <summary>
            Gets the error encountered by the Batch service in scheduling the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason">
            <summary>
            Gets the reason for job moving to completed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.#ctor">
            <summary>
            Creates an unbound instance of JobPreparationTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.JobPreparationTaskPropertyIds})">
            <summary>
             creates a bound instance.
            </summary>
            <param name="protocolJobPrepTask"></param>
            <param name="constraintProvider">pass an read-only CP as needed for Job, etc.  null gets you the default/rw CP.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.CreateJobPrepAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobPreparationTaskPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobPreparationTaskPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.CommandLine">
            <summary>
            Gets or sets the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.ResourceFiles">
            <summary>
            Gets or sets the collection of ResourceFile instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.RunElevated">
            <summary>
            Gets or sets the value that determines the elevation state of the process.  
            True specifies that the process is to run under elevation as Administrator.  
            False specifes no elevation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Constraints">
            <summary>
            Gets or sets the execution constraints provided by the user for this job preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.WaitForSuccess">
            <summary>
            Gets or sets the value that specifies if the Batch Service should wait for the successful completion of the job preparation task
            before scheduling any tasks on the compute node. A job preparation task execution is considered successful if its ExitCode is 0.
            If this property is not specified, a default value of true is assigned by the Batch Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.RerunOnComputeNodeRebootAfterSuccess">
            <summary>
            Gets or sets the value that controls the rerun of the job preparation task after a reboot of a compute node which had a previously successful run the job preparation task.
            If this property is not specified, a default value of true is assigned by the Batch Service.
            Note that the job preparation task should still be written to be idempotent because it can be retun if the compute node is rebooted while Job Prep Task is still running.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Preparation task on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.#ctor">
            <summary>
            Initialize a new instance of JobPreparationTaskExecutionInfo.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation)">
            <summary>
            Initialize a new instance of JobPreparationTaskExecutionInfo.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed. 
            This property is only returned if the task is in completed state. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task. 
            This property is only returned if the task is in completed state. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            The most recent time at which this task’s execution was retried by the Batch Service. 
            This is only returned if the RetryCount is not 0 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            The number of times the task has been retried by the Batch Service. 
            Every time the task exits with a non-zero code, it is deemed as an application failure. 
            The Batch Service will retry the task up to the specified MaxTaskRetryLimit. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError">
            <summary>
            Gets the TaskSchedulingError encountered by the service in starting the task. 
            This property is only returned if there was an error in scheduling the task and it is now in completed state. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time 
            the task is restarted this value is reset. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State">
            <summary>
            Gets the current running state of the task.  Valid values are running, 
            and completed.  Running means the task is currently running. 
            Completed means the task has completed.  The Completed state includes the case where 
            the task exits successfully with exit code 0 and the cases 
            where the system fails to start the task process due to 
            scheduling errors or the retry limit has reached after numerous task failures. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            The Url to the root directory of the Job Preparation task on the compute node. 
            You can use this Url to retrieve files created by the task such as log files.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyContraintProvider`1.GetConstraint(`0)">
            <summary>
            Gets the constraint for the given property.
            </summary>
            <param name="propId"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTaskPropertyBag`1">
            <summary>
            Provides property read/write access to a bound object.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPropertyBag`1">
            <summary>
            A propToGet bag template with getters and setters for core types.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPropertyModifications`1">
            <summary>
            An interface to manage objects who's properties can change. This is to help when code must have
            different paths for changed properties vs unchanged properties.
            
            Please use "Explicit Interface Implementation" to hide these methods on public classes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IModifiable">
            <summary>
            An interface to manage objects that can be modified.
            
            Please use "Explicit Interface Implementation" to hide these methods on public classes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IModifiable.HasBeenModified">
            <summary>
            Returns true if the object has been modified.
            This is recursive through complex child properties.
            
            Note special care must be take for "administrative" property writes as they
            might trigger a false positive on this test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.GetPropertyOrThrow(`0,Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Will get the value of a property.  Will throw  if the property has not been set.
            </summary>
            <param name="propId">The property id of the desired property.</param>
            <param name="authLevel">The explicit AuthorizationLevel to be used for this call.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.GetPropertyOrThrow(`0)">
            <summary>
            Will get the value of a property.  Will throw  if the property has not been set.
            </summary>
            <param name="propId">The desired property.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.TryGetProperty(`0,System.Object@)">
            <summary>
            Tries to get a property at the lowest AuthorizationLevel.
            </summary>
            <param name="propId">The PropertyIdType of the desired property.</param>
            <param name="value">The value of the desired PropertyIdType.</param>
            <returns>True if the property had a value.  False if the property had no value.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.TryGetProperty(`0,System.Object@,Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Tries a property in an explict AuthorizationLevel
            </summary>
            <param name="propId">The PropertyIdType of the desired property.</param>
            <param name="value">The value of the desired PropertyIdType.</param>
            <param name="authLevel">The AuthorizationLevel to be enforced for this access.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.SetProperty(`0,System.Object)">
            <summary>
            Sets a property using the lowest AuthorizationLevel.
            </summary>
            <param name="propId">The PropertyIdTypeType of the property being set.</param>
            <param name="value">The new value of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPropertyBag`1.SetProperty(`0,System.Object,Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Sets a property enforcing a given AuthorizationLevel.
            </summary>
            <param name="propId">PropertyId of property to set.</param>
            <param name="value">New value of the property.</param>
            <param name="authLevel">The AuthorizationLevel to be enforced for this call.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.IPropertyBag`1.IsInvalid">
            <summary>
            When true, an exception will be thrown for all attempts to access to the PropertyBag.
            When false, normal access to the PropertyBag are allowed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobManagerTask">
            <summary>
            Represents an Azure Batch JobManager task. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.#ctor">
            <summary>
             Instantiates an unbound object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.JobManagerTaskPropertyIds})">
            <summary>
            Instantiates an object bound to the given Protocol Layer object.
            </summary>
            <param name="bindToThisJobManager"></param>
            <param name="constraintProvider"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.CreateManagerAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobManagerTaskPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobManagerTaskPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.CommandLine">
            <summary>
            Gets or sets the command-line to be used to launch the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.DisplayName">
            <summary>
            Gets or sets the display name of the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Id">
            <summary>
            Gets or sets the id of the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.KillJobOnCompletion">
            <summary>
            Specifies a value that indicates whether to terminate all tasks 
            in the job and complete the job when the job manager task completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.ResourceFiles">
            <summary>
            Gets or sets a set of Windows Azure blobs that are required to run the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.RunElevated">
            <summary>
            Gets or sets the value that indicates if run the task as admin
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.RunExclusive">
            <summary>
            Gets or sets the value that indicates if the JobManager use the compute node exclusively.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Constraints">
            <summary>
            Gets or sets the execution constraints for this JobManager task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.#ctor">
            <summary>
            Creates an unbound instance of JobPreparationTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.JobReleaseTaskPropertyIds})">
            <summary>
             creates a bound instance.
            </summary>
            <param name="protocolJobReleaseTask"></param>
            <param name="constraintProvider">pass an read-only CP as needed for Job, etc.  null gets you the default/rw CP.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.CreateJobReleaseAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobReleaseTaskPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobReleaseTaskPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.CommandLine">
            <summary>
            Gets or sets the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles">
            <summary>
            Gets or sets the collection of ResourceFile instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.RunElevated">
            <summary>
            Gets or sets the value that determines the elevation state of the process.  
            True specifies that the process is to run under elevation as Administrator.  
            False specifes no elevation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a task is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.RetentionTime">
            <summary>
            Gets or sets the duration of time for which files in the task's working directory are retained, from the time 
            it completes execution. After this duration, the task’s working directory is reclaimed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Release task on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed. 
            This property is only returned if the task is in completed state. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task. 
            This property is only returned if the task is in completed state. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time 
            the task is restarted this value is reset. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.State">
            <summary>
            Gets the current running state of the task.  Valid values are running, 
            and completed.  Running means the task is currently running. 
            Completed means the task has completed.  The Completed state includes the case where 
            the task exits successfully with exit code 0 and the cases 
            where the system fails to start the task process due to 
            scheduling errors or the retry limit has reached after numerous task failures. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            The Url to the root directory of the Job Release task on the compute node. 
            You can use this Url to retrieve files created by the task such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskSchedulingError">
            <summary>
            Gets the TaskSchedulingError encountered by the service in starting the task. 
            This property is only returned if there was an error in scheduling the task and it is now in completed state. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTaskPropertyBag`1">
            <summary>
            Provides Object Model property read/write binding access to protocol objects.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSchedulingError.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError)">
            <summary>
            Initialize a new instance of JobSchedulingError.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Category">
            <summary>
            Gets the category of the job scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Code">
            <summary>
            Gets a code for the job scheduling error.  See <see cref="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Message">
            <summary>
            Gets a message describing the job scheduling error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Details">
            <summary>
            Gets a list of additional error details related to the scheduling error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecification">
            <summary>
            The <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification"/> of a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobSpecification)">
            <summary>
            Instantiate an object bound to the given protocol layer object.
            </summary>
            <param name="protoJobSpec"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.CreateJobSpecAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobSpecificationPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobSpecificationPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings.  These environment variables are set for all tasks 
            in jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> (including the Job Manager, Job Preparation and Job
            Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Constraints">
            <summary>
            Gets or sets the execution constraints for jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.DisplayName">
            <summary>
            Gets or sets a display name for all jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when a job is started under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task for jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            The Batch service will run the Job Preparation task on a 
            compute node before starting any tasks of that job on that compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task for jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            The Batch service runs the Job Release task when the job ends,
            on each compute node where any task of the job has run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the tasks of jobs created
            under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with jobs created under this
            <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Priority">
            <summary>
            Gets or sets the priority of jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.
            </summary>
            <remarks>
            The default value is 0.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecificationPropertyMapper">
            <summary>
            Maps type constraints to strongly typed PropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecifictionPropertyConstraints`1">
            <summary>
            The constraints for each property.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.#ctor(Microsoft.Azure.Batch.PoolOperations,Microsoft.Azure.Batch.Protocol.Models.CloudPool,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Creates an instance bound to a real protocol pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.#ctor(Microsoft.Azure.Batch.PoolOperations,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Intantiates an unbound CloudPool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync">
            <summary>
            Deletes this pool.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Delete">
            <summary>
            Deletes this pool.
            </summary>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync"/>.</remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CreatePoolAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.  If the pool has not reached the target size after this time, the resize is stopped.  The default is 10 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.  If the pool has not reached the target size after this time, the resize is stopped.  The default is 10 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of this pool.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationState">
            <summary>
            Gets an <see cref="T:Microsoft.Azure.Batch.Common.AllocationState"/> which indicates what node allocation activity is occurring on the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust according to the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
            <remarks>
            <para>If false, the <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated"/> property is required, and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> must be null.</para>
            <para>If true, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> property is required, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated"/> must be null. The pool automatically resizes according to the formula.</para>
            <para>The default value is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>This property is required if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true.  It must be null if AutoScaleEnabled is false.</para>
            <para>The formula is checked for validity before the pool is created. If the formula is not valid, an exception is thrown when you try to commit the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleRun">
            <summary>
            Gets the results and errors from the last execution of the autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CreationTime">
            <summary>
            Gets the creation time for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentDedicated">
            <summary>
            Gets the number of compute nodes currently in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentOSVersion">
            <summary>
            Gets the Azure Guest OS Version currently installed on the virtual machines in the pool.  This may differ from <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion"/> if the pool state is <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.
            </summary>     
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.DisplayName">
            <summary>
            Gets or sets the display name of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ETag">
            <summary>
            Gets the ETag for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Id">
            <summary>
            Gets or sets the id of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between its compute nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions
            on the nodes of the pool. This may result in the pool not reaching its desired size.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.LastModified">
            <summary>
            Gets the last modified time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>The default value is 1. The maximum value of this setting depends on the size of the compute nodes
            in the pool (the <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize"/> property).</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.OSFamily">
            <summary>
            Gets or sets the Azure Guest OS family for the compute nodes in the pool.
            </summary>
            <remarks>
            See https://azure.microsoft.com/en-us/documentation/articles/cloud-services-guestos-update-matrix/ for families.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeError">
            <summary>
            Gets the resize error encountered while performing the last resize on the <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            This error is returned only when the Batch service encountered an error while resizing the pool,
            and when the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState">Steady</see>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
            <remarks>
            <para>This timeout applies only to manual scaling; it has no effect when <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true.</para>
            <para>The default value is 10 minutes.  The minimum value is 5 minutes.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.State">
            <summary>
            Gets the current state of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Statistics">
            <summary>
            Gets the resource usage statistics for the pool.
            </summary>
            <remarks>This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudPool"/> was retrieved with an
            <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> including the 'stats' attribute; otherwise it is null.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            This property must be null if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true.  It is required if AutoScaleEnabled is set to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
            </summary>
            <remarks>
            If omitted, the default value is the latest operating system version for the <see cref="P:Microsoft.Azure.Batch.CloudPool.OSFamily"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Url">
            <summary>
            Gets the URL of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">
            <summary>
            Gets or sets the size of compute node virtual machines in the pool.  All VMs in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines, see the Azure documentation.
            Batch supports all Azure VM sizes except ExtraSmall.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudTask">
            <summary>
            An Azure Batch task.  A task is a piece of work that is associated with a job and runs on a compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IBindingState">
            <summary>
            Discloses the existance and binding between any server-side object and the current client-side object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IBindingState.CurrentBindingState">
            <summary>
            Returns the BindingState for the current object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> class.
            </summary>
            <param name="id">The id of the task.</param>
            <param name="commandline">The command line of the task.</param>
            <remarks>The newly created CloudTask is initially not associated with any task in the Batch service.
            To associate it with a job and submit it to the Batch service, use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.#ctor(Microsoft.Azure.Batch.JobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.TaskPropertyIds})">
            <summary>
            Constructor used when creating Tasks that are bound to real protocol Tasks.
            </summary>
            <param name="parentJobId"></param>
            <param name="protocolTask"></param>
            <param name="inheritedBehaviors"></param>
            <param name="constraintProvider">The constraint provider to use when creating the CloudTask.  If null is specified, the default bound constraint provider is used.</param>
            <param name="parentJobOperations"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The staging operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFiles">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <returns>A collection of information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the files in the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.CreateTaskAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.TaskPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.TaskPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.AffinityInformation">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service to select a node on which to start the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ComputeNodeInformation">
            <summary>
            Gets information about the compute node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CreationTime">
            <summary>
            Gets the creation time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.DisplayName">
            <summary>
            Gets or sets the display name of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ETag">
            <summary>
            Gets the ETag for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.LastModified">
            <summary>
            Gets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousState">
            <summary>
            Gets the previous state of the task.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the task entered its previous state.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousStateTransitionTime property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.RunElevated">
            <summary>
            Gets or sets whether to run the task in elevated mode.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.State">
            <summary>
            Gets the current state of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.StateTransitionTime">
            <summary>
            Gets the time at which the task entered its current state
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Statistics">
            <summary>
            Gets resource usage statistics for the task.
            </summary>
            <remarks>This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> was retrieved with an
            <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> including the 'stats' attribute; otherwise it is null.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Url">
            <summary>
            Gets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.FilesToStage">
            <summary>
            Gets or sets a list of files to be staged for the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobStatistics">
            <summary>
            Resource usage statistics for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.Url">
            <summary>
            The url of the job stats.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.StartTime">
            <summary>
            Gets the start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.LastUpdateTime">
            <summary>
            Gets the end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all the tasks in the job. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all the tasks in the job. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WallClockTime">
            <summary>
            The total elapsed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) read operations made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) write operations made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOGiB">
            <summary>
            Gets the total bytes of I/O (network + disk) disk read made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOGiB">
            <summary>
            Gets the total bytes of I/O (network + disk) disk written made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.FailedTaskCount">
            <summary>
            Gets the total number of tasks failures in the job that failed during the given time range. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.TaskRetryCount">
            <summary>
            Gets the total number of retries occurred on all the tasks in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WaitTime">
            <summary>
            Gets the total wait time across all the tasks in the job. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Helper that converts from the protocol collection to an object model collection.
            </summary>
            <param name="protoNVPs"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Name">
            <summary>
            Gets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Value">
            <summary>
            Gets the value in the name-value pair.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATADetailLevel">
             <summary>
             Controls the amount of detail requested from the Azure Batch service when listing or
             retrieving resources, using OData query clauses.
             </summary>
             <remarks>
             <para>Azure Batch supports OData queries, which allow the client to gain finer control over query
             performance by controlling which resources are returned in List operations (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause"/>),
             and which properties of each resource are returned in List, Get or Refresh operations
             (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/> and <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/>).</para>
             <para>By default, if you do not pass a <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> to a List, Get or Refresh operation,
             the Batch client specifies no filter (all records are returned), no select clause (all simple properties are
             returned) and no expand clause (associated entities are not returned).  Consequently, by default, associated entity
             properties are null, rather than being populated like other properties.  Refer to individual class
             documentation to find out which properties are considered associated entities and need to be expanded
             to be populated.</para>
             <para>Because the OData queries are passed directly to the REST API, clause strings must use the JSON attribute
             names from the REST API, which are not always the same as .NET property names.  For example, the
             .NET <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">CloudPool.VirtualMachineSize</see> property corresponds to
             the vmSize attribute in the REST API; therefore, to filter a pool list operations by VM size, you would
             need to write vmSize rather than VirtualMachineSize in your filter string.  Refer to the REST API
             documentation to find out the JSON attribute name corresponding to a .NET property.</para>
             <para>For additional information about using OData to efficiently query the Azure Batch service, see
             <a href="https://azure.microsoft.com/en-us/documentation/articles/batch-efficient-list-queries/">Efficient List Queries</a> on MSDN.</para>
             </remarks>
             <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/>, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/> 
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code>
             </example>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with the specified clauses.
            </summary>
            <param name="filterClause">The filter clause.</param>
            <param name="selectClause">The select clause.</param>
            <param name="expandClause">The expand clause.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with empty clauses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause">
            <summary>
            Gets or sets the OData filter clause. Used to restrict a list operation to items that match specified criteria.
            </summary>
            <remarks>
            <para>This is an optional OData $filter expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398094">(see the OData specification)</a>.
            For example, you can restrict a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> operation to return
            only active pools with the expression <c>state eq 'active'</c>.</para>
            <para>Filters must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no filter expression, which means all resources are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause">
            <summary>
            Gets or sets the OData select clause. Used to retrieve only specific properties instead of all object properties.
            </summary>
            <remarks>
            <para>This is an optional OData $select expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398163">(see the OData specification)</a>.
            If you provide a SelectClause, then <b>only</b> the properties listed in that clause are populated; other properties
            have their default values (typically null).  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation with a SelectClause of <c>id,displayName</c>, then each <see cref="T:Microsoft.Azure.Batch.CloudPool"/> will have its 
            <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> properties
            populated, but other properties such as <see cref="P:Microsoft.Azure.Batch.CloudPool.State"/> will not be retrieved and therefore
            will have their default values (typically null).</para>
            <para>If, when an entity was retrieved (via a List, Get or Refresh), you specifed a SelectClause which did not include 
            the property or properties that uniquely identify the object
            (usually the Id property, but for <see cref="T:Microsoft.Azure.Batch.Certificate"/> the Thumbprint and ThumbprintAlgorithm properties,
            then any methods that access the Batch service to retrieve data or perform operations will fail.
            This includes most methods on the object, including <see cref="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> and <see cref="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            You can still access properties (though only properties included in the SelectClause will be populated).</para>
            <para>Selections must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no select expression, which means all properties are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause">
            <summary>
            Gets or sets the OData expand clause. Used to retrieve associated entities of the main entity being retrieved.
            </summary>
            <remarks>
            <para>This is an optional OData $expand expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398162">(see the OData specification)</a>.
            Properties containing associated entities will be null unless included in an ExpandClause.
            Specifically, if you perform a List, Get or Refresh and do not specify an ExpandClause, then all associated
            entity properties will be null.  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation without an ExpandClause then the <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/> property will be null.  To populate
            the Statistics property you must supply an ExpandClause of <c>stats</c>.  Refer to individual class
            documentation to find out which properties are considered associated entities.</para>
            <para>If you specify both an ExpandClause and a <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/>, then properties listed in the
            ExpandClause must be repeated in the SelectClause (because only properties listed in the SelectClause are
            included in the service response).  (This requirement does not arise if you do not specify a SelectClause, because that
            means 'include all properties in the response.')</para>
            <para>Expansions must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no expand expression, which means no associated objects are returned (and the
            corresponding properties are null).</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestInterceptor">
            <summary>
            This class enables an interceptor to inspect, modify or ignore a BatchRequest.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor">
            <summary>
            Derived classes can inspect, replace or modify a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor
            </summary>
            <param name="replacementInterceptor"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.NOOP(Microsoft.Azure.Batch.Protocol.BatchRequest@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler">
            <summary>
            This method will be called just before a BatchRequest is executed on the server.  
            The request can be inspected, replaced, modified or ignored.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler)">
            <summary>
            Initializes a new instance of RequestInterceptor that calls a given BatchRequestModificationInterceptHandler.
            </summary>
            <param name="interceptor">A delegate that will be allowed to inspect, modify or ignore a BatchRequest.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.NOOP(System.Object)">
            <summary>
            An interceptor that does nothing.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ReplacementInterceptHandler(Microsoft.Azure.Batch.Protocol.BatchRequest@)">
            <summary>
            A replacment interceptor that calls our modification interceptor.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler">
            <summary>
            Gets or sets the BatchRequestModificationInterceptHandler.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevelIntercept.AppendODATADetailLevel(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},Microsoft.Azure.Batch.DetailLevel)">
            <summary>
            OData detail level maps to a behavior.  
            this routine will take an existing (possibly null/empty) collection and appends 
            a new behavior that sets the OData predicates.
            </summary>
            <param name="perCallBehaviors"></param>
            <param name="detailLevel"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitorControl">
            <summary>
            Contains control settings used for optimal retrieval of state data via OData predicates.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitorControl.ODATAPredicateLimit">
            <summary>
            The maximum number of characters allowed for a single OData predicate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATAMonitorControl.DelayBetweenDataFetch">
            <summary>
            The minimum time between attempts to fetch data for a monitored instance.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ListDelegate`1">
            <summary>
            Use a lambda to construct the correct ListFoo calls with correct params.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor">
            <summary>
            A class that leverages OData predicates to poll the states of instances.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.WaitAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,System.String},Microsoft.Azure.Batch.ListDelegate{``0},System.TimeSpan,Microsoft.Azure.Batch.ODATADetailLevel,Microsoft.Azure.Batch.ODATAMonitorControl)">
            <summary>
            Polls the collection of instances until each has passed the condition at least once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionToMonitor"></param>
            <param name="condition"></param>
            <param name="getName"></param>
            <param name="listObjects"></param>
            <param name="timeout"></param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1">
            <summary>
            Will accept instances of T and construct a filter predicate.
            The predicate will be used (and reset) when it is full or if
            the given instance was to recently refreshed (DOS avoidance).
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._condition">
            <summary>
            Holds the delegate that determines of the given instance no longer needs to be polled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._listObjects">
            <summary>
            Delegate to fetch new instances fresh state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataDetailLevel">
            <summary>
            To be updated with filter predicate for refreshing instance state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataMonitorControl">
            <summary>
            Holds control data for this odata monitor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.SwapQueues">
            <summary>
            Will swap the queues.  This is the transition from one pass to the next.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.CallListAndProcessResults">
            <summary>
            Uses list func to fetch fresh data on the instances in the predicate.
            Instances that fail the condition are enqueued for the next pass.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.MonitorLastCall`1">
            <summary>
            A class to track the last time an instance was refreshed/monitored.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.RetryPolicyProvider">
            <summary>
            A RequestInterceptor that sets the RetryPolicy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.NoRetryProvider">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.NoRetry"/> policy.
            </summary>
            <returns>A provider configured to perform no retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.LinearRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform linear retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.ExponentialRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform exponential retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.#ctor(Microsoft.Azure.Batch.Common.IRetryPolicy)">
            <summary>
            Initializes a new behavior to set the retry policy.
            </summary>
            <param name="retryPolicy">The retry policy to set.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.RetryPolicyProvider.Policy">
            <summary>
            Gets or sets the retry policy to use.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ClientRequestIdProvider">
            <summary>
            Interceptor which contains a function used to generate a client request id to set as <see cref="P:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.ClientRequestId"/>. 
            If there are multiple instances of this then the last set wins. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.BatchRequest,System.Guid})">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.ClientRequestIdProvider"/> for use in setting the client request id of a request.
            </summary>
            <param name="generateClientRequestIdFunc">
            A function used to generate the client request id.  This function may be called more than once for any
            given operation due to retries.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.OSVersion">
            <summary>
            OSVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerable`1">
            <summary>
            Exposes synchronous and asynchronous enumerators based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for working with sequences that
            implement <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking an asynchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The asynchronous delegate to execute for each element in <paramref name="source"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method awaits the asynchronous delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking a synchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The delegate to execute for each element in <paramref name="source"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method completes execution of the delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1"/> from an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to create a list from.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The result
            of the task is a <see cref="T:System.Collections.Generic.List`1"/> containing all elements of the source sequence.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.Url">
            <summary>
            Gets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see cref="P:Microsoft.Azure.Batch.PoolStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.UsageStatistics">
            <summary>
            Gets statistics related to pool usage information, such as the amount of core-time used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.ResourceStatistics">
            <summary>
            Gets statistics related to resource consumption by compute nodes in the pool, such as average CPU utilization.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolUsageMetrics">
            <summary>
            The usage metrics for a single pool in a certain time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB">
            <summary>
            The cross data center network egress from the pool during this interval, in GiB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB">
            <summary>
            The cross data center network ingress to the pool during this interval, in GiB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.EndTime">
            <summary>
            The end time of the aggregation interval for this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.PoolId">
            <summary>
            The id of the pool whose metrics are aggregated in this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.StartTime">
            <summary>
            The start time of the aggregation interval covered by this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours">
            <summary>
            The total core hours used in the pool during this aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize">
            <summary>
            The size of virtual machine in the pool.  All virtual machines in a pool are the same size. 
            Azure Batch supports all Azure virtual machine sizes except ExtraSmall.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchConstants">
            <summary>
            Constants defined in batch client.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GroupVersionStringFormat">
            <summary>
            String format for Batch API group version.
            [YYYY-MM-DD]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MajorMinorVersionStringFormat">
            <summary>
            String format for Batch API major minor version.
            [Major.Minor]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ApiVersionStringFormat">
            <summary>
            String format for Batch API version.
            [GroupVersion.MajorMinorVersion]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.UTF8CharSet">
            <summary>
            utf-8 char set.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MetadataStringInUri">
            <summary>
            metadata string in url.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceMaxResults">
            <summary>
            The maximum results the Batch service can return.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.KB">
            <summary>
            A constant representing a kilo-byte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceRequestMaxPayload">
            <summary>
            The maximum size of a string property for the Batch service in bytes, 4MB is the limit.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceResponseMaxPayload">
            <summary>
            The maximum payload the Batch service can return (1000 * 4MB).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ForwardSlash">
            <summary>
            Forward slash.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.PropertySeparator">
            <summary>
            Property separator.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.LogSourceName">
            <summary>
            Common name to be used for all loggers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.DefaultCertificateAlgorithm">
            <summary>
            The default certificate algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.CertificateAlgorithmAndThumbprintDelimiter">
            <summary>
            Delimiter for the composition of certificate's algorithm and thumbprint.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpace">
            <summary>
            The namespace for all entity types defined in the EdmModel.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpaceDot">
            <summary>
            The entity namespace plus dot in the end.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.UnmappedEnumValueFromServer">
            <summary>
            Default unknown enum value from server.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.BatchCustomHeaderNamePrefix">
            <summary>
            The prefix for a Batch custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.AzureCustomHeaderNamePrefix">
            <summary>
            The prefix for an Azure custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Date">
            <summary>
            The date.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.KeyNameHeader">
            <summary>
            The key-name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.RequestId">
            <summary>
            A unique id for the current operation which is generated by the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no decoration such as curly braces 
            e.g. client-request-id: 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ReturnClientRequestId">
            <summary>
            The request header instructs whether the server to include the client-request-id in the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceVersion">
            <summary>
            The OData service version header.
            If specified by a client it means the client can interpret a message with the indicated version of the OData protocol. 
            The Batch service returns the OData version of the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MinDataServiceVersion">
            <summary>
            The minimum OData service version header.
            If specified it means that the response can be interpreted by a client that
            knows at least the indicated version (or later). 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MaxDataServiceVersion">
            <summary>
            The maximum OData service version header.
            If specified it means that the response can be interpreted by a client 
            that only knows up to the version indicated in this header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentType">
            <summary>
            Request: Mime type of request body (PUT/POST/PATCH) 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentLength">
            <summary>
            Content length header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentId">
            <summary>
            Content-ID header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Disabled">
            <summary>
            Disable header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.IsDirectory">
            <summary>
            IsDirectory header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.FileUrl">
            <summary>
            FileUrl Header
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CreationTime">
            <summary>
            Creation time (file).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRange">
            <summary>
            file range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRangeFormat">
            <summary>
            File range format in the header.
            {0} the file beginning position to read.
            {1} the file end position to read.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceId">
            <summary>
            The Batch service returns this header if responding with no body to POST, PUT, PATCH.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Location">
            <summary>
            Location header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ETag">
            <summary>
            ETag.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.LastModified">
            <summary>
            The last-modified header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchCredentials">
            <summary>
            Base class for credentials used to authenticate a HTTP request to Azure Batch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler">
            <summary>
            A <see cref="T:System.Net.Http.HttpMessageHandler"/> that adds authentication to outgoing requests using a <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler"/> class.
            </summary>
            <param name="credential">The <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/> to be used for authenticating requests made through this handler.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Adds authentication to a HTTP request then sends it to the inner handler to send to the server
            as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel the operation.</param>
            <returns>The response to the HTTP request</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest">
            <summary>
            The base class of all Batch requests.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the BatchRequest class.
            </summary>
            <param name="restClient">The rest client to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.RestClient">
            <summary>
            Gets or sets the REST client that will be used for this request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.Parameters">
            <summary>
            Gets the params needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.RetryPolicy">
            <summary>
            Gets or sets the retry policy to be applied.  
            Null means no retries will be attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.OperationContext">
            <summary>
            Gets the operation context associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.Timeout">
            <summary>
            Gets or sets the client side timeout for a request to the Batch service.
            </summary>
            <remarks>
            <para>
            This timeout applies to a single Batch service request; if a retry policy is specified, then each retry will be granted the
            full duration of this value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest.CancellationToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequest.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest"/>.
            </summary>
            <remarks>
            <para>
            Cancelling this token will cancel the currently ongoing request. This applies to the initial request as well 
            as any subsequent requests created due to <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequest.RetryPolicy"/>. Cancelling this token also forbids all 
            future retries of this <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest`2">
            <summary>
            A BatchRequest that contains enough information to make a particular call to the Batch Service.
            </summary>
            <typeparam name="TParams">The type of the parameters associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`2.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new BatchRequest for the specific Parameters and Response type.
            </summary>
            <param name="restClient">The rest client to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`2.ExecuteRequestAsync">
            <summary>
            Executes the request.
            </summary>
            <returns>An asynchronous operation of return type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`2.ExecuteRequestWithCancellationAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`1}})">
            <summary>
            Executes the specified function with a cancellation token which is a composite token for the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequest.Timeout"/> 
            and the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequest.CancellationToken"/>.
            </summary>
            <param name="func">The function defining what work to be called in a cancellable way</param>
            <returns>A task with the async state of the func</returns> 
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest`2.ServiceRequestFunc">
            <summary>
            Gets or sets the task to a call to the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest`2.Parameters">
            <summary>
            Gets the params needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest`2.TypedParameters">
            <summary>
            Gets or sets the strongly typed parameters used for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRestClientExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRestClient"/>.
            </summary>
            <summary>
            A client for accessing the Azure Batch REST API.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential"/> class.
            </summary>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The access key of the Batch account, as a Base64-encoded string.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.InitializeServiceClient``1(Hyak.Common.ServiceClient{``0})">
            <summary>
            Initialize a ServiceClient instance to process credentials.
            </summary>
            <typeparam name="T">Type of ServiceClient.</typeparam>
            <param name="client">The ServiceClient</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.KeyValue">
            <summary>
            Gets the account access key, as a Base64-encoded string.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchTokenCredential">
            <summary>
            BatchCredentials which implement Azure AD auth
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.DefaultAuthorizationScheme">
            <summary>
            The default authorization scheme.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="token">The OAuth authentication token.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.InitializeServiceClient``1(Hyak.Common.ServiceClient{``0})">
            <summary>
            Initialize a ServiceClient instance to process credentials.
            </summary>
            <typeparam name="T">Type of ServiceClient.</typeparam>
            <param name="client">The ServiceClient</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sign request
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.Token">
            <summary>
            Auth token
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.Logger.FormatLine(System.String,System.String,System.Object[])">
            <summary>
            Creates a well-formatted log entry so that logs can be easily parsed
            </summary>
            <param name="clientRequestId">The client-request-id.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Log entry that contains common log prefix and a copy of format in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.Logger.ShouldLog(Microsoft.Azure.Batch.Protocol.LogLevel,Microsoft.Azure.Batch.Protocol.LogLevel)">
            <summary>
            Determines if the current entry should be logged.
            </summary>
            <param name="entryLogLevel">Log level of the entry.</param>
            <param name="intentedLogLevel">Intended log level.</param>
            <returns><c>true</c> if the entry should be logged; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Core.NullType">
            <summary>
            A NullBatchReturn type.
            </summary>
            Make it to internal (no use so far)
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.Core.NullType.Value">
            <summary>
            Represents a no-return from Batch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.NullType.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.Core.NullType"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder">
            <summary>
            A <see cref="T:System.UriBuilder"/> style class for creating Uri query strings.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.parameters">
            <summary>
            Stores the query parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.Add(System.String,System.String)">
            <summary>
            Add the value with Uri escaping.
            </summary>
            <param name="name">The query name.</param>
            <param name="value">The query value.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.AppendToUri(System.Uri)">
            <summary>
            Append query parameter to an existing Uri. This takes care of any existing query parameters in the Uri.
            </summary>
            <param name="uri">Original Uri which may contain query parameters already.</param>
            <returns>The appended Uri.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.InsertToUri(System.Uri)">
            <summary>
            Insert query parameter to an existing Uri. This takes care of any existing query parameters in the Uri.
            </summary>
            <param name="uri">Original Uri which may contain query parameters already.</param>
            <returns>The appended Uri.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to modify the parameters.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to replace the parameters and/or operation context.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.NodeFileOperations">
            <summary>
            Contains operations for working with files on Azure Batch compute nodes.
            </summary>
            <summary>
            Contains operations for working with files on Azure Batch compute nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.INodeFileOperations">
            <summary>
            Contains operations for working with files on Azure Batch compute nodes.
            </summary>
            <summary>
            Contains operations for working with files on Azure Batch compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.GetFromTaskAsync(System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="jobId">
            The id of the job that contains the task.
            </param>
            <param name="taskId">
            The id of the task whose file you want to retrieve.
            </param>
            <param name="fileName">
            The path to the task file that you want to get the content of.
            </param>
            <param name="destinationStream">
            A <see cref="T:System.IO.Stream"/> to which to write the file content.
            </param>
            <param name="parameters">
            The parameters for the request.
            </param>
            <param name="cancellationToken">
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.GetNodeFilePropertiesFromTaskAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to get the properties of.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.GetFromComputeNodeAsync(System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="poolId">
            The id of the pool that contains the compute node.
            </param>
            <param name="nodeId">
            The id of the compute node that contains the file.
            </param>
            <param name="fileName">
            The path to the task file that you want to get the content of.
            </param>
            <param name="destinationStream">
            A <see cref="T:System.IO.Stream"/> to which to write the file content.
            </param>
            <param name="parameters">
            The parameters for the request.
            </param>
            <param name="cancellationToken">
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.GetNodeFilePropertiesFromComputeNodeAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the compute node file that you want to get the
            properties of.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.DeleteFromComputeNodeAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node from which you want to delete the file.
            </param>
            <param name='fileName'>
            The path to the file that you want to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.DeleteFromTaskAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            The path to the task file that you want to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.ListFromComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node whose files you want to list.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.ListFromTaskAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose files you want to list.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.ListNextFromComputeNodeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified node.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous ListFromComputeNode response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.INodeFileOperations.ListNextFromTaskAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous ListFromTask response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.GetFromTaskAsync(System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="jobId">
            Required. The id of the job that contains the task.
            </param>
            <param name="taskId">
            Required. The id of the task whose file you want to retrieve.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <param name="cancellationToken">
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.GetNodeFilePropertiesFromTaskAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to get the
            properties of.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to get the
            properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.GetFromComputeNodeAsync(System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="poolId">
            Required. The id of the pool that contains the compute node.
            </param>
            <param name="nodeId">
            Required. The id of the compute node that contains the file.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <param name="cancellationToken">
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.GetNodeFilePropertiesFromComputeNodeAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            Required. The path to the compute node file that you want to get
            the properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the NodeFileOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.DeleteFromComputeNodeAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node from which you want to delete
            the file.
            </param>
            <param name='fileName'>
            Required. The path to the file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.DeleteFromTaskAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.ListFromComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.ListFromTaskAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.ListNextFromComputeNodeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified node.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromComputeNode
            response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperations.ListNextFromTaskAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromTask response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.NodeFileOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.INodeFileOperations"/>.
            </summary>
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.INodeFileOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="operations">
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name="jobId">
            Required. The id of the job that contains the task.
            </param>
            <param name="taskId">
            Required. The id of the task whose file you want to retrieve.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="operations">
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name="jobId">
            Required. The id of the job that contains the task.
            </param>
            <param name="taskId">
            Required. The id of the task whose file you want to retrieve.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to get the
            properties of.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to get the
            properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to get the
            properties of.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to get the
            properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="operations">
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name="poolId">
            Required. The id of the pool that contains the compute node.
            </param>
            <param name="nodeId">
            Required. The id of the compute node that contains the file.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,System.IO.Stream,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters)">
            <summary>
            Gets the content of the specified task file.
            </summary>
            <param name="operations">
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name="poolId">
            Required. The id of the pool that contains the compute node.
            </param>
            <param name="nodeId">
            Required. The id of the compute node that contains the file.
            </param>
            <param name="fileName">
            Required. The path to the task file that you want to get the
            content of.
            </param>
            <param name="destinationStream">
            Required. A <see cref="T:System.IO.Stream"/> to which to write the file
            content.
            </param>
            <param name="parameters">
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            Required. The path to the compute node file that you want to get
            the properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            Required. The path to the compute node file that you want to get
            the properties of.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node from which you want to delete
            the file.
            </param>
            <param name='fileName'>
            Required. The path to the file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node from which you want to delete
            the file.
            </param>
            <param name='fileName'>
            Required. The path to the file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            Required. The path to the task file that you want to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists all of the files in task directories on the specified compute
            node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task whose files you want to list.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListNextFromComputeNode(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists all of the files in task directories on the specified node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromComputeNode
            response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListNextFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists all of the files in task directories on the specified node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromComputeNode
            response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListNextFromTask(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromTask response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.NodeFileOperationsExtensions.ListNextFromTaskAsync(Microsoft.Azure.Batch.Protocol.INodeFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.INodeFileOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous ListFromTask response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations">
            <summary>
            Contains operations for managing tasks in the Batch service.
            </summary>
            <summary>
            Contains operations for managing Azure Batch tasks
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.AddCollectionAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job which you want to add the tasks.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.AddCollection request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.AddAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            The id of the job to which the task is to be added.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.DeleteAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='jobId'>
            The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The id of the task to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task to get information about.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.ListAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.TerminateAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to terminate.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.UpdateAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Update request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.LogLevel">
            <summary>
            Specifies what messages to output to the log.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Off">
            <summary>
            Output no tracing and debugging messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Error">
            <summary>
            Output error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Warning">
            <summary>
            Output warnings and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Informational">
            <summary>
            Output informational messages, warnings, and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Verbose">
            <summary>
            Output all debugging and tracing messages.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OperationContext">
            <summary>
            Represents the context for a request to the Batch service and provides additional information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.OperationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.OperationContext.RequestResults">
            <summary>
            Gets or sets the list of request results for the current operation.  Each <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> corresponds to one
            request sent to the server.  There may be more than one item in this list in the case of retries.
            </summary>
            <value>An <see cref="T:System.Collections.IList"/> object that contains <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> objects that represent the request results created by the current operation.</value>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.NoRetry">
            <summary>
            Represents a retry policy that performs no retries.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor">
            <summary>
            A BatchClientBehavior that enables inspection and modification of the BatchResponse.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor"/> class.
            </summary>
            <param name="responseInterceptHandler">The method to invoke on the intercepted response.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler">
            <summary>
            Gets or sets the method to invoke on the intercepted response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler">
            <summary>
            A callback that can inspect and modify a BatchResponse.
            </summary>
            <param name="response">The response to be inspected and optionally modified.</param>
            <param name="request">The request to which the <paramref name="response"/> is a response.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.TaskODataExtensions">
            <summary>
            Extension methods to fill OData information for Task related objects
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudTaskOperations">
            <summary>
            Contains operations for managing tasks in the Batch service.
            </summary>
            <summary>
            Contains operations for managing Azure Batch tasks
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.GetMessageWriterSettings(System.Boolean,System.Boolean)">
            <summary>
            Get OData message writer settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.GetMessageReaderSettings">
            <summary>
            Get OData message reader settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.DeserializeAddTaskCollectionFromResponse(System.IO.Stream,System.Collections.Specialized.NameValueCollection,System.Int32)">
            <summary>
            Deserialize odata batch for AddTaskCollection.
            </summary>
            <param name="responseStream"></param>
            <param name="headers"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.SerializeAddTaskCollectionToRequest(System.IO.Stream,System.Net.Http.HttpRequestMessage,System.Uri,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CloudTask})">
            <summary>
            Serialize AddTask batch request.
            </summary>
            <param name="sendStream">The send stream.</param>
            <param name="request">The http request.</param>
            <param name="addTaskUri">The uri for add a task.</param>
            <param name="tasks">The list of tasks to be added.</param>
            <returns>A dictionary of pairs of Content-ID and task.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.AddCollectionAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job which you want to add the task.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.AddCollection request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the CloudTaskOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.AddAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job to which the task is to be added.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.DeleteAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to get information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.ListAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.TerminateAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.UpdateAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudTaskOperations.Update request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CloudTaskOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations"/>.
            </summary>
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICloudTaskOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job which you want to add the tasks.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.AddCollection request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job which you want to add the tasks.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.AddCollection request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to which the task is to be added.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to which the task is to be added.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to get information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job that contains the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to get information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Update request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudTaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ICloudTaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudTaskOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job containing the task.
            </param>
            <param name='taskId'>
            Required. The id of the task to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudTaskOperations.Update request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage">
            <summary>
            An implementation of IODataRequestMessage for Batch requests.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.#ctor(System.Net.Http.HttpRequestMessage,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage"/> class.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="stream">The stream for the request message.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.GetHeader(System.String)">
            <summary>
            Get the header.
            </summary>
            <param name="headerName">The header name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.GetStream">
            <summary>
            Get the send stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.SetHeader(System.String,System.String)">
            <summary>
            Set the header.
            </summary>
            <param name="headerName">The header name.</param>
            <param name="headerValue">The header value.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.Headers">
            <summary>
            The headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.Method">
            <summary>
            The http method.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.WABatchHttpODataRequestMessage.Url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage">
            <summary>
            An implementation of IODataResponseMessage for Batch responses.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.#ctor(System.IO.Stream,System.Collections.Specialized.NameValueCollection,System.Int32)">
            <summary>
            Ctor.
            </summary>
            <param name="stream">The response stream.</param>
            <param name="headers">The http headers.</param>
            <param name="status">The http status.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.GetHeader(System.String)">
            <summary>
            Get the header.
            </summary>
            <param name="headerName">The header name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.GetStream">
            <summary>
            Get the response stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.SetHeader(System.String,System.String)">
            <summary>
            Set the header.
            </summary>
            <param name="headerName">The header name.</param>
            <param name="headerValue">The header value.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.Headers">
            <summary>
            The http headers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.WABatchHttpODataResponseMessage.StatusCode">
            <summary>
            The http status.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Code">
            <summary>
            Gets a code for the pool resize error.  See <see cref="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Message">
            <summary>
            Gets a message describing the pool resize error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Values">
            <summary>
            Gets a list of additional error details related to the pool resize error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceStatistics">
            <summary>
            The resource statistics data for the pool. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see cref="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageCpuPercentage">
            <summary>
            Gets the average CPU usage across all compute nodes in the pool (percentage per compute node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageMemoryGiB">
            <summary>
            Gets the average memory usage in GiB across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Gets the peak memory usage in GiB across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageDiskGiB">
            <summary>
            Gets the average used disk space in GiB across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakDiskGiB">
            <summary>
            Gets the peak used disk space in GiB across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadIOps">
            <summary>
            Gets the total number of disk read operations across all compute nodes in the pool. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteIOps">
            <summary>
            Gets the total number of disk write operations across all compute nodes in the pool. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadGiB">
            <summary>
            Gets the total amount of data in GiB of disk reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteGiB">
            <summary>
            Gets the total amount of data in GiB of disk writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkReadGiB">
            <summary>
            Gets the total amount of data in GiB of network reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Gets the total amount of data in GiB of network writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskSchedulingPolicy">
            <summary>
            A scheduling policy for a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Batch.Common.ComputeNodeFillType)">
            <summary>
            Initializes a new scheduling policy with the specified fill type.
            </summary>
            <param name="fillType">The compute node fill type.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingPolicy.ComputeNodeFillType">
            <summary>
            The fill type of scheduling policy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTaskInformation">
            <summary>
            Specifies the detailed runtime information of the start task, including current state, error details, exit code, 
            start time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.State">
            <summary>
            Gets the current running state of the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.ExitCode">
            <summary>
            Gets the exit code of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.SchedulingError">
            <summary>
            Gets the error encountered by the service when scheduling the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.RetryCount">
            <summary>
            
            Gets the number of times the start task has been retried by the Batch system.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which execution of the start task was retried by the Batch service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskConstraints">
            <summary>
            Defines the constraints on a particular Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Instantiate a new object with the given values.
            </summary>
            <param name="maxWallClockTime">The max wall clock time of the task.</param>
            <param name="retentionTime">The retention time for all input and output files associated with the task.</param>
            <param name="maxTaskRetryCount">The maximum number of retries for the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a task is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.RetentionTime">
            <summary>
            Gets or sets the duration of time for which files in the task's working directory are retained, from the time 
            it completes execution. After this duration, the task’s working directory is reclaimed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.#ctor(Microsoft.Azure.Batch.JobScheduleOperations,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Constructs an unbound JobSchedule with the given name and defaults
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.#ctor(Microsoft.Azure.Batch.JobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Constructs a bound WorkItme bound to the given entity WI
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Disable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CreateJobScheduleAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobSchedulePropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.JobSchedulePropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CreationTime">
            <summary>
            Gets the creation time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.DisplayName">
            <summary>
            Gets or sets the display name of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ETag">
            <summary>
            Gets the ETag of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ExecutionInformation">
            <summary>
            Gets the execution information for the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Id">
            <summary>
            Gets or sets the id of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification">
            <summary>
            Gets or sets a <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification"/> containing details of the
            jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.LastModified">
            <summary>
            Gets the last modified time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousState">
            <summary>
            Gets the previous state of the job schedule.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job schedule entered its previous state.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousStateTransitionTime property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule">
            <summary>
            Gets or sets the schedule that determines when jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.State">
            <summary>
            Gets the current state of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.StateTransitionTime">
            <summary>
            Gets the time at which the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Statistics">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.JobScheduleStatistics"/> containing resource usage statistics
            for the entire lifetime of the job schedule.
            </summary>
            <remarks>This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> was retrieved with an
            <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> including the 'stats' attribute; otherwise it is null.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Url">
            <summary>
            Gets the URL of the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecificationPropertyBag`1">
            <summary>
            Provides property read/write access to a bound object.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskExecutionInformation">
            <summary>
            Task execution information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task.  This parameter is only returned if the task is in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError">
            <summary>
            Gets the error encountered by the service in starting the task. 
            This parameter is only returned if there was an error in scheduling the task and it is now in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount">
            <summary>
            Gets the number of times the task has been retried by the Batch service.  Every time the task exits with a non-zero code, 
            it is deemed as an application failure.  The Batch service will retry the task up to the specified MaxTaskRetryCount.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which this task’s execution was retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount">
            <summary>
            Gets the number of times this task’s execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Gets the most recent time at which this task’s execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskInformation">
            <summary>
            The compute node's task info class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Helper that converts from the protocol collection to an object model collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskUrl">
            <summary>
            Gets the task url.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.JobScheduleId">
            <summary>
            Gets the job schedule id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.JobId">
            <summary>
            Gets the job id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskId">
            <summary>
            Gets the task id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskState">
            <summary>
            Gets the task state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskSchedulingError">
            <summary>
            Information about an error when scheduling a task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Category">
            <summary>
            Gets the category of the task scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Code">
            <summary>
            Gets a code for the task scheduling error.  See <see cref="T:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Message">
            <summary>
            Gets a message describing the task scheduling error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Details">
            <summary>
            Gets a list of additional error details related to the scheduling error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStateMonitor">
            <summary>
            Provides utilities to help monitor CloudTask states.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAllAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            </summary>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WaitAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>True if the WaitAll timed out, false if it did not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            </summary>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WaitAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>True if the WaitAll timed out, false if it did not.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStatistics">
            <summary>
            Resource usage statistics for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.Url">
            <summary>
            The url of the taskstats.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.StartTime">
            <summary>
            The start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.LastUpdateTime">
            <summary>
            The end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.UserCpuTime">
            <summary>
            The total user mode CPU time (per core) consumed by the task. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.KernelCpuTime">
            <summary>
            The total kernel mode CPU time (per core) consumed by the task. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WallClockTime">
            <summary>
            The wall clock time of the task execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOps">
            <summary>
            The total number of disk I/O (network + disk) read operations made by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOps">
            <summary>
            The total number of disk I/O (network + disk) write operations made by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOGiB">
            <summary>
            The total bytes of I/O (network + disk) disk read by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOGiB">
            <summary>
            The total bytes of I/O (network + disk) disk written by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WaitTime">
            <summary>
            The wait time for a task is the time between the task creation and the start of the most recent task 
            execution (if the task is retried due to failures).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Utilities">
            <summary>
            Tools and utilities for the Azure Batch Service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Utilities.CreateTaskStateMonitor">
            <summary>
            Creates an TaskStateMonitor.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/> instance.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Utilities.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Utilities"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.RefreshMonitor.DelayBetweenDataFetch">
            <summary>
            The minimum time between attempts to fetch data for a monitored instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.RefreshMonitor.ODATAPredicateQuantum">
            <summary>
            The number of instance names used to construct an OData $filer predicate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RefreshMonitor.MontiorLastCall`1">
            <summary>
            A class to track the last time an instance was refreshed/monitored.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.UsageStatistics">
            <summary>
            Statistics related to pool usage data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see cref="P:Microsoft.Azure.Batch.UsageStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.DedicatedCoreTime">
            <summary>
            Gets the aggregated wall-clock time of the dedicated compute nodes being part of the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics">
            <summary>
            Informs the Commit() call that the state transfer between the client and server is 
            either a create-user or update-user operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.AddUser">
            <summary>
            The Commit operation is adding a new user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.UpdateUser">
            <summary>
            The Commit operation is updating an existing user.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUser">
            <summary>
            A user for a specific Azure Batch compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.#ctor(Microsoft.Azure.Batch.PoolOperations,System.String,System.String)">
            <summary>
            Instantiates a ComputeNodeUser object.
            </summary>
            <param name="poolOperations">The <see cref="T:Microsoft.Azure.Batch.PoolOperations"/> to be used for operations on ComputeNodeUsers.</param>
            <param name="poolId">The id of the CloudPool.</param>
            <param name="computeNodeId">The id of the compute node in which the ComputeNodeUser is to be or can be found.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asyncrhonous call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Name">
            <summary>
            Gets or sets the name.  
            If AddUser is specified for the commit operation, the value of this property is the name of the local windows account created.
            if UpdateUser is specified for the commit operation, the value of this property selects the local windows account to modify.
            Changing this property does not rename the local windows account on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin">
            <summary>
            Gets or sets the administrative privilege level of the user account. 
            The value of this property is ignored when UpdateUser is specified for the commit operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime">
            <summary>
            Gets or sets the expiry time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Password">
            <summary>
            Sets the password.  
            The password is not returned by the Azure Batch Service and cannot be read from the IUser instance.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNode">
            <summary>
            Summarizes the state of a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser">
            <summary>
            Instantiates an unbound ComputeNodeUser object to be populated by the caller and used to create a user account on the current compute node in the Azure Batch Service.
            </summary>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">The deallocation option to use when removing the compute node from the pool.</param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">The deallocation option to use when removing the compute node from the pool.</param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins an asynchronous request to get the specified NodeFile.
            </summary>
            <param name="fileName">The name of the NodeFile.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get the specified NodeFile.
            </summary>
            <param name="fileName">The name of the NodeFile.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A bound <see cref="T:Microsoft.Azure.Batch.NodeFile"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Exposes synchronous and asynchronous enumeration of the files for the node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the node. If false, returns only the files at the node directory root.</param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object and after the behavior implementing the DetailLevel.</param>
            <returns>An instance of IPagedEnumerable that can be used to enumerate objects using either synchronous or asynchronous patterns.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Id">
            <summary>
            Gets the id of compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Url">
            <summary>
            Gets the url of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.State">
            <summary>
            Gets the current state of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StateTransitionTime">
            <summary>
            Gets the time at which the compute node entered the current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.LastBootTime">
            <summary>
            The time at which the compute node was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AllocationTime">
            <summary>
            Gets the time at which this compute node was allocated to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.IPAddress">
            <summary>
            Gets the IP address associated with the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AffinityId">
            <summary>
            An opaque string that contains information about the location of the compute node. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize">
            <summary>
            Gets the size of virtual machines in the pool. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.TotalTasksRun">
            <summary>
            Gets the number of tasks that have been run on this compute node from the time it was allocated to this pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTaskInformation">
            <summary>
            Gets the detailed runtime information of the start task, including current state, error details, exit code, start time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.RecentTasks">
            <summary>
            Gets the execution information for the most recent tasks that ran on this compute node.
            Note that this element is only returned if at least one task was run on this compute node since the time it was 
            assigned to its current pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTask">
            <summary>
            Gets the start task associated with all compute nodes in this pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CertificateReferences">
            <summary>
            Gets the list of certificates installed on this compute node. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Errors">
            <summary>
            Gets the list of errors that are currently being encountered by the compute node. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNode.ComputeNodeBox">
            <summary>
            Encapsulates the properties of a compute node so as to allow atomic replacement for Refresh().
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeError">
            <summary>
            An error encountered by an Azure Batch compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Helper that converts from the protocol collection to an object model collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Code">
            <summary>
            Gets a code for the compute node error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Message">
            <summary>
            Gets a message describing the compute node error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.ErrorDetails">
            <summary>
            Gets a list of additional error details related to the compute node error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleExecutionInformation">
            <summary>
            The execution information for a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Gets the time at which the next job will be scheduled under this job schedule. 
            This property is only returned for active job schedules. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Gets the information about the most recent job under the job schedule.  
            Note that this element is only returned if the job schedule contains 
            at least one job under it.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime">
            <summary>
            Gets the completion time of the job schedule.  
            This property is only returned for completed job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeInformation">
            <summary>
            The compute node information class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeInformation.#ctor">
            <summary>
            Initialize a new instance of ComputeNodeInformation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.AffinityId">
            <summary>
            Gets or sets an opaque string that contains information about the location of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeId">
            <summary>
            Gets or sets the compute node id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeUrl">
            <summary>
            Gets or sets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.PoolId">
            <summary>
            Gets or sets the pool id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobManagerTaskPropertyMapper">
            <summary>
            Maps type constraints to strongly typed PropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobManagerTaskPropertyConstraints`1">
            <summary>
            The constraints for each property.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(System.String,Microsoft.Azure.Batch.Protocol.BatchCredentials)">
            <summary>
            instantiate based on creds and base url
            </summary>
            <param name="baseURL"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            instantiate based on customer provided rest proxy
            </summary>
            <param name="clientToUse"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ExecuteRequestInterceptors``2(Microsoft.Azure.Batch.Protocol.BatchRequest{``0,``1},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Applies and executes the RequestInterceptors found in behaviors collection.
            </summary>
            <typeparam name="ParamsType"></typeparam>
            <typeparam name="ResponseType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ProcessAndExecuteBatchRequest``2(Microsoft.Azure.Batch.Protocol.BatchRequest{``0,``1},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Process and executes a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ValidateReturnObject``1(System.Object)">
            <summary>
            Common validation that will throw if an incorrect isntance is returned by a custom behavior.
            </summary>
            <typeparam name="RequiredType"></typeparam>
            <param name="proxyObj"></param>
        </member>
        <member name="F:Microsoft.Azure.Batch.ProtocolLayer._disposed">
            <summary>
            A value indicating whether or not the ServiceClient has already
            been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.Dispose">
            <summary>
            Dispose the ProtocolLayer class. This function is not thread-safe.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RecentJob">
            <summary>
            Information about the most recent job under a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Url">
            <summary>
            Gets the url of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Id">
            <summary>
            Gets the Id of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Schedule">
            <summary>
            A schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Schedule"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunAfter">
            <summary>
            Gets or sets the wall clock time after which no job will be scheduled under this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunUntil">
            <summary>
            Gets or sets the earliest wall clock time at which to schedule the first job under this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.RecurrenceInterval">
            <summary>
            Gets or sets the time interval between the start times of two successive jobs under the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.StartWindow">
            <summary>
            Gets or sets the window of time within which a job must be started from the time the job schedule is ready to be scheduled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleStatistics">
            <summary>
            Resource usage statistics for a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.Url">
            <summary>
            Gets the url.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.StartTime">
            <summary>
            Gets the start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Gets the end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all the tasks in the job schedule. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all the tasks in the job schedule. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WallClockTime">
            <summary>
            Gets the total wall clock time of all the tasks in the job schedule. 
            Note that if any task was retried multiple times, this includes the wall clock time of all the task retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOps">
            <summary>
            Gets the total number of I/O read operations made by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOps">
            <summary>
            Gets the total number of I/O write operations made by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Gets the total bytes of I/O read by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Gets the total bytes of I/O written by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job schedule during the given time range.  
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.FailedTaskCount">
            <summary>
            Gets the total number of tasks in the job schedule that failed during the given time range. 
            If a task exits with a non-zero exit code, it is deemed as an application error, 
            and the system will rerun the task up to the given MaxRetryCount.  When the retry 
            count is reached, the task is deemed failed. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.TaskRetryCount">
            <summary>
            Gets the total number of retries occurred on all the tasks in the job schedule during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WaitTime">
            <summary>
            Gets the wait time for a task is the time between the task creation and 
            the start of the most recent task execution (if the task is retried due to failures).  
            This is the total wait time across all the tasks in the job schedule. 
            This value is only reported in the lifetime statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchException">
            <summary>
            Represents an exception for the Windows Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.BatchException"/> class by using the specified parameters.
            </summary>
            <param name="requestInformation">A <see cref="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation"/> object containing details about the request.</param>
            <param name="message">The exception message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.ToString">
            <summary>
            Generates a string which describes the exception.
            </summary>
            <returns>A string that represents the exception.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation">
            <summary>
            Gets information about the request which failed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperations">
            <summary>
            Operations for managing resources related to this specified account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IAccountOperations">
            <summary>
            Operations for managing resources related to this specified account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.GetAllJobsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account. Statistics are aggregated across all jobs that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.GetAllJobsLifetimeStatistics
            operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account. Statistics are aggregated across all pools that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.GetAllPoolsLifetimeStatistics
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListNextPoolUsageMetricsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListPoolUsageMetricsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='startTime'>
            The earliest time from which to include metrics. This must be at
            least two and a half hours before the current time.
            </param>
            <param name='endTime'>
            The latest time from which to include metrics. This must be at
            least two hours before the current time.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the AccountOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.GetAllJobsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account. Statistics are aggregated across all jobs that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.GetAllJobsLifetimeStatistics
            operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account. Statistics are aggregated across all pools that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.GetAllPoolsLifetimeStatistics
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListNextPoolUsageMetricsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListPoolUsageMetricsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='startTime'>
            Optional. The earliest time from which to include metrics. This
            must be at least two and a half hours before the current time.
            </param>
            <param name='endTime'>
            Optional. The latest time from which to include metrics. This must
            be at least two hours before the current time.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.AccountOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.IAccountOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.GetAllJobsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account. Statistics are aggregated across all jobs that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.GetAllJobsLifetimeStatistics
            operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.GetAllJobsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account. Statistics are aggregated across all jobs that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.GetAllJobsLifetimeStatistics
            operation.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account. Statistics are aggregated across all pools that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.GetAllPoolsLifetimeStatistics
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account. Statistics are aggregated across all pools that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.GetAllPoolsLifetimeStatistics
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNextPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNextPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='startTime'>
            Optional. The earliest time from which to include metrics. This
            must be at least two and a half hours before the current time.
            </param>
            <param name='endTime'>
            Optional. The latest time from which to include metrics. This must
            be at least two hours before the current time.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.IAccountOperations.
            </param>
            <param name='startTime'>
            Optional. The earliest time from which to include metrics. This
            must be at least two and a half hours before the current time.
            </param>
            <param name='endTime'>
            Optional. The latest time from which to include metrics. This must
            be at least two hours before the current time.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRestClient">
            <summary>
            A client for accessing the Azure Batch REST API.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchRestClient">
            <summary>
            A client for accessing the Azure Batch REST API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.ApiVersion">
            <summary>
            Gets the API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.BaseUri">
            <summary>
            Gets the URI used as the base for all cloud service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Credentials">
            <summary>
            Gets the credentials for authorizing to the Azure Batch API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.LongRunningOperationInitialTimeout">
            <summary>
            Gets or sets the initial timeout for Long Running Operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout for Long Running Operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Accounts">
            <summary>
            Operations for managing resources related to this specified account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Certificates">
            <summary>
            Operations for managing certificates installed onto Azure Batch
            compute nodes
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Jobs">
            <summary>
            Contains operations for managing Azure Batch jobs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.JobSchedules">
            <summary>
            Operations for managing Azure Batch job schedules. A job schedule
            specifies when to run jobs, and includes a specification that is
            used to create each job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Pools">
            <summary>
            Contains operations for managing Azure Batch pools.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Tasks">
            <summary>
            Contains operations for managing Azure Batch tasks
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.ComputeNodes">
            <summary>
            Contains operations for managing compute nodes in the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRestClient.Files">
            <summary>
            Contains operations for working with files on Azure Batch compute
            nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials,System.Uri)">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
            <param name='credentials'>
            Required. Gets the credentials for authorizing to the Azure Batch
            API.
            </param>
            <param name='baseUri'>
            Optional. Gets the URI used as the base for all cloud service
            requests.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials)">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
            <param name='credentials'>
            Required. Gets the credentials for authorizing to the Azure Batch
            API.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
            <param name='httpClient'>
            The Http client
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials,System.Uri,System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
            <param name='credentials'>
            Required. Gets the credentials for authorizing to the Azure Batch
            API.
            </param>
            <param name='baseUri'>
            Optional. Gets the URI used as the base for all cloud service
            requests.
            </param>
            <param name='httpClient'>
            The Http client
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials,System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the BatchRestClient class.
            </summary>
            <param name='credentials'>
            Required. Gets the credentials for authorizing to the Azure Batch
            API.
            </param>
            <param name='httpClient'>
            The Http client
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.Clone(Hyak.Common.ServiceClient{Microsoft.Azure.Batch.Protocol.BatchRestClient})">
            <summary>
            Clones properties from current instance to another BatchRestClient
            instance
            </summary>
            <param name='client'>
            Instance of BatchRestClient to clone to
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseAllocationState(System.String)">
            <summary>
            Parse enum values for type AllocationState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.AllocationStateToString(Microsoft.Azure.Batch.Common.AllocationState)">
            <summary>
            Convert an enum of type AllocationState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseCertificateFormat(System.String)">
            <summary>
            Parse enum values for type CertificateFormat.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.CertificateFormatToString(Microsoft.Azure.Batch.Common.CertificateFormat)">
            <summary>
            Convert an enum of type CertificateFormat to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseCertificateState(System.String)">
            <summary>
            Parse enum values for type CertificateState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.CertificateStateToString(Microsoft.Azure.Batch.Common.CertificateState)">
            <summary>
            Convert an enum of type CertificateState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseCertificateVisibility(System.String)">
            <summary>
            Parse enum values for type CertificateVisibility.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.CertificateVisibilityToString(Microsoft.Azure.Batch.Common.CertificateVisibility)">
            <summary>
            Convert an enum of type CertificateVisibility to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseCertStoreLocation(System.String)">
            <summary>
            Parse enum values for type CertStoreLocation.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.CertStoreLocationToString(Microsoft.Azure.Batch.Common.CertStoreLocation)">
            <summary>
            Convert an enum of type CertStoreLocation to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseComputeNodeDeallocationOption(System.String)">
            <summary>
            Parse enum values for type ComputeNodeDeallocationOption.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ComputeNodeDeallocationOptionToString(Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption)">
            <summary>
            Convert an enum of type ComputeNodeDeallocationOption to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseComputeNodeRebootOption(System.String)">
            <summary>
            Parse enum values for type ComputeNodeRebootOption.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ComputeNodeRebootOptionToString(Microsoft.Azure.Batch.Common.ComputeNodeRebootOption)">
            <summary>
            Convert an enum of type ComputeNodeRebootOption to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseComputeNodeReimageOption(System.String)">
            <summary>
            Parse enum values for type ComputeNodeReimageOption.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ComputeNodeReimageOptionToString(Microsoft.Azure.Batch.Common.ComputeNodeReimageOption)">
            <summary>
            Convert an enum of type ComputeNodeReimageOption to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseComputeNodeState(System.String)">
            <summary>
            Parse enum values for type ComputeNodeState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ComputeNodeStateToString(Microsoft.Azure.Batch.Common.ComputeNodeState)">
            <summary>
            Convert an enum of type ComputeNodeState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseDisableJobOption(System.String)">
            <summary>
            Parse enum values for type DisableJobOption.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.DisableJobOptionToString(Microsoft.Azure.Batch.Common.DisableJobOption)">
            <summary>
            Convert an enum of type DisableJobOption to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseJobPreparationTaskState(System.String)">
            <summary>
            Parse enum values for type JobPreparationTaskState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.JobPreparationTaskStateToString(Microsoft.Azure.Batch.Common.JobPreparationTaskState)">
            <summary>
            Convert an enum of type JobPreparationTaskState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseJobReleaseTaskState(System.String)">
            <summary>
            Parse enum values for type JobReleaseTaskState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.JobReleaseTaskStateToString(Microsoft.Azure.Batch.Common.JobReleaseTaskState)">
            <summary>
            Convert an enum of type JobReleaseTaskState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseJobScheduleState(System.String)">
            <summary>
            Parse enum values for type JobScheduleState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.JobScheduleStateToString(Microsoft.Azure.Batch.Common.JobScheduleState)">
            <summary>
            Convert an enum of type JobScheduleState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseJobState(System.String)">
            <summary>
            Parse enum values for type JobState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.JobStateToString(Microsoft.Azure.Batch.Common.JobState)">
            <summary>
            Convert an enum of type JobState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParsePoolLifetimeOption(System.String)">
            <summary>
            Parse enum values for type PoolLifetimeOption.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.PoolLifetimeOptionToString(Microsoft.Azure.Batch.Common.PoolLifetimeOption)">
            <summary>
            Convert an enum of type PoolLifetimeOption to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParsePoolState(System.String)">
            <summary>
            Parse enum values for type PoolState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.PoolStateToString(Microsoft.Azure.Batch.Common.PoolState)">
            <summary>
            Convert an enum of type PoolState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseSchedulingErrorCategory(System.String)">
            <summary>
            Parse enum values for type SchedulingErrorCategory.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.SchedulingErrorCategoryToString(Microsoft.Azure.Batch.Common.SchedulingErrorCategory)">
            <summary>
            Convert an enum of type SchedulingErrorCategory to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseStartTaskState(System.String)">
            <summary>
            Parse enum values for type StartTaskState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.StartTaskStateToString(Microsoft.Azure.Batch.Common.StartTaskState)">
            <summary>
            Convert an enum of type StartTaskState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.ParseTaskState(System.String)">
            <summary>
            Parse enum values for type TaskState.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRestClient.TaskStateToString(Microsoft.Azure.Batch.Common.TaskState)">
            <summary>
            Convert an enum of type TaskState to a string.
            </summary>
            <param name='value'>
            The value to convert to a string.
            </param>
            <returns>
            The enum value as a string.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.ApiVersion">
            <summary>
            Gets the API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.BaseUri">
            <summary>
            Gets the URI used as the base for all cloud service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Credentials">
            <summary>
            Gets the credentials for authorizing to the Azure Batch API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.LongRunningOperationInitialTimeout">
            <summary>
            Gets or sets the initial timeout for Long Running Operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout for Long Running Operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Accounts">
            <summary>
            Operations for managing resources related to this specified account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Certificates">
            <summary>
            Operations for managing certificates installed onto Azure Batch
            compute nodes
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Jobs">
            <summary>
            Contains operations for managing Azure Batch jobs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.JobSchedules">
            <summary>
            Operations for managing Azure Batch job schedules. A job schedule
            specifies when to run jobs, and includes a specification that is
            used to create each job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Pools">
            <summary>
            Contains operations for managing Azure Batch pools.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Tasks">
            <summary>
            Contains operations for managing Azure Batch tasks
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.ComputeNodes">
            <summary>
            Contains operations for managing compute nodes in the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRestClient.Files">
            <summary>
            Contains operations for working with files on Azure Batch compute
            nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperations">
            <summary>
            Operations for managing certificates installed onto Azure Batch compute
            nodes
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations">
            <summary>
            Operations for managing certificates installed onto Azure Batch compute
            nodes
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.CancelDeletionAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters,System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.CancelDeletion request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.DeleteAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the CertificateOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.CancelDeletionAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters,System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate being deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.CancelDeletion request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.DeleteAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to be deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CertificateOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate being deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.CancelDeletion request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate being deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.CancelDeletion request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to be deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to be deleted.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='thumbprintAlgorithm'>
            Required. The algorithm used to derive the thumbprint parameter.
            This must be sha1.
            </param>
            <param name='thumbprint'>
            Required. The thumbprint of the certificate to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICertificateOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CertificateOperations.List request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudJobOperations">
            <summary>
            Contains operations for managing Azure Batch jobs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICloudJobOperations">
            <summary>
            Contains operations for managing Azure Batch jobs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <param name='jobId'>
            The id of the job to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.DisableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters,System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='jobId'>
            The id of the job to disable.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.EnableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters,System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='jobId'>
            The id of the job to enable.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListFromJobScheduleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule from which you want to get a list of
            jobs.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListNextFromJobScheduleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListNextPreparationAndReleaseTaskStatusAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.ListPreparationAndReleaseTaskStatusAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.TerminateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='jobId'>
            The id of the job to terminate.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobOperations.UpdateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Update request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the CloudJobOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <param name='jobId'>
            Required. The id of the job to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.DisableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters,System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='jobId'>
            Required. The id of the job to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.EnableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters,System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='jobId'>
            Required. The id of the job to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListFromJobScheduleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule from which you want to get a
            list of jobs.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListNextFromJobScheduleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListNextPreparationAndReleaseTaskStatusAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.ListPreparationAndReleaseTaskStatusAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.TerminateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='jobId'>
            Required. The id of the job to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperations.UpdateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobOperations.Update request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CloudJobOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICloudJobOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters)">
            <summary>
            Deletes a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters)">
            <summary>
            Deletes a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule from which you want to get a
            list of jobs.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule from which you want to get a
            list of jobs.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNextFromJobSchedule(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNextFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.List or ListFromJobSchedule
            request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNextPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListNextPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a
            CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Update request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ICloudJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            Reference to the Microsoft.Azure.Batch.Protocol.ICloudJobOperations.
            </param>
            <param name='jobId'>
            Required. The id of the job whose properties you want to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobOperations.Update request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations">
            <summary>
            Operations for managing Azure Batch job schedules. A job schedule
            specifies when to run jobs, and includes a specification that is used
            to create each job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations">
            <summary>
            Operations for managing Azure Batch job schedules. A job schedule
            specifies when to run jobs, and includes a specification that is used
            to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.DisableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters,System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to disable.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.EnableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters,System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to enable.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.ExistsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters,System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule which you want to check.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to get.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.TerminateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to terminate.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.UpdateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Update request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the CloudJobScheduleOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.DisableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters,System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.EnableAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters,System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.ExistsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters,System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule which you want to check.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.TerminateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters,System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.UpdateAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Update request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to disable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Disable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to enable.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Enable request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule which you want to check.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule which you want to check.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to terminate.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Terminate request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Update request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudJobScheduleOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudJobScheduleOperations.
            </param>
            <param name='jobScheduleId'>
            Required. The id of the job schedule to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudJobScheduleOperations.Update request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudPoolOperations">
            <summary>
            Contains operations for managing Azure Batch pools.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations">
            <summary>
            Contains operations for managing Azure Batch pools.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='poolId'>
            The id of the pool to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.DisableAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to disable automatic scaling.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.DisableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.EnableAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to enable automatic scaling.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.EnableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.EvaluateAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to evaluate the automatic scaling
            formula.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.EvaluateAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.ExistsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.ResizeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters,System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to resize.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Resize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.StopResizeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters,System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not
            restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the
            pool maintains its current state.
            </summary>
            <param name='poolId'>
            The id of the pool whose resizing you want to stop.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.StopResize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.UpdatePropertiesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpdateProperties request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.UpgradeOSAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters,System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to upgrade.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpgradeOS request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the CloudPoolOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.AddAsync(Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.DeleteAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.DisableAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool on which to disable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.DisableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.EnableAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool on which to enable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.EnableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.EvaluateAutoScaleAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool on which to evaluate the automatic
            scaling formula.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.EvaluateAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.ExistsAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters,System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.GetAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.ListAsync(Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.PatchAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.ResizeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters,System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to resize.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.Resize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.StopResizeAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters,System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not
            restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the
            pool maintains its current state.
            </summary>
            <param name='poolId'>
            Required. The id of the pool whose resizing you want to stop.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.StopResize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.UpdatePropertiesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpdateProperties request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.UpgradeOSAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters,System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool to upgrade.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpgradeOS request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CloudPoolOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.ICloudPoolOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Add request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Delete request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to disable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.DisableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to disable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.DisableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to enable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.EnableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to enable automatic scaling.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.EnableAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to evaluate the automatic
            scaling formula.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.EvaluateAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool on which to evaluate the automatic
            scaling formula.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.EvaluateAutoScale request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Exists request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to get.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Patch request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to resize.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Resize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to resize.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.Resize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not
            restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the
            pool maintains its current state.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool whose resizing you want to stop.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.StopResize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not
            restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the
            pool maintains its current state.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool whose resizing you want to stop.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.StopResize request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpdateProperties request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpdateProperties request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to upgrade.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpgradeOS request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CloudPoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.ICloudPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.ICloudPoolOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool to upgrade.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a CloudPoolOperations.UpgradeOS request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations">
            <summary>
            Contains operations for managing compute nodes in the Batch service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations">
            <summary>
            Contains operations for managing compute nodes in the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.AddUserAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to create a user account.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.AddUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.DeleteUserAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.DeleteUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to get information about.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetRemoteDesktopAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which you want to get the Remote
            Desktop Protocol file.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.GetRemoteDesktop request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to list nodes.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextLink'>
            A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.RebootAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters,System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reboot request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ReimageAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters,System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node on which you want to reinstall the
            operating system.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reimage request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.RemoveAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters,System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to remove nodes.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Remove request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.UpdateUserAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.UpdateUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Initializes a new instance of the ComputeNodeOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.AddUserAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters,System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to create a user
            account.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.AddUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.DeleteUserAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters,System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to delete a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.DeleteUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to get
            information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetRemoteDesktopAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node for which you want to get the
            Remote Desktop Protocol file.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.GetRemoteDesktop request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool from which you want to list nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListNextAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.RebootAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters,System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to restart.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reboot request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ReimageAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters,System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node on which you want to reinstall
            the operating system.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reimage request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.RemoveAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters,System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='poolId'>
            Required. The id of the pool from which you want to remove nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Remove request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.UpdateUserAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to update a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <param name='cancellationToken'>
            Cancellation token.
            </param>
            <returns>
            Response to a ComputeNodeOperations.UpdateUser request.
            </returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.Client">
            <summary>
            Gets a reference to the
            Microsoft.Azure.Batch.Protocol.BatchRestClient.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions">
            <summary>
            Provide extension methods for <see cref="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to create a user
            account.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.AddUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to create a user
            account.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.AddUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to delete a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.DeleteUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to delete a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to delete.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.DeleteUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to get
            information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to get
            information about.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Get request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node for which you want to get the
            Remote Desktop Protocol file.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.GetRemoteDesktop request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node for which you want to get the
            Remote Desktop Protocol file.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.GetRemoteDesktop request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool from which you want to list nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool from which you want to list nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='nextLink'>
            Required. A nextLink URL from a previous List response.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.List request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to restart.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reboot request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node that you want to restart.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reboot request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node on which you want to reinstall
            the operating system.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reimage request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the compute node on which you want to reinstall
            the operating system.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Reimage request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Remove(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool from which you want to remove nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Remove request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RemoveAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool from which you want to remove nodes.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.Remove request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to update a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.UpdateUser request.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <param name='operations'>
            Reference to the
            Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.
            </param>
            <param name='poolId'>
            Required. The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            Required. The id of the machine on which you want to update a user
            account.
            </param>
            <param name='userName'>
            Required. The name of the user account to update.
            </param>
            <param name='parameters'>
            Required. The parameters for the request.
            </param>
            <returns>
            Response to a ComputeNodeOperations.UpdateUser request.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AllocationState">
            <summary>
            Indicates whether a pool is resizing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Steady">
            <summary>
            The pool is not resizing. There are no changes to the number of
            nodes in the pool in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing">
            <summary>
            The pool is resizing; that is, compute nodes are being added to or
            removed from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping">
            <summary>
            The pool was resizing, but the user has requested that the resize
            be stopped, but the stop request has not yet been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Unmapped">
            <summary>
            The service reported a state that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateFormat">
            <summary>
            Certificate format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Pfx">
            <summary>
            Personal Information Exchange (PKCS #12) format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Cer">
            <summary>
            X.509 certificate format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Unmapped">
            <summary>
            The service reported a format that is not recognised by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateState">
            <summary>
            The state of a certificate
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Active">
            <summary>
            The certificate is available for use in pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting">
            <summary>
            The user has requested that the certificate be deleted, but the
            delete operation has not yet completed. You may not reference the
            certificate when creating or updating pools .
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed">
            <summary>
            The user requested that the certificate be deleted, but there are
            pools that still have references to the certificate, or it is
            still installed on one or more compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Unmapped">
            <summary>
            The service reported a state that is not recognised by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateVisibility">
            <summary>
            Specifies which user accounts on a compute node should have access to
            the private data of a certificate.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Invalid">
            <summary>
            Represents the lack of a visibility value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.StartTask">
            <summary>
            The user account under which the start task is run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Task">
            <summary>
            The accounts under which job tasks are run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.RemoteDesktop">
            <summary>
            The accounts under which users remotely access the node (using
            Remote Desktop).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Unmapped">
            <summary>
            The service reported a visibility that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertStoreLocation">
            <summary>
            The location of a certificate store on a pool's compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.Invalid">
            <summary>
            Represents the lack of a location value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.CurrentUser">
            <summary>
            The X.509 certificate store used by the current user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.LocalMachine">
            <summary>
            The X.509 certificate store assigned to the local machine.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.Unmapped">
            <summary>
            The service reported a location that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption">
            <summary>
            Specifies when compute nodes may be removed from a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Remove nodes as soon as tasks have been
            terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Remove nodes
            as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Remove nodes when all tasks have completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Remove nodes when all task retention periods have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeFillType">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Invalid">
            <summary>
            Represents the lack of a type value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Spread">
            <summary>
            Tasks should be assigned evenly across all nodes in the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Pack">
            <summary>
            As many tasks as possible (maxTasksPerNode) should be assigned to
            each node in the pool before any tasks are assigned to the next
            node in the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Unmapped">
            <summary>
            The service reported a type that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption">
            <summary>
            Specifies when to reboot a compute node and what to do with currently
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Restart the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Restart the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Restart the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Restart the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption">
            <summary>
            Specifies when to reimage the compute node and what to do with
            currently running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Reimage the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Reimage the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Reimage the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Reimage the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeState">
            <summary>
            The state of a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle">
            <summary>
            The compute node is not currently running a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Rebooting">
            <summary>
            The compute node is rebooting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Reimaging">
            <summary>
            The compute node is being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running">
            <summary>
            The compute node is running one or more tasks (other than the start
            task).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unusable">
            <summary>
            The compute node cannot be used for task execution due to errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Creating">
            <summary>
            The Batch service has obtained the underlying virtual machine from
            Azure Compute, but it has not yet started to join a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Starting">
            <summary>
            The Batch service is starting on the underlying virtual machine.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.WaitingForStartTask">
            <summary>
            The start task has started running on the compute node, but
            waitForSuccess is set and the start task has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.StartTaskFailed">
            <summary>
            The start task has failed on the compute node (and exhausted all
            retries), and waitForSuccess is set.  The node is not usable for
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unknown">
            <summary>
            The Batch service has lost contact with the compute node, and does
            not know its true state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.LeavingPool">
            <summary>
            The compute node is leaving the pool, either because the user
            explicitly removed it or because the pool is resizing or
            autoscaling down.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unmapped">
            <summary>
            The service reported a state that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DisableJobOption">
            <summary>
            Specifies what to do with active tasks during a disable job operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Wait">
            <summary>
            Allow currently running tasks to complete.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobPreparationTaskState">
            <summary>
            The state of a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Running">
            <summary>
            The task is currently running (including retrying).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed">
            <summary>
            The task has exited with exit code 0, or the task has exhausted its
            retry limit, or the Batch service was unable to start the task due
            to scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Unmapped">
            <summary>
            The service reported a state that is not recognised by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobReleaseTaskState">
            <summary>
            The state of a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Running">
            <summary>
            The task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed">
            <summary>
            The task has exited, or the Batch service was unable to start the
            task due to scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Unmapped">
            <summary>
            The service reported a state that is not recognised by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobScheduleState">
            <summary>
            The state of a job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active">
            <summary>
            The job schedule is active and will create jobs as per its schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Completed">
            <summary>
            The schedule has terminated, either by reaching its end time or by
            the user terminating it explicitly.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Disabled">
            <summary>
            The user has disabled the schedule. The scheduler will not initiate
            any new jobs will on this schedule, but any existing active job
            will continue to run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating">
            <summary>
            The schedule has no more work to do, or has been explicitly
            terminated by the user, but the termination operation is still in
            progress. The scheduler will not initiate any new jobs for this
            schedule, nor is any existing job active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting">
            <summary>
            The user has requested that the schedule be deleted, but the delete
            operation is still in progress. The scheduler will not initiate
            any new jobs for this schedule, but any existing active job will
            continue to run. The schedule will be deleted when the existing
            job completes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Unmapped">
            <summary>
            The service reported a state that is not recognised by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobState">
            <summary>
            The state of job
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Active">
            <summary>
            The job is available to have tasks scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabling">
            <summary>
            A user has requested that the job be disabled, but the disable
            operation is still in progress (for example, waiting for tasks to
            terminate).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabled">
            <summary>
            A user has disabled the job. No tasks are running, and no new tasks
            will be scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Enabling">
            <summary>
            A user has requested that the job be enabled, but the enable
            operation is still in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Terminating">
            <summary>
            The job is about to complete, either because a Job Manager task has
            completed or because the user has terminated the job, but the
            terminate operation is still in progress (for example, because Job
            Release tasks are running).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Completed">
            <summary>
            All tasks have terminated, and the system will not accept any more
            tasks or any further changes to the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Deleting">
            <summary>
            A user has requested that the job be deleted, but the delete
            operation is still in progress (for example, because the system is
            still terminating running tasks).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Unmapped">
            <summary>
            The service reported a state that is not recognised by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolLifetimeOption">
            <summary>
            Specifies the minimum lifetime of created auto pools, and how multiple
            jobs on a schedule are assigned to pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Invalid">
            <summary>
            Represents the lack of an option value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.JobSchedule">
            <summary>
            The pool exists for the lifetime of the job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Job">
            <summary>
            The pool exists for the lifetime of the job to which it is
            dedicated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Unmapped">
            <summary>
            The service reported an option that is not recognised by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolState">
            <summary>
            The state of a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Active">
            <summary>
            The pool is fully available to run tasks.  A pool enters this state
            when it is created and remains in this state until it is deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Deleting">
            <summary>
            The user has requested that the pool be deleted, but the delete
            operation has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading">
            <summary>
            The user has requested that the operating system of the pool's
            nodes be upgraded, but the upgrade operation has not yet completed
            (that is, some nodes in the pool have not yet been upgraded).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Unmapped">
            <summary>
            The service reported a state that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.SchedulingErrorCategory">
            <summary>
            The category of a task scheduling error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.Invalid">
            <summary>
            Represents the lack of a category value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.UserError">
            <summary>
            The error was in the task specification provided by the user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.ServerError">
            <summary>
            The error occurred in the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.Unmapped">
            <summary>
            The service reported a category that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.StartTaskState">
            <summary>
            The state of a start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Running">
            <summary>
            The start task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Completed">
            <summary>
            The start task has exited with exit code 0, or the start task has
            failed and the retry limit has reached, or the start task process
            did not run due to scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Unmapped">
            <summary>
            The service reported a state that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskState">
            <summary>
            The state of a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Invalid">
            <summary>
            Represents the lack of a state value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Active">
            <summary>
            The task is queued and able to run, but is not currently assigned
            to a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Preparing">
            <summary>
            The task has been assigned to a compute node, but is waiting for a
            required Job Preparation task to complete on the node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Running">
            <summary>
            The task is running on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Completed">
            <summary>
            The task is no longer eligible to run, usually because the task has
            finished successfully, or the task has finished unsuccessfully and
            has exhausted its retry limit.  A task is also marked as completed
            if an error occurred launching the task, or when the task has been
            terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Unmapped">
            <summary>
            The service reported a state that is not recognized by this version
            of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccessCondition">
            <summary>
            Specifies conditional headers for a HTTP request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccessCondition.#ctor">
            <summary>
            Initializes a new instance of the AccessCondition class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccessCondition.IfMatchETag">
            <summary>
            Optional. Gets or sets an ETag to include in an If-Match header. If
            present on a request, the operation will occur only if the
            resource's ETag exactly matches this string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccessCondition.IfModifiedSinceTime">
            <summary>
            Optional. Gets or sets the time for an If-Modified-Since header. If
            present on a request, the operation will occur only if the
            resource has been modified since the specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccessCondition.IfNoneMatchETag">
            <summary>
            Optional. Gets or sets an ETag to include in an If-None-Match
            header. If present on a request, the operation will occur only if
            the resource's ETag does not match this string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccessCondition.IfNotModifiedSinceTime">
            <summary>
            Optional. Gets or sets the time for an If-Unmodified-Since header.
            If present on a request, the operation will occur only if the
            resource has not been modified since the specified time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters">
            <summary>
            Parameters for an AccountOperations.GetAllJobsLifetimeStatistics
            request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchParameters">
            <summary>
            Standard parameters for requests to the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.#ctor">
            <summary>
            Initializes a new instance of the BatchParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.AccessCondition">
            <summary>
            Optional. Gets or sets conditional headers for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.ClientRequestId">
            <summary>
            Optional. Gets or sets an id for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.DetailLevel">
            <summary>
            Optional. Gets or sets OData query options for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchParameters.ServerTimeout">
            <summary>
            Optional. Gets or sets the maximum time that the server can spend
            processing the request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsParameters.#ctor">
            <summary>
            Initializes a new instance of the
            AccountGetAllJobsLifetimeStatisticsParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsResponse">
            <summary>
            Response to an AccountOperations.GetAllJobsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchOperationResponse">
            <summary>
            Represents a HTTP response from the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchOperationResponse.#ctor">
            <summary>
            Initializes a new instance of the BatchOperationResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchOperationResponse.ClientRequestId">
            <summary>
            Optional. Gets the ClientRequestId provided by the client during
            the request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchOperationResponse.ETag">
            <summary>
            Optional. Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchOperationResponse.LastModified">
            <summary>
            Optional. Gets the content of the Last-Modified HTTP response
            header.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsResponse.#ctor">
            <summary>
            Initializes a new instance of the
            AccountGetAllJobsLifetimeStatisticsResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobStatistics)">
            <summary>
            Initializes a new instance of the
            AccountGetAllJobsLifetimeStatisticsResponse class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllJobsLifetimeStatisticsResponse.JobsLifetimeStatistics">
            <summary>
            Required. Gets or sets lifetime statistics for all of the jobs in
            the account
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters">
            <summary>
            Parameters for an AccountOperations.GetAllPoolsLifetimeStatistics
            request
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsParameters.#ctor">
            <summary>
            Initializes a new instance of the
            AccountGetAllPoolsLifetimeStatisticsParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsResponse">
            <summary>
            Response to an AccountOperations.GetAllPoolsLifetimeStatistics request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsResponse.#ctor">
            <summary>
            Initializes a new instance of the
            AccountGetAllPoolsLifetimeStatisticsResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)">
            <summary>
            Initializes a new instance of the
            AccountGetAllPoolsLifetimeStatisticsResponse class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountGetAllPoolsLifetimeStatisticsResponse.PoolsLifetimeStatistics">
            <summary>
            Required. Gets or sets lifetime statistics for all of the pools in
            the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters">
            <summary>
            Parameters for an AccountOperations.ListPoolUsageMetrics request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters.#ctor">
            <summary>
            Initializes a new instance of the
            AccountListPoolUsageMetricsParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsResponse">
            <summary>
            Response to an AccountOperations.ListPoolUsageMetrics request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsResponse.#ctor">
            <summary>
            Initializes a new instance of the
            AccountListPoolUsageMetricsResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics},System.String)">
            <summary>
            Initializes a new instance of the
            AccountListPoolUsageMetricsResponse class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListPoolUsageMetricsResponse.PoolUsageMetricsList">
            <summary>
            Required. Gets or sets the pool usage metrics data.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult">
            <summary>
            The result of a single result of AddTask request for
            CloudTaskOperations.AddCollection request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.#ctor">
            <summary>
            Initializes a new instance of the AddTaskResult class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.AzureError">
            <summary>
            Optional. Gets and sets the error result if request failed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.ClientRequestId">
            <summary>
            Optional. Gets and sets the user supplied request id for the
            original request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.ContentId">
            <summary>
            Optional. Gets and sets the content-id if present.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.ContentType">
            <summary>
            Optional. Gets and sets the content-type of response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.ETag">
            <summary>
            Optional. Gets and sets the ETag of request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.LastModified">
            <summary>
            Optional. Gets and sets the last-modified time of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.Location">
            <summary>
            Optional. Gets and sets the location of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.StatusCode">
            <summary>
            Optional. Gets and sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AddTaskResult.Task">
            <summary>
            Optional. Gets and sets the original task to be added.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a
            compute node on which to start a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor">
            <summary>
            Initializes a new instance of the AffinityInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AffinityInformation class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.AffinityId">
            <summary>
            Required. Gets or sets an opaque string representing the location
            of a compute node or a task that has run previously.  You can pass
            the AffinityId of a compute node or task to indicate that this
            task needs to be placed close to the node or task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch
            service will create this auto pool, run all the tasks for the job on
            it, and will delete the pool once the job has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor(Microsoft.Azure.Batch.Common.PoolLifetimeOption,Microsoft.Azure.Batch.Protocol.Models.PoolSpecification)">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Optional. Gets or sets a prefix to be added to the unique
            identifier when a pool is automatically created. The prefix can be
            up to 20 characters long.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.KeepAlive">
            <summary>
            Optional. Gets or sets whether to keep an auto pool alive after its
            lifetime expires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Required. Gets or sets the minimum lifetime of created auto pools,
            and how multiple jobs on a schedule are assigned to pools.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.PoolSpecification">
            <summary>
            Required. Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun">
            <summary>
            The results and errors from an execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Error">
            <summary>
            Optional. Gets or sets details of the error encountered evaluating
            the autoscale formula on the pool, if the evaluation was
            unsuccessful.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Results">
            <summary>
            Optional. Gets or sets the final values of all variables used in
            the evaluation of the autoscale formula.  Each variable value is
            returned in the form $variable=value, and variables are separated
            by semicolons.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Timestamp">
            <summary>
            Optional. Gets or sets the time at which the autoscale formula was
            last evaluated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale
            formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Code">
            <summary>
            Optional. Gets or sets an identifier for the autoscale error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Message">
            <summary>
            Optional. Gets or sets a message describing the autoscale error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Values">
            <summary>
            Optional. Gets or sets a list of additional error details related
            to the autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AzureError">
            <summary>
            An error response received from the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AzureError.#ctor">
            <summary>
            Initializes a new instance of the AzureError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AzureError.Code">
            <summary>
            Optional. Gets or sets an identifier for the error.  Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AzureError.Message">
            <summary>
            Optional. Gets or sets a message describing the error, intended to
            be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AzureError.Values">
            <summary>
            Optional. Gets or sets a collection of key-value pairs containing
            additional details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AzureErrorDetail">
            <summary>
            An item of additional information included in an Azure Batch error
            response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AzureErrorDetail.#ctor">
            <summary>
            Initializes a new instance of the AzureErrorDetail class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AzureErrorDetail.Key">
            <summary>
            Optional. Gets or sets an identifier specifying the meaning of the
            Value property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AzureErrorDetail.Value">
            <summary>
            Optional. Gets or sets the additional information included with the
            error response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used to
            authenticate operations on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor">
            <summary>
            Initializes a new instance of the Certificate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Certificate class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.CertificateFormat">
            <summary>
            Optional. Gets or sets the format of the certificate data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Data">
            <summary>
            Required. Gets or sets the base64-encoded contents of the file
            containing the certificate. The maximum size is 10KB. This
            property is not populated by the Get Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.DeleteCertificateError">
            <summary>
            Optional. Gets or sets the error that occurred on the last attempt
            to delete this certificate.  This property is set only if the
            certificate is in the deletefailed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Password">
            <summary>
            Optional. Gets or sets the password to access the certificate's
            private key. This property is not populated by the Get Certificate
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousState">
            <summary>
            Optional. Gets or sets the previous state of the certificate. This
            property is not set if the certificate is in its initial active
            state. This property must have the default value for the Add
            Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousStateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the certificate entered
            its previous state.  This property is not set if the certificate
            is in its initial active state.  This property must have the
            default value for the Add Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PublicData">
            <summary>
            Optional. Gets or sets the public part of the certificate as a
            base-64 encoded .cer file. This property must have the default
            value for the Add Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.State">
            <summary>
            Optional. Gets or sets the current state of the certificate. This
            property must have the default value for the Add Certificate
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the certificate entered
            its current state. This property must have the default value for
            the Add Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Thumbprint">
            <summary>
            Required. Get or sets the X.509 thumbprint of the certificate. This
            is a sequence of up to 40 hex digits (it may include spaces but
            these are removed).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.ThumbprintAlgorithm">
            <summary>
            Required. Gets or sets the algorithm used to derive the thumbprint.
            This must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Url">
            <summary>
            Optional. Gets or sets the URL of the certificate. This property
            must have the default value for the Add Certificate operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters">
            <summary>
            Parameters for a CertificateOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.Certificate)">
            <summary>
            Initializes a new instance of the CertificateAddParameters class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameters.Certificate">
            <summary>
            Required. Specifies the certificate to add.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddResponse">
            <summary>
            Response to a CertificateOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddResponse.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters">
            <summary>
            Parameters for a CertificateOperations.CancelDeletion request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CertificateCancelDeletionParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionResponse">
            <summary>
            Response to a CertificateOperations.CancelDeletion request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionResponse.#ctor">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters">
            <summary>
            Parameters for a CertificateOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteResponse">
            <summary>
            Response to a CertificateOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters">
            <summary>
            Parameters for a CertificateOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetResponse">
            <summary>
            Response to a CertificateOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetResponse.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.Certificate)">
            <summary>
            Initializes a new instance of the CertificateGetResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetResponse.Certificate">
            <summary>
            Required. Gets or sets the certificate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters">
            <summary>
            Parameters for a CertificateOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListResponse">
            <summary>
            Response to a CertificateOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListResponse.#ctor">
            <summary>
            Initializes a new instance of the CertificateListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.Certificate},System.String)">
            <summary>
            Initializes a new instance of the CertificateListResponse class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListResponse.Certificates">
            <summary>
            Required. Gets or sets the list of certificates.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateReference">
            <summary>
            A reference to a certificate to be installed on compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CertificateReference class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation">
            <summary>
            Optional. Gets or sets the location of the certificate store on the
            compute node into which to install the certificate. The default
            value is CurrentUser.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName">
            <summary>
            Optional. Gets or sets the name of the certificate store on the
            compute node into which to install the certificate. The default
            value is My.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint">
            <summary>
            Required. Gets or sets the thumbprint of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm">
            <summary>
            Required. Gets or sets the algorithm with which the thumbprint is
            associated.  This must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility">
            <summary>
            Optional. Gets or sets which user accounts on the compute node
            should have access to the private data of the certificate. This
            may be any subset of the values 'starttask', 'task' and 'rdp',
            separated by commas. The default is all accounts, corresponding to
            the string 'starttask,task,rdp'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor">
            <summary>
            Initializes a new instance of the CloudJob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolInformation)">
            <summary>
            Initializes a new instance of the CloudJob class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings">
            <summary>
            Optional. Gets or sets the list of common environment variable
            settings.  These environment variables are set for all tasks in
            the job (including the Job Manager, Job Preparation and Job
            Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints">
            <summary>
            Optional. Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime">
            <summary>
            Optional. Gets or sets the creation time of the job. This property
            must have the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName">
            <summary>
            Optional. Gets or sets the display name for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag">
            <summary>
            Optional. Gets or sets the ETag of the job. This property must have
            the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInformation">
            <summary>
            Optional. Gets or sets the execution information for the job. This
            property must have the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id">
            <summary>
            Required. Gets or sets a string that uniquely identifies the job
            within the account. The id can contain any combination of
            alphanumeric characters including hyphens and underscores, and
            cannot contain more than 64 characters. It is common to use a GUID
            for the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask">
            <summary>
            Optional. Gets or sets details of a Job Manager task to be launched
            when the job is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask">
            <summary>
            Optional. Gets or sets the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask">
            <summary>
            Optional. Gets or sets the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified">
            <summary>
            Optional. Gets or sets the last modified time of the job. This
            property must have the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the job as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInformation">
            <summary>
            Required. Gets or sets the pool on which the Batch service runs the
            job’s tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState">
            <summary>
            Optional. Gets or sets the previous state of the job. This property
            is not set if the job is in its initial active state. This
            property must have the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the job entered its
            previous state. This property is not set if the job is in its
            initial active state. This property must have the default value
            for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority">
            <summary>
            Optional. Gets or sets the priority of the job. Priority values can
            range from -1000 to 1000, with -1000 being the lowest priority and
            1000 being the highest priority. The default value is 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.State">
            <summary>
            Optional. Gets or sets the current state of the job. This property
            must have the default value for the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the job entered its
            current state. This property must have the default value for the
            Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Statistics">
            <summary>
            Optional. Gets or sets resource usage statistics for the entire
            lifetime of the job. This property must have the default value for
            the Add Job operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url">
            <summary>
            Optional. Gets or sets the URL of the job. This property must have
            the default value for the Add Job operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters">
            <summary>
            Parameters for a CloudJobOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobAddParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudJob)">
            <summary>
            Initializes a new instance of the CloudJobAddParameters class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddParameters.Job">
            <summary>
            Required. Gets or sets the job to add.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddResponse">
            <summary>
            Response to a CloudJobOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobAddResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobAddResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters">
            <summary>
            Parameters for a CloudJobOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobDeleteParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteResponse">
            <summary>
            Response to a CloudJobOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobDeleteResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters">
            <summary>
            Parameters for a CloudJobOperations.Disable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobDisableParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters.#ctor(Microsoft.Azure.Batch.Common.DisableJobOption)">
            <summary>
            Initializes a new instance of the CloudJobDisableParameters class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableParameters.DisableJobOption">
            <summary>
            Required. Gets or sets what to do with active tasks associated with
            the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableResponse">
            <summary>
            Response to a CloudJobOperations.Disable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobDisableResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobDisableResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters">
            <summary>
            Parameters for a CloudJobOperations.Enable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobEnableParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableResponse">
            <summary>
            Response to a CloudJobOperations.Enable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobEnableResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobEnableResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters">
            <summary>
            Parameters for a CloudJobOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobGetParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetResponse">
            <summary>
            Response to a CloudJobOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudJob)">
            <summary>
            Initializes a new instance of the CloudJobGetResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobGetResponse.Job">
            <summary>
            Required. Gets or sets the job information.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters">
            <summary>
            Parameters for a CloudJobOperations.List or ListFromJobSchedule request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters">
            <summary>
            Parameters for a CloudJobOperations.ListPreparationAndReleaseTaskStatus
            request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudJobListPreparationAndReleaseTaskStatusParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusResponse">
            <summary>
            Response to a CloudJobOperations.ListPreparationAndReleaseTaskStatus
            request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusResponse.#ctor">
            <summary>
            Initializes a new instance of the
            CloudJobListPreparationAndReleaseTaskStatusResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation},System.String)">
            <summary>
            Initializes a new instance of the
            CloudJobListPreparationAndReleaseTaskStatusResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusResponse.ExecutionInformation">
            <summary>
            Required. Gets or sets a list of Job Preparation and Job Release
            task execution information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListPreparationAndReleaseTaskStatusResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobListResponse">
            <summary>
            Response to a CloudJobOperations.List or ListFromJobSchedule request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CloudJob},System.String)">
            <summary>
            Initializes a new instance of the CloudJobListResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListResponse.Jobs">
            <summary>
            Required. Gets or sets the list of jobs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters">
            <summary>
            Parameters for a CloudJobOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobPatchParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters.Constraints">
            <summary>
            Optional. Gets or sets the execution constraints for the job. If
            omitted, the existing execution constraints are left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the job as metadata. If omitted, the existing job metadata is left
            unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters.PoolInformation">
            <summary>
            Optional. Gets or sets the pool on which the Batch service runs the
            job's tasks. If omitted, the job continues to run on its current
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchParameters.Priority">
            <summary>
            Optional. Gets or sets the priority of the job. Priority values can
            range from -1000 to 1000, with -1000 being the lowest priority and
            1000 being the highest priority. If omitted, the priority of the
            job is left unchanged.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchResponse">
            <summary>
            Response to a CloudJobOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobPatchResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobPatchResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run
            jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor">
            <summary>
            Initializes a new instance of the CloudJobSchedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification)">
            <summary>
            Initializes a new instance of the CloudJobSchedule class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.CreationTime">
            <summary>
            Optional. Gets or sets the creation time of the job schedule. This
            property must have the default value for the Add JobSchedule
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.DisplayName">
            <summary>
            Optional. Gets or sets the display name for the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ETag">
            <summary>
            Optional. Gets or sets the ETag of the job schedule. This property
            must have the default value for the Add JobSchedule operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ExecutionInformation">
            <summary>
            Optional. Gets or sets information about jobs that have been and
            will be run under this schedule. This property must have the
            default value for the Add JobSchedule operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Id">
            <summary>
            Required. Gets or sets a string that uniquely identifies the
            schedule within the account. A GUID is recommended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.JobSpecification">
            <summary>
            Required. Gets or sets the details of the jobs to be created on
            this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.LastModified">
            <summary>
            Optional. Gets or sets the last modified time of the job schedule.
            This property must have the default value for the Add JobSchedule
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousState">
            <summary>
            Optional. Gets or sets the previous state of the job schedule. This
            property must have the default value for the Add JobSchedule
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the job schedule entered
            its previous state. This property must have the default value for
            the Add JobSchedule operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Schedule">
            <summary>
            Required. Gets or sets the schedule according to which jobs will be
            created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.State">
            <summary>
            Optional. Gets or sets the current state of the job schedule. This
            property must have the default value for the Add JobSchedule
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the job schedule entered
            the current state. This property must have the default value for
            the Add JobSchedule operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Statistics">
            <summary>
            Optional. Gets or sets the lifetime resource usage statistics for
            the job schedule. This property must have the default value for
            the Add JobSchedule operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Url">
            <summary>
            Optional. Gets or sets the URL of the job schedule. This property
            must have the default value for the Add JobSchedule operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleAddParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule)">
            <summary>
            Initializes a new instance of the CloudJobScheduleAddParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddParameters.JobSchedule">
            <summary>
            Required. Gets or sets the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleAddResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleAddResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleDeleteParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleDeleteResponse
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Disable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleDisableParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Disable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleDisableResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleDisableResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Enable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleEnableParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Enable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleEnableResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleEnableResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Exists request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleExistsParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Exists request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleExistsResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleExistsResponse
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleGetParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule)">
            <summary>
            Initializes a new instance of the CloudJobScheduleGetResponse class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleGetResponse.JobSchedule">
            <summary>
            Required. Gets or sets the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleListParameters
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListResponse">
            <summary>
            Response to a CloudJobScheduleOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleListResponse
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule},System.String)">
            <summary>
            Initializes a new instance of the CloudJobScheduleListResponse
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListResponse.JobSchedules">
            <summary>
            Required. Gets or sets the list of job schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobSchedulePatchParameters
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters.JobSpecification">
            <summary>
            Optional. Gets or sets the details of the jobs to be created on
            this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the job schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchParameters.Schedule">
            <summary>
            Optional. Gets or sets the schedule according to which jobs will be
            created. If you do not specify this element, the existing schedule
            is not modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobSchedulePatchResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedulePatchResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudJobScheduleTerminateParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleTerminateResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleTerminateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters">
            <summary>
            Parameters for a CloudJobScheduleOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.JobSpecification)">
            <summary>
            Initializes a new instance of the CloudJobScheduleUpdateParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters.JobSpecification">
            <summary>
            Required. Gets or sets details of the jobs to be created on this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the job schedule as metadata. If you do not specify this element,
            it takes the default value of an empty list; in effect, any
            existing metadata is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateParameters.Schedule">
            <summary>
            Optional. Gets or sets the schedule according to which jobs will be
            created. If you do not specify this element, it is equivalent to
            passing the default schedule: that is, a single job scheduled to
            run immediately.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateResponse">
            <summary>
            Response to a CloudJobScheduleOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobScheduleUpdateResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobScheduleUpdateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters">
            <summary>
            Parameters for a CloudJobOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobTerminateParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateParameters.TerminateReason">
            <summary>
            Optional. Gets or sets the text you want to appear as the job's
            TerminateReason. The default is 'UserTerminate'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateResponse">
            <summary>
            Response to a CloudJobOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobTerminateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobTerminateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters">
            <summary>
            Parameters for a CloudJobOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudJobUpdateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation)">
            <summary>
            Initializes a new instance of the CloudJobUpdateParameters class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.Constraints">
            <summary>
            Optional. Gets or sets the execution constraints for the job. If
            omitted, the job is given the default execution constraints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the job as metadata. If omitted, any existing job metadata is
            cleared.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.PoolInformation">
            <summary>
            Required. Gets or sets the pool on which the Batch service runs the
            job's tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateParameters.Priority">
            <summary>
            Optional. Gets or sets the priority of the job. Priority values can
            range from -1000 to 1000, with -1000 being the lowest priority and
            1000 being the highest priority. If omitted, the job is set to the
            default priority 0.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateResponse">
            <summary>
            Response to a CloudJobOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudJobUpdateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobUpdateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor">
            <summary>
            Initializes a new instance of the CloudPool class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CloudPool class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState">
            <summary>
            Optional. Gets or sets whether the pool is resizing. This property
            must have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the pool entered its
            current allocation state. This property must have the default
            value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEnabled">
            <summary>
            Optional. Gets or sets whether the pool size should automatically
            adjust over time. If true, the AutoScaleFormula property must be
            set. If false, the TargetDedicated property must be set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula">
            <summary>
            Optional. Gets or sets a formula for the desired number of compute
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun">
            <summary>
            Optional. Gets or sets the results and errors from the last
            execution of the autoscale formula. This property must have the
            default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences">
            <summary>
            Optional. Gets or sets the list of certificates to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime">
            <summary>
            Optional. Gets or sets the creation time of the pool. This property
            must have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated">
            <summary>
            Optional. Gets or sets the number of compute nodes currently in the
            pool. This property must have the default value for the Add Pool
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentOSVersion">
            <summary>
            Optional. Gets or sets the Azure Guest OS Version currently
            installed on the virtual machines in the pool. This may differ
            from TargetOSVersion if the pool state is Upgrading. This property
            must have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName">
            <summary>
            Optional. Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag">
            <summary>
            Optional. Gets or sets the ETag of the pool. This property must
            have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id">
            <summary>
            Required. Gets or sets a string that uniquely identifies the pool
            within the account. The id can contain any combination of
            alphanumeric characters including hyphens and underscores, and
            cannot contain more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.InterComputeNodeCommunicationEnabled">
            <summary>
            Optional. Gets or sets whether the pool permits direct
            communication between nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified">
            <summary>
            Optional. Gets or sets the last modified time of the pool. This
            property must have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerComputeNode">
            <summary>
            Optional. Gets or sets the maximum number of tasks that can run
            concurrently on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.OSFamily">
            <summary>
            Required. Gets or sets the Azure Guest OS family to be installed on
            the virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError">
            <summary>
            Optional. Gets or sets details of any error encountered while
            performing the last resize on the pool. This property is set only
            if an error occurred during the last pool resize, and only when
            the pool AllocationState is Steady. This property must have the
            default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout">
            <summary>
            Optional. Gets or sets the timeout for allocation of compute nodes
            to the pool. In a Get Pool operation, this is the timeout for the
            most recent resize operation. The default value is 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask">
            <summary>
            Optional. Gets or sets a task specified to run on each compute node
            as it joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.State">
            <summary>
            Optional. Gets or sets the current state of the pool. This property
            must have the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the pool entered its
            current state. This property must have the default value for the
            Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Statistics">
            <summary>
            Optional. Gets or sets utilization and resource usage statistics
            for the entire lifetime of the pool. This property must have the
            default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated">
            <summary>
            Optional. Gets or sets the desired number of compute nodes in the
            pool. This property must have the default value if EnableAutoScale
            is true. It is required if EnableAutoScale is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetOSVersion">
            <summary>
            Optional. Gets or sets the Azure Guest OS version to be installed
            on the virtual machines in the pool. The default value is * which
            specifies the latest operating system version for the specified
            family.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy">
            <summary>
            Optional. Gets or sets how the Batch service distributes tasks
            between compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url">
            <summary>
            Optional. Gets or sets the URL of the pool. This property must have
            the default value for the Add Pool operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineSize">
            <summary>
            Required. Gets or sets the size of virtual machines in the pool.
            All VMs in a pool are the same size.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters">
            <summary>
            Parameters for a CloudPoolOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolAddParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudPool)">
            <summary>
            Initializes a new instance of the CloudPoolAddParameters class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddParameters.Pool">
            <summary>
            Required. Gets or sets the pool to be added.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddResponse">
            <summary>
            Response to a CloudPoolOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolAddResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolAddResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters">
            <summary>
            Parameters for a CloudPoolOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolDeleteParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteResponse">
            <summary>
            Response to a CloudPoolOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolDeleteResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters">
            <summary>
            Parameters for a CloudPoolOperations.DisableAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudPoolDisableAutoScaleParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleResponse">
            <summary>
            Response to a CloudPoolOperations.DisableAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolDisableAutoScaleResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolDisableAutoScaleResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters">
            <summary>
            Parameters for a CloudPoolOperations.EnableAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudPoolEnableAutoScaleParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            CloudPoolEnableAutoScaleParameters class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleParameters.AutoScaleFormula">
            <summary>
            Required. Gets or sets the formula for the desired number of
            compute nodes in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleResponse">
            <summary>
            Response to a CloudPoolOperations.EnableAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolEnableAutoScaleResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEnableAutoScaleResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters">
            <summary>
            Parameters for a CloudPoolOperations.EvaluateAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudPoolEvaluateAutoScaleParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            CloudPoolEvaluateAutoScaleParameters class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleParameters.AutoScaleFormula">
            <summary>
            Required. Gets or sets a formula for the desired number of compute
            nodes in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleResponse">
            <summary>
            Response to a CloudPoolOperations.EvaluateAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleResponse.#ctor">
            <summary>
            Initializes a new instance of the
            CloudPoolEvaluateAutoScaleResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleResponse.AutoScaleRun">
            <summary>
            Optional. Gets or sets the result of evaluating the automatic
            scaling formula on the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolEvaluateAutoScaleResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters">
            <summary>
            Parameters for a CloudPoolOperations.Exists request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolExistsParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsResponse">
            <summary>
            Response to a CloudPoolOperations.Exists request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolExistsResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolExistsResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters">
            <summary>
            Parameters for a CloudPoolOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolGetParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetResponse">
            <summary>
            Response to a CloudPoolOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudPool)">
            <summary>
            Initializes a new instance of the CloudPoolGetResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolGetResponse.Pool">
            <summary>
            Required. Gets or sets the information about the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters">
            <summary>
            Parameters for a CloudPoolOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListResponse">
            <summary>
            Response to a CloudPoolOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CloudPool},System.String)">
            <summary>
            Initializes a new instance of the CloudPoolListResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolListResponse.Pools">
            <summary>
            Required. Gets or sets the list of pools.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters">
            <summary>
            Parameters for a CloudPoolOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolPatchParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters.CertificateReferences">
            <summary>
            Optional. Gets or sets a list of certificates to be installed on
            each compute node in the pool. If omitted, any existing
            certificate references are left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the pool as metadata. If omitted, any existing metadata is left
            unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchParameters.StartTask">
            <summary>
            Optional. Gets or sets a task to run on each compute node as it
            joins the pool. If omitted, any existing start task is left
            unchanged.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchResponse">
            <summary>
            Response to a CloudPoolOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolPatchResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolPatchResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters">
            <summary>
            Parameters for a CloudPoolOperations.Resize request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolResizeParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CloudPoolResizeParameters class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters.ComputeNodeDeallocationOption">
            <summary>
            Optional. Gets or sets when nodes may be removed from the pool, if
            the pool size is decreasing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters.ResizeTimeout">
            <summary>
            Optional. Gets or sets the timeout for allocation of compute nodes
            to the pool or removal of compute nodes from the pool. The default
            value is 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeParameters.TargetDedicated">
            <summary>
            Required. Gets or sets the desired number of compute nodes in the
            pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeResponse">
            <summary>
            Response to a CloudPoolOperations.Resize request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolResizeResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolResizeResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters">
            <summary>
            Parameters for a CloudPoolOperations.StopResize request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolStopResizeParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeResponse">
            <summary>
            Response to a CloudPoolOperations.StopResize request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolStopResizeResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolStopResizeResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters">
            <summary>
            Parameters for a CloudPoolOperations.UpdateProperties request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters.#ctor">
            <summary>
            Initializes a new instance of the
            CloudPoolUpdatePropertiesParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the
            CloudPoolUpdatePropertiesParameters class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters.CertificateReferences">
            <summary>
            Required. Gets or sets a list of certificates to be installed on
            each compute node in the pool. If you specify an empty collection,
            any existing certificate references are removed from the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters.Metadata">
            <summary>
            Required. Gets or sets a list of name-value pairs associated with
            the pool as metadata. If you specify an empty collection, any
            existing metadata is removed from the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesParameters.StartTask">
            <summary>
            Optional. Gets or sets a task to run on each compute node as it
            joins the pool. If omitted, any existing start task is removed
            from the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesResponse">
            <summary>
            Response to a CloudPoolOperations.UpdateProperties request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolUpdatePropertiesResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpdatePropertiesResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters">
            <summary>
            Parameters for a CloudPoolOperations.UpgradeOS request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolUpgradeOSParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CloudPoolUpgradeOSParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSParameters.TargetOSVersion">
            <summary>
            Required. Gets or sets the Azure Guest OS version to be installed
            on the virtual machines in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSResponse">
            <summary>
            Response to a CloudPoolOperations.UpgradeOS request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudPoolUpgradeOSResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPoolUpgradeOSResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTask">
            <summary>
            An Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor">
            <summary>
            Initializes a new instance of the CloudTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CloudTask class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInformation">
            <summary>
            Optional. Gets or sets a locality hint that can be used by the
            Batch service to select a compute node on which to start the new
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine">
            <summary>
            Required. Gets or sets the command line of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ComputeNodeInformation">
            <summary>
            Optional. Gets or sets information about the compute node on which
            the task ran. This property must have the default value for the
            Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints">
            <summary>
            Optional. Gets or sets the execution constraints that apply to this
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime">
            <summary>
            Optional. Gets or sets the creation time of the task. This property
            must have the default value for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName">
            <summary>
            Optional. Gets or sets a display name for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of environment variable settings for
            the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag">
            <summary>
            Optional. Gets or sets the ETag of the task. This property must
            have the default value for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInformation">
            <summary>
            Optional. Gets or sets information about the execution of the task.
            This property must have the default value for the Add Task
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id">
            <summary>
            Required. Gets or sets a string that uniquely identifies the task
            within the job. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified">
            <summary>
            Optional. Gets or sets the last modified time of the task. This
            property must have the default value for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState">
            <summary>
            Optional. Gets or sets the previous state of the task. This
            property is not set if the task is in its initial active state.
            This property must have the default value for the Add Task
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the task entered its
            previous state. This property is not set if the task is in its
            initial active state. This property must have the default value
            for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles">
            <summary>
            Optional. Gets or sets a list of files that Batch will download to
            the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated">
            <summary>
            Optional. Gets or sets whether to run the task in elevated mode.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.State">
            <summary>
            Optional. Gets or sets the current state of the task. This property
            must have the default value for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the task entered its
            current state. This property must have the default value for the
            Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Statistics">
            <summary>
            Optional. Gets or sets resource usage statistics for the task. This
            property must have the default value for the Add Task operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url">
            <summary>
            Optional. Gets or sets the URL of the task. This property must have
            the default value for the Add Task operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters">
            <summary>
            Parameters for a CloudTaskOperations.AddCollection request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskAddCollectionParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CloudTask})">
            <summary>
            Initializes a new instance of the CloudTaskAddCollectionParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionParameters.Tasks">
            <summary>
            Required. Specifies the list of tasks to be added.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionResponse">
            <summary>
            Response to a CloudTaskOperations.AddCollection request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskAddCollectionResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddCollectionResponse.AddTaskResults">
            <summary>
            Optional. Gets the list of add task result of request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters">
            <summary>
            Parameters for a CloudTaskOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskAddParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudTask)">
            <summary>
            Initializes a new instance of the CloudTaskAddParameters class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddParameters.Task">
            <summary>
            Required. Gets or sets the task to be added.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddResponse">
            <summary>
            Response to a CloudTaskOperations.Add request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskAddResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskAddResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters">
            <summary>
            Parameters for a CloudTaskOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskDeleteParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteResponse">
            <summary>
            Response to a CloudTaskOperations.Delete request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskDeleteResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters">
            <summary>
            Parameters for a CloudTaskOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskGetParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetResponse">
            <summary>
            Response to a CloudTaskOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudTask)">
            <summary>
            Initializes a new instance of the CloudTaskGetResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskGetResponse.Task">
            <summary>
            Required. Gets or sets the task information.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters">
            <summary>
            Parameters for a CloudTaskOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListResponse">
            <summary>
            Response to a CloudTaskOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CloudTask},System.String)">
            <summary>
            Initializes a new instance of the CloudTaskListResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListResponse.Tasks">
            <summary>
            Required. Gets or sets the list of tasks.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters">
            <summary>
            Parameters for a CloudTaskOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskTerminateParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateResponse">
            <summary>
            Response to a CloudTaskOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskTerminateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskTerminateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters">
            <summary>
            Parameters for a CloudTaskOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskUpdateParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateParameters.Constraints">
            <summary>
            Optional. Gets or sets constraints that apply to this task. If
            omitted, the task is given the default constraints.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateResponse">
            <summary>
            Response to a CloudTaskOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateResponse.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskUpdateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskUpdateResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNode">
            <summary>
            A compute node in the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor">
            <summary>
            Initializes a new instance of the ComputeNode class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ComputeNode class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AffinityId">
            <summary>
            Optional. Gets or sets an identifier which can be passed in the Add
            Task API to request that the task be scheduled close to this
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AllocationTime">
            <summary>
            Optional. Gets or sets the time at which this compute node was
            allocated to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.CertificateReferences">
            <summary>
            Optional. Gets or sets the list of certificates installed on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Errors">
            <summary>
            Optional. Gets or sets the list of errors that are currently being
            encountered by the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Id">
            <summary>
            Required. Gets or sets the id of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.IPAddress">
            <summary>
            Optional. Gets or sets the IP address that other compute nodes can
            use to communicate with this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.LastBootTime">
            <summary>
            Optional. Gets or sets the time at which the node was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.RecentTasks">
            <summary>
            Optional. Gets or sets the list of tasks that are currently running
            on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTask">
            <summary>
            Optional. Gets or sets the task specified to run on the compute
            node as it joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTaskInformation">
            <summary>
            Optional. Gets or sets runtime information about the execution of
            the start task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.State">
            <summary>
            Optional. Gets or sets the current state of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StateTransitionTime">
            <summary>
            Optional. Gets or sets the time at which the node entered its
            current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.TotalTasksRun">
            <summary>
            Optional. Gets or sets the total number of job tasks completed on
            the compute node. This includes Job Preparation, Job Release and
            Job Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Url">
            <summary>
            Optional. Gets or sets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.VirtualMachineSize">
            <summary>
            Optional. Gets or sets the size of the virtual machine hosting the
            compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters">
            <summary>
            Parameters for a ComputeNodeOperations.AddUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters.#ctor(Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser)">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserParameters.User">
            <summary>
            Required. Gets or sets the user account to be created.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserResponse">
            <summary>
            Response to a ComputeNodeOperations.AddUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters">
            <summary>
            Parameters for a ComputeNodeOperations.DeleteUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserResponse">
            <summary>
            Response to a ComputeNodeOperations.DeleteUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserResponse
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError">
            <summary>
            An error encountered by a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Code">
            <summary>
            Optional. Gets or sets an identifier for the compute node error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.ErrorDetails">
            <summary>
            Optional. Gets or sets the list of additional error details related
            to the compute node error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Message">
            <summary>
            Optional. Gets or sets a message describing the compute node error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters">
            <summary>
            Parameters for a ComputeNodeOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters">
            <summary>
            Parameters for a ComputeNodeOperations.GetRemoteDesktop request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopParameters.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopParameters class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopResponse">
            <summary>
            Response to a ComputeNodeOperations.GetRemoteDesktop request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopResponse.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopResponse.RemoteDesktopConnectionData">
            <summary>
            Optional. Gets or sets the contents of the RDP data.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetResponse">
            <summary>
            Response to a ComputeNodeOperations.Get request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.ComputeNode)">
            <summary>
            Initializes a new instance of the ComputeNodeGetResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetResponse.ComputeNode">
            <summary>
            Required. Gets or sets the information retrieved about the compute
            node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation">
            <summary>
            Information about the compute node on which a task ran.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.AffinityId">
            <summary>
            Optional. Gets or sets an identifier for the compute node on which
            the task ran, which can be passed when adding a task to request
            that the task be scheduled close to this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.ComputeNodeId">
            <summary>
            Optional. Gets or sets the id of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.ComputeNodeUrl">
            <summary>
            Optional. Gets or sets the URL of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.PoolId">
            <summary>
            Optional. Gets or sets the id of the pool on which the task ran.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters">
            <summary>
            Parameters for a ComputeNodeOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListResponse">
            <summary>
            Response to a ComputeNodeOperations.List request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ComputeNode},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeListResponse class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListResponse.ComputeNodes">
            <summary>
            Required. Gets or sets the list of compute nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters">
            <summary>
            Parameters for a ComputeNodeOperations.Reboot request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootParameters.ComputeNodeRebootOption">
            <summary>
            Optional. Gets or sets when to reboot the compute node and what to
            do with currently running tasks. The default value is requeue.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootResponse">
            <summary>
            Response to a ComputeNodeOperations.Reboot request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters">
            <summary>
            Parameters for a ComputeNodeOperations.Reimage request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageParameters
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageParameters.ComputeNodeReimageOption">
            <summary>
            Optional. Gets or sets when to reimage the compute node and what to
            do with currently running tasks. The default value is requeue.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageResponse">
            <summary>
            Response to a ComputeNodeOperations.Reimage request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters">
            <summary>
            Parameters for a ComputeNodeOperations.Remove request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRemoveParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ComputeNodeRemoveParameters class
            with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters.ComputeNodeDeallocationOption">
            <summary>
            Optional. Gets or sets when compute nodes may be removed from the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters.ComputeNodeIds">
            <summary>
            Required. Gets or sets a list containing the id of the compute
            nodes to be removed from the specified pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveParameters.ResizeTimeout">
            <summary>
            Optional. Gets or sets the timeout for removal of compute nodes to
            the pool. The default value is 10 minutes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveResponse">
            <summary>
            Response to a ComputeNodeOperations.Remove request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRemoveResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRemoveResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters">
            <summary>
            Parameters for a ComputeNodeOperations.UpdateUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserParameters
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters.ExpiryTime">
            <summary>
            Optional. Gets or sets the time at which the account should expire.
            If omitted, the default is 1 day from the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserParameters.Password">
            <summary>
            Required. Gets or sets the password of the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserResponse">
            <summary>
            Response to a ComputeNodeOperations.UpdateUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserResponse.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserResponse
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserResponse.DataServiceId">
            <summary>
            Optional. Gets or sets the OData id of the resource to which the
            request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser">
            <summary>
            A user account on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUser class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUser class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime">
            <summary>
            Optional. Gets or sets the time at which the account should expire.
            If omitted, the default is 1 day from the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin">
            <summary>
            Optional. Gets or sets whether the account should be an
            administrator on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name">
            <summary>
            Required. Gets or sets the user name of the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password">
            <summary>
            Required. Gets or sets the password of the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.#ctor">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Code">
            <summary>
            Optional. Gets or sets an identifier for the certificate deletion
            error.  Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Message">
            <summary>
            Optional. Gets or sets a message describing the certificate
            deletion error, intended to be suitable for display in a user
            interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Values">
            <summary>
            Optional. Gets or sets a list of additional error details related
            to the certificate deletion error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DetailLevel">
            <summary>
            Specifies OData query options.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DetailLevel.#ctor">
            <summary>
            Initializes a new instance of the DetailLevel class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DetailLevel.ExpandClause">
            <summary>
            Optional. Gets or sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DetailLevel.FilterClause">
            <summary>
            Optional. Gets or sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DetailLevel.SelectClause">
            <summary>
            Optional. Gets or sets an OData $select clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EnvironmentSetting class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Name">
            <summary>
            Required. Gets or sets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Value">
            <summary>
            Optional. Gets or sets the value of the environment variable.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.#ctor">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Lang">
            <summary>
            Optional. Gets or sets the language code of the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Value">
            <summary>
            Optional. Gets or sets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.#ctor">
            <summary>
            Initializes a new instance of the FileProperties class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentLength">
            <summary>
            Optional. Gets or sets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentType">
            <summary>
            Optional. Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.CreationTime">
            <summary>
            Optional. Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.LastModified">
            <summary>
            Optional. Gets or sets the time at which the file was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileRange">
            <summary>
            A byte range within a file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileRange.#ctor">
            <summary>
            Initializes a new instance of the FileRange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the FileRange class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileRange.NumberOfBytes">
            <summary>
            Required. Gets or sets the maximum amount of data to download, in
            bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileRange.Offset">
            <summary>
            Required. Gets or sets the offset within the file at which to start
            downloading.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints">
            <summary>
            Specifies the execution constraints for jobs created on a schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor">
            <summary>
            Initializes a new instance of the JobConstraints class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount">
            <summary>
            Optional. Gets or sets the maximum number of times each task may be
            retried. The Batch service retries a task if its exit code is
            nonzero.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime">
            <summary>
            Optional. Gets or sets the maximum elapsed time that the job may
            run, measured from the time the job starts. If the job does not
            complete within the time limit, the Batch service terminates it
            and any tasks that are still running.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation">
            <summary>
            Contains information about the execution of a job in the Azure Batch
            service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime">
            <summary>
            Optional. Gets or sets the completion time of the job. This
            property is set only if the job is in the completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId">
            <summary>
            Optional. Gets or sets the id of the pool to which this job is
            assigned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError">
            <summary>
            Optional. Gets or sets details of any error encountered by the
            service in starting the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime">
            <summary>
            Optional. Gets or sets the start time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason">
            <summary>
            Optional. Gets or sets a string describing the reason the job ended.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask">
            <summary>
            Specifies details of a Job Manager task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor">
            <summary>
            Initializes a new instance of the JobManagerTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobManagerTask class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine">
            <summary>
            Required. Gets or sets the command line of the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints">
            <summary>
            Optional. Gets or sets constraints that apply to the Job Manager
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName">
            <summary>
            Optional. Gets or sets the display name of the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of environment variable settings for
            the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id">
            <summary>
            Required. Gets or sets a string that uniquely identifies the Job
            Manager task. A GUID is recommended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion">
            <summary>
            Optional. Gets or sets whether completion of the Job Manager task
            signifies completion of the entire job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles">
            <summary>
            Optional. Gets or sets a list of files that Batch will download to
            the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunElevated">
            <summary>
            Optional. Gets or sets whether to run the Job Manager task in
            elevated mode. The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive">
            <summary>
            Optional. Gets or sets whether the Job Manager task requires
            exclusive use of the compute node where it runs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            The status of the Job Preparation and Job Release tasks on a particular
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationAndReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeId">
            <summary>
            Optional. Gets or sets the id of the compute node to which this
            entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeUrl">
            <summary>
            Optional. Gets or sets the URL of the compute node to which this
            entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInformation">
            <summary>
            Optional. Gets or sets information about the execution status of
            the Job Preparation task on this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation">
            <summary>
            Optional. Gets or sets information about the execution status of
            the Job Release task on this compute node. This property is set
            only if the Job Release task has run on the node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Optional. Gets or sets the id of the pool containing the compute
            node to which this entry refers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor">
            <summary>
            Initializes a new instance of the JobPreparationTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobPreparationTask class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine">
            <summary>
            Required. Gets or sets the command line of the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints">
            <summary>
            Optional. Gets or sets constraints that apply to the Job
            Preparation task..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of environment variable settings for
            the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id">
            <summary>
            Optional. Gets or sets a string that uniquely identifies the job
            preparation task within the job. The id can contain any
            combination of alphanumeric characters including hyphens and
            underscores and cannot contain more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnComputeNodeRebootAfterSuccess">
            <summary>
            Optional. Gets or sets whether the Batch service should rerun the
            Job Preparation task after a compute node reboots. The default
            value is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles">
            <summary>
            Optional. Gets or sets a list of files that Batch will download to
            the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RunElevated">
            <summary>
            Optional. Gets or sets whether to run the Job Preparation task in
            elevated mode. The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess">
            <summary>
            Optional. Gets or sets whether the Batch Service should wait for
            the Job Preparation task to complete successfully before
            scheduling any other tasks of the job on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Preparation task on a
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Optional. Gets or sets the time at which the Job Preparation task
            completed. This property is set only if the task is in the
            Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Optional. Gets or sets the exit code of the Job Preparation task.
            This property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            Optional. Gets or sets the most recent time at which a retry of the
            Job Preparation task started running. This property is set only if
            the task was retried (i.e. retryCount is nonzero).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            Optional. Gets or sets the number of times the Job Preparation task
            has been retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.SchedulingError">
            <summary>
            Optional. Gets or sets any error starting the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Optional. Gets or sets the time at which the Job Preparation task
            started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.State">
            <summary>
            Optional. Gets or sets the current running state of the Job
            Preparation task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Optional. Gets or sets the URL to the root directory of the Job
            Preparation task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where
            the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor">
            <summary>
            Initializes a new instance of the JobReleaseTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobReleaseTask class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine">
            <summary>
            Required. Gets or sets the command line of the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of environment variable settings for
            the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id">
            <summary>
            Optional. Gets or sets a string that uniquely identifies the Job
            Release task within the job. The id can contain any combination of
            alphanumeric characters including hyphens and underscores and
            cannot contain more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime">
            <summary>
            Optional. Gets or sets the maximum elapsed time that the Job
            Release task may run on a given compute node, measured from the
            time the task starts. If the task does not complete within the
            time limit, the Batch service terminates it. The default value is
            15 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles">
            <summary>
            Optional. Gets or sets a list of files that Batch will download to
            the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime">
            <summary>
            Optional. Gets or sets the minimum time to retain the working
            directory for the Job Release task on the compute node.  After
            this time, the Batch service may delete the working directory and
            all its contents. The default is infinite.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated">
            <summary>
            Optional. Gets or sets whether to run the Job Release task in
            elevated mode. The default value is false.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Release task on a
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Optional. Gets or sets the time at which the Job Release task
            completed. This property is set only if the task is in the
            Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Optional. Gets or sets the exit code of the Job Release task. This
            property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError">
            <summary>
            Optional. Gets or sets any error starting the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Optional. Gets or sets the time at which the Job Release task
            started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State">
            <summary>
            Optional. Gets or sets the current running state of the Job Release
            task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Optional. Gets or sets the URL to the root directory of the Job
            Release task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation">
            <summary>
            Specifies how tasks should be run in a job associated with a job
            schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExecutionInformation
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.EndTime">
            <summary>
            Optional. Gets or sets the time at which the schedule ended. This
            property is set only if the job schedule is in the completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Optional. Gets or sets the next time at which a job will be created
            under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Optional. Gets or sets information about the most recent job under
            the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics">
            <summary>
            The lifetime resource usage statistics for a job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.FailedTaskCount">
            <summary>
            Optional. Gets or sets the total number of tasks that failed during
            the given time range in jobs created under the schedule. A task
            fails if it exhausts its maximum retry count without returning
            exit code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.KernelCpuTime">
            <summary>
            Optional. Gets or sets the total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by all the tasks
            in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between startTime
            and lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            read by all the tasks in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOps">
            <summary>
            Optional. Gets or sets the total number of I/O read operations
            performed by all the tasks in all the jobs created under the
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.SucceededTaskCount">
            <summary>
            Optional. Gets or sets the total number of tasks successfully
            completed during the given time range in jobs created under the
            schedule.  A task completes successfully if it returns exit code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.TaskRetryCount">
            <summary>
            Optional. Gets or sets the total number of retries during the given
            time range on all the tasks in jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.Url">
            <summary>
            Optional. Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.UserCpuTime">
            <summary>
            Optional. Gets or sets the total user mode CPU time (summed across
            all cores and all compute nodes) consumed by all the tasks in all
            the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WaitTime">
            <summary>
            Optional. Gets or sets the total wait time of all the tasks in jobs
            created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WallClockTime">
            <summary>
            Optional. Gets or sets the total wall clock time of all the tasks
            in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            written by all the tasks in all the jobs created under the
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOps">
            <summary>
            Optional. Gets or sets the total number of I/O write operations
            performed by all the tasks in all the jobs created under the
            schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulingError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Category">
            <summary>
            Optional. Gets or sets the category of the job scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Code">
            <summary>
            Optional. Gets or sets an identifier for the job scheduling error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Details">
            <summary>
            Optional. Gets or sets a list of additional error details related
            to the scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Message">
            <summary>
            Optional. Gets or sets a message describing the job scheduling
            error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSpecification">
            <summary>
            Specifies details of the jobs to be created on a schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor">
            <summary>
            Initializes a new instance of the JobSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation)">
            <summary>
            Initializes a new instance of the JobSpecification class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of common environment variable
            settings.  These environment variables are set for all tasks in
            jobs created under this schedule (including the Job Manager, Job
            Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Constraints">
            <summary>
            Optional. Gets or sets the execution constraints for jobs created
            under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.DisplayName">
            <summary>
            Optional. Gets or sets the display name for jobs created under this
            schedule. It need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobManagerTask">
            <summary>
            Optional. Gets or sets the details of a Job Manager task to be
            launched when a job is started under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobPreparationTask">
            <summary>
            Optional. Gets or sets the Job Preparation task for jobs created
            under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobReleaseTask">
            <summary>
            Optional. Gets or sets the Job Release task for jobs created under
            this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            each job created under this schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.PoolInformation">
            <summary>
            Required. Gets or sets the pool on which the Batch service runs the
            tasks of jobs created under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Priority">
            <summary>
            Optional. Gets or sets the priority of jobs created under this
            schedule. Priority values can range from -1000 to 1000, with -1000
            being the lowest priority and 1000 being the highest priority. The
            default value is 0.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobStatistics">
            <summary>
            Resource usage statistics for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.FailedTaskCount">
            <summary>
            Optional. Gets or sets the total number of tasks in the job that
            failed during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.KernelCpuTime">
            <summary>
            Optional. Gets or sets the total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by all the tasks
            in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between StartTime
            and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            read by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOps">
            <summary>
            Optional. Gets or sets the total number of I/O read operations
            performed by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.SucceededTaskCount">
            <summary>
            Optional. Gets or sets the total number of tasks successfully
            completed in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.TaskRetryCount">
            <summary>
            Optional. Gets or sets the total number of retries on all the tasks
            in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.Url">
            <summary>
            Optional. Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.UserCpuTime">
            <summary>
            Optional. Gets or sets the total user mode CPU time (summed across
            all cores and all compute nodes) consumed by all the tasks in the
            job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WaitTime">
            <summary>
            Optional. Gets or sets the total wait time of all the tasks in the
            job.  The wait time for a task is defined as the elapsed time
            between the creation of the task creation and the start of task
            execution.  This value is reported only in the account lifetime
            statistics; it is not included in individual job statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WallClockTime">
            <summary>
            Optional. Gets or sets the total wall clock time of all the tasks
            in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            written by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOps">
            <summary>
            Optional. Gets or sets the total number of I/O write operations
            performed by all the tasks in the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.MetadataItem">
            <summary>
            A metadata item associated with an Azure Batch resource. The Batch
            service does not assign any meaning to metadata; it is solely for the
            use of user code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MetadataItem class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Name">
            <summary>
            Required. Gets or sets the name of the metadata item.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Value">
            <summary>
            Required. Gets or sets the value of the metadata item.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.#ctor">
            <summary>
            Initializes a new instance of the NameValuePair class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Name">
            <summary>
            Optional. Gets or sets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Value">
            <summary>
            Optional. Gets or sets the value in the name-value pair.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFile">
            <summary>
            Information about a file or directory on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor">
            <summary>
            Initializes a new instance of the NodeFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NodeFile class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory">
            <summary>
            Optional. Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name">
            <summary>
            Required. Gets or sets the file path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties">
            <summary>
            Optional. Gets or sets the file properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url">
            <summary>
            Optional. Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters">
            <summary>
            Parameters for a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters.#ctor">
            <summary>
            Initializes a new instance of the NodeFileDeleteParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteParameters.Recursive">
            <summary>
            Optional. Gets or sets whether to delete children of a directory.
            If the fileName parameter represents a directory instead of a
            file, you can set Recursive to true to delete the directory and
            all of the files and subdirectories in it. If Recursive is false
            then the directory must be empty or deletion will fail.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteResponse">
            <summary>
            Response to a NodeFileOperations.DeleteFromComputeNode or
            NodeFileOperations.DeleteFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileDeleteResponse.#ctor">
            <summary>
            Initializes a new instance of the NodeFileDeleteResponse class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters">
            <summary>
            Parameters for a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters.#ctor">
            <summary>
            Initializes a new instance of the NodeFileGetParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetParameters.FileRange">
            <summary>
            Optional. Specifies the byte range to be retrieved. The default is
            to retrieve the entire file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters">
            <summary>
            Parameters for a
            NodeFileOperations.GetNodeFilePropertiesFromComputeNode or
            NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesParameters.#ctor">
            <summary>
            Initializes a new instance of the NodeFileGetPropertiesParameters
            class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesResponse">
            <summary>
            Response to a NodeFileOperations.GetNodeFilePropertiesFromComputeNode
            or NodeFileOperations.GetNodeFilePropertiesFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesResponse.#ctor">
            <summary>
            Initializes a new instance of the NodeFileGetPropertiesResponse
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesResponse.#ctor(Microsoft.Azure.Batch.Protocol.Models.NodeFile)">
            <summary>
            Initializes a new instance of the NodeFileGetPropertiesResponse
            class with required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetPropertiesResponse.File">
            <summary>
            Required. Gets or sets the file properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetResponse">
            <summary>
            Response to a NodeFileOperations.GetFromComputeNode or
            NodeFileOperations.GetFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetResponse.#ctor">
            <summary>
            Initializes a new instance of the NodeFileGetResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileGetResponse.File">
            <summary>
            Optional. Gets or sets the file properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters">
            <summary>
            Parameters for a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters.#ctor">
            <summary>
            Initializes a new instance of the NodeFileListParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters.MaxResults">
            <summary>
            Optional. Gets or sets the maximum number of items to return in the
            response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileListParameters.Recursive">
            <summary>
            Optional. Gets or sets whether to list files recursively.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFileListResponse">
            <summary>
            Response to a NodeFileOperations.ListFromComputeNode or
            NodeFileOperations.ListFromTask request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileListResponse.#ctor">
            <summary>
            Initializes a new instance of the NodeFileListResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFileListResponse.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NodeFile},System.String)">
            <summary>
            Initializes a new instance of the NodeFileListResponse class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileListResponse.Files">
            <summary>
            Required. Gets or sets the list of files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFileListResponse.NextLink">
            <summary>
            Required. Gets or sets the URL to get the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.#ctor">
            <summary>
            Initializes a new instance of the PoolInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.AutoPoolSpecification">
            <summary>
            Optional. Gets or sets characteristics for a temporary 'auto pool.'
            The Batch service will create this auto pool and run all the tasks
            of the job on it, and will delete the pool once the job has
            completed. You must specify either PoolId or
            AutoPoolSpecification, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.PoolId">
            <summary>
            Optional. Gets or sets the id of an existing pool. All the tasks of
            the job will run on the specified pool. You must specify either
            PoolId or AutoPoolSpecification, but not both.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification">
            <summary>
            Specification for creating a new pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the PoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PoolSpecification class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleEnabled">
            <summary>
            Optional. Gets or sets whether the pool size should automatically
            adjust over time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleFormula">
            <summary>
            Optional. Gets or sets the formula for the desired number of
            compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.CertificateReferences">
            <summary>
            Optional. Gets or sets a list of certificates to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.DisplayName">
            <summary>
            Optional. Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.InterComputeNodeCommunicationEnabled">
            <summary>
            Optional. Gets or sets whether the pool permits direct
            communication between nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.MaxTasksPerComputeNode">
            <summary>
            Optional. Gets or sets the maximum number of tasks that can run
            concurrently on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.Metadata">
            <summary>
            Optional. Gets or sets a list of name-value pairs associated with
            the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.OSFamily">
            <summary>
            Required. Gets or sets the Azure Guest OS family to be installed on
            the virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ResizeTimeout">
            <summary>
            Optional. Gets or sets the timeout for allocation of compute nodes
            to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.StartTask">
            <summary>
            Optional. Gets or sets a task to run on each compute node as it
            joins the pool. The task runs when the node is added to the pool
            or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TargetDedicated">
            <summary>
            Optional. Gets or sets the desired number of compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TargetOSVersion">
            <summary>
            Optional. Gets or sets the Azure Guest OS version to be installed
            on the virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Optional. Gets or sets how tasks are distributed among compute
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.VirtualMachineSize">
            <summary>
            Required. Gets or sets the size of the virtual machines in the
            pool. All VMs in a pool are the same size.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of
            a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.#ctor">
            <summary>
            Initializes a new instance of the PoolStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between startTime
            and lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.ResourceStatistics">
            <summary>
            Optional. Gets or sets statistics related to resource consumption
            by compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.Url">
            <summary>
            Optional. Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.UsageStatistics">
            <summary>
            Optional. Gets or sets statistics related to pool usage
            information, such as the amount of core-time used.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics">
            <summary>
            Usage metrics for a pool across an aggregation interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class with
            required arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB">
            <summary>
            Optional. Gets or sets the cross data center network egress from
            the pool during this interval, in GiB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB">
            <summary>
            Optional. Gets or sets the cross data center network ingress to the
            pool during this interval, in GiB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime">
            <summary>
            Optional. Gets or sets the end time of the aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId">
            <summary>
            Required. Gets or sets the id of the pool whose metrics are being
            aggregated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours">
            <summary>
            Optional. Gets or sets the total core hours used in the pool during
            this aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VirtualMachineSize">
            <summary>
            Optional. Gets or sets the size of virtual machines in the pool.
            All VMs in a pool are the same size.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.RecentJob">
            <summary>
            Information about the most recent job to run under the job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.RecentJob.#ctor">
            <summary>
            Initializes a new instance of the RecentJob class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Id">
            <summary>
            Optional. Gets or sets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Url">
            <summary>
            Optional. Gets or sets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResizeError.#ctor">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Code">
            <summary>
            Optional. Gets or sets an identifier for the pool resize error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Message">
            <summary>
            Optional. Gets or sets a message describing the pool resize error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Values">
            <summary>
            Optional. Gets or sets a list of additional error details related
            to the pool resize error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceFile">
            <summary>
            A file to be downloaded from Azure blob storage to a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceFile class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource">
            <summary>
            Required. Gets or sets the URL of a blob in Azure storage. The
            Batch service downloads the blob to the specified file path. The
            URL must be readable using anonymous access.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath">
            <summary>
            Required. Gets or sets the location on the compute node to which
            the file should be downloaded.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics">
            <summary>
            Statistics related to resource consumption by compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.#ctor">
            <summary>
            Initializes a new instance of the ResourceStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AverageCpuPercentage">
            <summary>
            Optional. Gets or sets the average CPU usage across all nodes in
            the pool (percentage per node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AverageDiskGiB">
            <summary>
            Optional. Gets or sets the average used disk space in GiB across
            all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AverageMemoryGiB">
            <summary>
            Optional. Gets or sets the average memory usage in GiB across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadGiB">
            <summary>
            Optional. Gets or sets the total amount of data in GiB of disk
            reads across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadIOps">
            <summary>
            Optional. Gets or sets the total number of disk read operations
            across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteGiB">
            <summary>
            Optional. Gets or sets the total amount of data in GiB of disk
            writes across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteIOps">
            <summary>
            Optional. Gets or sets the total number of disk write operations
            across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between startTime
            and lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkReadGiB">
            <summary>
            Optional. Gets or sets the total amount of data in GiB of network
            reads across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Optional. Gets or sets the total amount of data in GiB of network
            writes across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakDiskGiB">
            <summary>
            Optional. Gets or sets the peak used disk space in GiB across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Optional. Gets or sets the peak memory usage in GiB across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Schedule">
            <summary>
            The schedule according to which jobs will be created
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Schedule.#ctor">
            <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunAfter">
            <summary>
            Optional. Gets or sets a time after which no job will be created
            under this job schedule.  The schedule will move to the completed
            state as soon as this deadline is past and there is no active job
            under this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunUntil">
            <summary>
            Optional. Gets or sets the earliest time at which any job may be
            created under this job schedule. If you do not specify a
            doNotRunUntil time, the schedule becomes ready to create jobs
            immediately.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.RecurrenceInterval">
            <summary>
            Optional. Gets or sets the time interval between the start times of
            two successive jobs under the job schedule. A job schedule can
            have at most one active job under it at any given time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.StartWindow">
            <summary>
            Optional. Gets or sets the time interval, starting from the time at
            which the schedule indicates a job should be created, within which
            a job must be created.  If a job is not created within the
            startWindow interval, then the 'opportunity' is lost; no job will
            be created until the next recurrence of the schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTask">
            <summary>
            A task defined on a pool and run by compute nodes when they join the
            pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StartTask class with required
            arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine">
            <summary>
            Required. Gets or sets the command line of the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings">
            <summary>
            Optional. Gets or sets a list of environment variable settings for
            the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount">
            <summary>
            Optional. Gets or sets the maximum number of times the task may be
            retried.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles">
            <summary>
            Optional. Gets or sets a list of files that Batch will download to
            the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated">
            <summary>
            Optional. Gets or sets whether to run the start task in elevated
            mode. The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess">
            <summary>
            Optional. Gets or sets whether the Batch Service should wait for
            the start task to complete successfully (that is, to exit with
            exit code 0) before scheduling any tasks on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation">
            <summary>
            Information about a start task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.#ctor">
            <summary>
            Initializes a new instance of the StartTaskInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.EndTime">
            <summary>
            Optional. Gets or sets the time at which the start task stopped
            running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.ExitCode">
            <summary>
            Optional. Gets or sets the exit code of the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.LastRetryTime">
            <summary>
            Optional. Gets or sets the most recent time at which a retry of the
            task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.RetryCount">
            <summary>
            Optional. Gets or sets the number of times the task has been
            retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.SchedulingError">
            <summary>
            Optional. Gets or sets any error encountered scheduling the start
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.StartTime">
            <summary>
            Optional. Gets or sets the time at which the start task started
            running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.State">
            <summary>
            Optional. Gets or sets the state of the start task on the compute
            node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints">
            <summary>
            Constraints to apply to the Job Manager task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.#ctor">
            <summary>
            Initializes a new instance of the TaskConstraints class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Optional. Gets or sets the maximum number of times the task may be
            retried. The Batch service retries a task if its exit code is
            nonzero.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxWallClockTime">
            <summary>
            Optional. Gets or sets the maximum elapsed time that the task may
            run, measured from the time the task starts. If the task does not
            complete within the time limit, the Batch service terminates it.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.RetentionTime">
            <summary>
            Optional. Gets or sets the minimum time to retain the working
            directory for the task on the compute node where it ran. After
            this time, the Batch service may delete the working directory and
            all its contents. The default is infinite.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation">
            <summary>
            Information about the execution of a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime">
            <summary>
            Optional. Gets or sets the time at which the task completed. This
            property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode">
            <summary>
            Optional. Gets or sets the exit code of the task. This property is
            set only if the task is in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Optional. Gets or sets the most recent time at which the task has
            been requeued by the Batch service as the result of a user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime">
            <summary>
            Optional. Gets or sets the most recent time at which a retry of the
            task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount">
            <summary>
            Optional. Gets or sets the number of times the task has been
            requeued by the Batch service as the result of a user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount">
            <summary>
            Optional. Gets or sets the number of times the task has been
            retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError">
            <summary>
            Optional. Gets or sets details of any error encountered scheduling
            the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime">
            <summary>
            Optional. Gets or sets the time at which the task started running.
            If the task has been restarted or retried, this is the most recent
            time at which the task started running.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskInformation">
            <summary>
            Information about a task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInformation">
            <summary>
            Optional. Gets or sets information about the execution of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId">
            <summary>
            Optional. Gets or sets the id of the job to which the task belongs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId">
            <summary>
            Optional. Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState">
            <summary>
            Optional. Gets or sets the current state of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl">
            <summary>
            Optional. Gets or sets the URL of the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError">
            <summary>
            Information about an error when scheduling a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Category">
            <summary>
            Optional. Gets or sets the category of the task scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Code">
            <summary>
            Optional. Gets or sets an identifier for the task scheduling error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Details">
            <summary>
            Optional. Gets or sets the list of additional error details related
            to the scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Message">
            <summary>
            Optional. Gets or sets a message describing the task scheduling
            error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.ComputeNodeFillType">
            <summary>
            Optional. Gets or sets how tasks should be distributed across
            compute nodes
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics">
            <summary>
            Resource usage statistics for a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.#ctor">
            <summary>
            Initializes a new instance of the TaskStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.KernelCpuTime">
            <summary>
            Optional. Gets or sets the total kernel mode CPU time (summed
            across all cores and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between startTime
            and lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            read by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOps">
            <summary>
            Optional. Gets or sets the total number of I/O read operations
            performed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.Url">
            <summary>
            Optional. Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.UserCpuTime">
            <summary>
            Optional. Gets or sets the total user mode CPU time (summed across
            all cores and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WaitTime">
            <summary>
            Optional. Gets or sets the elapsed time between the creation of the
            task and the start of task execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WallClockTime">
            <summary>
            Optional. Gets or sets the total wall clock time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOGiB">
            <summary>
            Optional. Gets or sets the total amount of data (in GiB) of I/O
            written by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOps">
            <summary>
            Optional. Gets or sets the total number of I/O write operations
            performed by the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics">
            <summary>
            Statistics related to pool usage information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.#ctor">
            <summary>
            Initializes a new instance of the UsageStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.DedicatedCoreTime">
            <summary>
            Optional. Gets or sets the aggregated wall-clock time of the
            dedicated compute node cores being part of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.LastUpdateTime">
            <summary>
            Optional. Gets or sets the time at which the statistics were last
            updated. All statistics are limited to the range between startTime
            and lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.StartTime">
            <summary>
            Optional. Gets or sets the start time of the time range covered by
            the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.AddTaskCollectionDeserialziationError">
            <summary>
              Looks up a localized string similar to Deserialize AddTaskCollection response failed: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentEmptyError">
            <summary>
              Looks up a localized string similar to The argument must not be empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentOutOfRangeError">
            <summary>
              Looks up a localized string similar to The argument is out of range..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTooLargeError">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is larger than maximum of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTooSmallError">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is smaller than minimum of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTypeMisMatch">
            <summary>
              Looks up a localized string similar to Argument is not a type of {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArrayLengthZeroError">
            <summary>
              Looks up a localized string similar to The length of array {0} cannot be zero..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.CannotUpdateKeyWithoutAccountKeyCreds">
            <summary>
              Looks up a localized string similar to Cannot update key unless Account Key credentials are used..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ComparingObjectsOfDifferentClasses">
            <summary>
              Looks up a localized string similar to Comparing objects of different types: ({0}, {1}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ComparingObjectsOfDifferentClassesWithTrace">
            <summary>
              Looks up a localized string similar to {0}: Comparing objects of different types: ({1}, {2}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.CryptoFunctionFailed">
            <summary>
              Looks up a localized string similar to Crypto function failed with error code &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.Empty">
            <summary>
              Looks up a localized string similar to {0} is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ErrorInFillProperties">
            <summary>
              Looks up a localized string similar to Error in FillProperties: type {0} OData property name {1} property value {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InternalBatchClientError">
            <summary>
              Looks up a localized string similar to Unexpected internal batch client error..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InvalidPropertyValue">
            <summary>
              Looks up a localized string similar to The value specified for property {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InvalidPropertyValueForOperation">
            <summary>
              Looks up a localized string similar to The value specified for property {0} is invalid for operation {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.NavPropertyNotExist">
            <summary>
              Looks up a localized string similar to The navigation property {0} does not exist for entity {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.NullObject">
            <summary>
              Looks up a localized string similar to {0} is null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.OneClassInstanceIsNull">
            <summary>
              Looks up a localized string similar to {0}: one instance is null, the other is not null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.OperationCanceled">
            <summary>
              Looks up a localized string similar to Operation was canceled by user..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.PatchRequestNoUpdateableProperty">
            <summary>
              Looks up a localized string similar to Patch request error - no updateable property present..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.PropertyNotExistInClass">
            <summary>
              Looks up a localized string similar to Property with name {0} does not exist in class {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.StringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value of {0} is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TimeoutExceptionMessage">
            <summary>
              Looks up a localized string similar to The client could not finish the operation within specified timeout..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoEntityPropertiesLengthNotEqual">
            <summary>
              Looks up a localized string similar to {0}: property {1} have different lengths ({2}, {3}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoEntityPropertiesNotEqual">
            <summary>
              Looks up a localized string similar to {0}: property {1} not equal ({2}, {3}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoPropertiesConflict">
            <summary>
              Looks up a localized string similar to The values of these two properties are conflicting:{0}, {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.UnexpectedResponseCode">
            <summary>
              Looks up a localized string similar to Unexpected response code, Expected:{0}, Received:{1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.UnKnownODataReaderState">
            <summary>
              Looks up a localized string similar to Unknown ODataReader State {0} in DeSerializing object of type {1}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AuthorizationLevel">
            <summary>
            Authorization levels available for enforcement of restrictions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientDisposableStateBox">
            <summary>
            The dispose pattern sets all references to null.
            Put all references into this box.
            
            ONLY ACCESS VIA GetStateThrowIfNotOpen() method!
            
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClientDisposableStateBox.GetPropertyValue``1(``0@,System.Func{``0})">
            <summary>
            Gets a property value of type T. The property is instantiated in a thread-safe manner
            when the property is retrieved for the first time.
            </summary>
            <typeparam name="T">The type of the property</typeparam>
            <param name="field">The field backing the property value</param>
            <param name="instantiationFunc">The function used to instantiate the property on first retrieval</param>
            <returns>The property value</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClient">
            <summary>
            A client for an Azure Batch account, used to access the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.#ctor(Microsoft.Azure.Batch.IProtocolLayer)">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            </summary>   
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Finalize">
            <summary>
            Finalizes the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified credentials.
            </summary>
            <param name="credentials">The Batch account credentials.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Blocking call that creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified credentials.
            </summary>
            <param name="credentials">The Batch account credentials.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchRestClient)">
            <summary>
            Blocking call that creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRestClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.CloseAsync">
            <summary>
            Starts an asynchronous operation to close the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Close">
            <summary>
            Closes the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose">
            <summary>
            Calls <see cref="M:Microsoft.Azure.Batch.BatchClient.Close"/> and releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>, and optionally disposes of managed resources.
            </summary>
            <param name="disposing">Indicates whether the object is being disposed or finalized.  If true, the object is
            being disposed and can dispose managed resource.  If false, the object is being finalized and should only
            release unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.GetStateThrowIfNotOpen">
            <summary>
            Enforces that current instance is not "close".
            All access to disposable state should go through this routine.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations"/> for performing certificate-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobOperations"/> for performing job-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations"/> for performing job schedule-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.PoolOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.PoolOperations"/> for performing pool-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.Utilities">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.Utilities"/> object containing utility methods for orchestrating multiple Batch operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.ProtocolLayer">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            
            Since 100% of all calls indirect through this property, it
            provides a single place to immediately stop all (new) call attempts
            when the underlying BatchClient is closed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientException">
            <summary>
            An exception thrown by the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException">
            <summary>
            The exception that is thrown when the AddTaskCollection operation is terminated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Constants">
            <summary>
            Contains constants for interacting with the Azure Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix">
            <summary>
            The prefix used when creating automatically named containers or blobs as part of file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardOutFileName">
            <summary>
            The name of the standard output file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardErrorFileName">
            <summary>
            The name of the standard error file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest">
            <summary>
            The maximum number of tasks that the client will include in a single AddTaskCollection request,
            when adding multiple tasks to a job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout">
            <summary>
            The default amount of time to wait for a response from the Batch service before automatically cancelling the 
            request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.InternalConstants.UserAgentProductName">
            <summary>
            The value to use for UserAgent header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BindingState">
            <summary>
            The possible realationships between a client-side object and a server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Bound">
            <summary>
            There is a consistency model between the current object and a server-side object.
            The client-side object is said to be "bound" to the server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Unbound">
            <summary>
            There is no server-side object.
            The client-side object is said to be "unbound".
            This is typically used to denote an object state used to "create" a server-side object
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IFileStagingArtifact">
            <summary>
            Contains information about a file staging process.  File staging is typically performed for
            a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            </summary>
            <remarks>
            <para>
            IFileStagingArtifact allows an application to customize and to obtain information about the process of uploading
            files to the cloud, for example as part of a task-related operation such as
            <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            or <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">CloudJob.AddTaskAsync</see>.  Applications may use this
            information to, for example, find out about containers that were created in Azure Storage as
            part of the upload process.
            </para>
            <para>
            When <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            is called, the Batch client sends the tasks to the Batch service in collections.  As each collection is
            processed, the Batch client performs file staging for that collection: it examines the tasks to see if
            any of them specify any <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>, and if so creates a dictionary entry for
            each type of <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> in the FilesToStage collection. The key of
            the dictionary entry is the <see cref="T:System.Type"/> of the IFileStagingProvider and the value is an instance
            of the corresponding implementation of IFileStagingArtifact.  For example, if FilesToStage includes one or more
            <see cref="T:Microsoft.Azure.Batch.FileStaging.FileToStage"/> objects, then the dictionary contains an entry whose key is
            typeof(FileToStage) and whose value is an instance of <see cref="T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact"/>.
            </para>
            <para>
            When the Add Task operation completes, or during the Add Task operation if the application is multi-threaded,
            you can examine the dictionary and convert each IFileStagingArtifact to the appropriate type to retrieve
            the type-specific information.  For example, if your Add Task operation specified one or more FileToStage objects,
            you can locate the dictionary entry keyed by typeof(FileToStage), cast the value to SequentialFileStagingArtifact,
            and examine the <see cref="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated"/> property to
            determine if the upload process created a blob container in Azure Storage and if so the name of that container.
            This example could be useful for cleaning up automatically created containers.
            </para>
            <para>
            (Single-task Add Task operations work similarly, except that in a multi-task Add Task operation, there is
            a dictionary for each collection of tasks, and the dictionaries are collected in a <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/>,
            whereas in a single-task Add Task operation there is only a single dictionary.)
            </para>
            <para>
            In a single-task Add Task operation, you can also use the dictionary to customize the file staging process, by pre-populating it with appropriate
            entries.  For example, suppose you wish to control the <see cref="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment"/> for a group of FileToStage
            objects.  Then you could initialize the dictionary with <c>{ typeof(FileToStage), new SequentialFileStagingArtifact { NamingFragment = "myname" } }</c>
            before passing it to AddTaskAsync.  The FileToStage implementation of IFileStagingProvider would then use your
            SequentialFileStagingArtifact instead of creating its own.  (This feature is not available in multi-task
            Add Task operations.)
            </para>
            <para>
            You may also encounter IFileStagingArtifact if you are developing a custom <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/>.
            In this case you will typically create a custom implementation of IFileStagingArtifact to report
            implementation-specific information about your file staging process.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment">
            <summary>
            Gets or sets a name fragment that can be used when constructing default names.
            </summary>
            <remarks>Although a caller may set this property, the <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> implementation
            is not required to respect it.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPropertyHandler">
            <summary>
            An interface to handle per-property needs like validation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPropertyIds">
            <summary>
            The properties of a Job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPropertyConstraints`1">
            <summary>
            The constraints for Job properties.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolOperations">
            <summary>
            Performs pool-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudPool">pools</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate pools asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the pools are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; pools are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>The get pool operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any object in the Batch service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any object in the Batch service.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="osFamily">The Azure Guest OS family to be installed on the virtual machines in the pool.  See https://azure.microsoft.com/en-us/documentation/articles/cloud-services-guestos-update-matrix/ for families.</param>
            <param name="virtualMachineSize">The size of virtual machines in the pool.  See https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/ for sizes.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool. If omitted, you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.  If the pool has not reached the target size after this time, the resize is stopped.  The default is 10 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePool(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.  If the pool has not reached the target size after this time, the resize is stopped.  The default is 10 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListComputeNodes(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNode(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScale(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 10 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreateComputeNodeUser(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new compute node user account that
            does not yet exist in the Batch service.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node where the user account will be created.</param>
            <returns>An unbound <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new user account that has not been added to the compute node.</returns>
            <remarks>To add the new user, call <see cref="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUser(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reboot operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reboot(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reimage operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reimage(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersion(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>).</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>).</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates files on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="recursive">If true, recursively enumerates all files on the compute node. If false, enumerates only the files in the compute node root directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.  
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.  
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPoolUsageMetrics(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates pool usage metrics.
            </summary>
            <param name="startTime">The start time of the aggregation interval covered by this entry.</param>
            <param name="endTime">The end time of the aggregation interval for this entry.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate metrics asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the metrics data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; metrics data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.PoolOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolPropertyIds">
            <summary>
            The properties of Pools.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolPropertyMapper">
            <summary>
            Maps type constraints to PoolPropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolPropertyConstraints`1">
            <summary>
            The constraints for Pool properties.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskCollectionTerminated">
            <summary>
              Looks up a localized string similar to Addition of task {0} failed with unexpected http status code {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskResultActionUnretryableFailure">
            <summary>
              Looks up a localized string similar to Task {0} reported AddTaskResultAction.UnretryableFailure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.BatchClientIsClosed">
            <summary>
              Looks up a localized string similar to An attempt was made to use an instance of BatchClient that is in the closed state.  No further calls to the Batch Service can be made with that instance.  This can happen if the instance was explicitly closed or if the BatchClient.Dispose() method was called..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CanOnlyBeRunOnceFailure">
            <summary>
              Looks up a localized string similar to {0} can only be run once..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralBehaviorMissing">
            <summary>
              Looks up a localized string similar to Must have at least one behavior of type {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralCommitArtifactsMustMatchJob">
            <summary>
              Looks up a localized string similar to Commit() requires IJobCommitUnboundArtifacts for unbound Jobs and IJobCommitBountArtifacts for bound Jobs..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralObjectInInvalidState">
            <summary>
              Looks up a localized string similar to This object is in an invalid state.  Read and write access is not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralOperationForbiddenOnBoundObject">
            <summary>
              Looks up a localized string similar to Operation forbidden on bound objects for the following property: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralPropertyAccessForbiddenOnUnboundObject">
            <summary>
              Looks up a localized string similar to The following value is not available on unbound objects: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralPropertyCanOnlyBeSetOnce">
            <summary>
              Looks up a localized string similar to The following property has already been set and cannot be set again: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralSimultaneousCommitsForbidden">
            <summary>
              Looks up a localized string similar to Simultaneous Commit operators are forbidden..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralUnknownImplementationType">
            <summary>
              Looks up a localized string similar to Unexpected implementation type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnBoundObjects">
            <summary>
              Looks up a localized string similar to This operation is forbidden on bound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnUnboundObjects">
            <summary>
              Looks up a localized string similar to This operation is forbidden on unbound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesMissingConstraint">
            <summary>
              Looks up a localized string similar to The type {0} is missing a PropertyConstraint for property {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesPropNotFoundForObject">
            <summary>
              Looks up a localized string similar to The property {0} is not a member of type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesPropNotSet">
            <summary>
              Looks up a localized string similar to The following property has not been set or was not loaded for the current detail level: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesReadAccessViolation">
            <summary>
              Looks up a localized string similar to The property {0} cannot be read while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesUnimplementedBoundProperty">
            <summary>
              Looks up a localized string similar to The following bound property is not implemented: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesWriteAccessViolation">
            <summary>
              Looks up a localized string similar to The property {0} cannot be modified while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesWriteForbiddenAlways">
            <summary>
              Looks up a localized string similar to The following property is readonly: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskCannotBeAddedToMultipleJobs">
            <summary>
              Looks up a localized string similar to A task instance can only be added to a single Job..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.UnknownAddTaskResultAction">
            <summary>
              Looks up a localized string similar to Unknown AddTaskResultAction value: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyRouter`1">
            <summary>
            An implementation of IPropertyBag that enforces thread safety, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.AccessCollections(Microsoft.Azure.Batch.PropertyRouterCollectionAction{`0})">
            <summary>
            Allows access to the router collections protected by a write lock.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.AccessCollections(Microsoft.Azure.Batch.PropertyRouterCollectionAction{`0},Microsoft.Azure.Batch.PropertyBagLockAccess)">
            <summary>
            Allows access to the router collections protected by the lock.
            </summary>
            <param name="action"></param>
            <param name="lockDesired"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.GetPropertyOrThrow(`0,Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Performs a property read and throws if no value has been set.
            </summary>
            <param name="propId"></param>
            <param name="authLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.GetPropertyOrThrowRouted(`0,Microsoft.Azure.Batch.AuthorizationLevel,Microsoft.Azure.Batch.IPropertyBag{`0},Microsoft.Azure.Batch.IPropertyBag{`0})">
            <summary>
            Performs a property read routed to the correct property bag in order: primary, secondary.
            Throws if no property has been set.
            </summary>
            <param name="propId"></param>
            <param name="authLevel"></param>
            <param name="primaryPropBag"></param>
            <param name="secondaryPropBag"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.AccessIsAllowed(`0,Microsoft.Azure.Batch.BindingAccess,Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Checks the desired access type against the current binding state.
            Enforces the PropertyConstraint.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.TryGetPropertyRouted(`0,System.Object@,Microsoft.Azure.Batch.AuthorizationLevel,Microsoft.Azure.Batch.IPropertyBag{`0},Microsoft.Azure.Batch.IPropertyBag{`0})">
            <summary>
            Routes property reads to the correct property bags in proper: primery first, then secondary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.EnforceValidStateRequired(Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            If the current object is in an invalid state, all access is forbidden and results in exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.ApplyProperties(System.Collections.Generic.IEnumerable{`0},Microsoft.Azure.Batch.IPropertyBag{`0},Microsoft.Azure.Batch.IPropertyBag{`0})">
            <summary>
            Copy a filtered set of properties from a source propertybag to a destination PropertyBag
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyRouter`1.ApplyProperties(System.Collections.Generic.IEnumerable{`0},Microsoft.Azure.Batch.IPropertyBag{`0},Microsoft.Azure.Batch.IPropertyBag{`0},Microsoft.Azure.Batch.AuthorizationLevel)">
            <summary>
            Copy a filtered set of properties from a source propertybag to a destination PropertyBag
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceFile">
            <summary>
            A resource file which specifies a blob path and optionally the name of the file to download the blob to on the Node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new ResourceFile.
            </summary>
            <param name="blobSource">The blob source.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertToProtocolResFile(Microsoft.Azure.Batch.ResourceFile)">
            <summary>
            Convert this ResourceFile to Protocol ResourceFile
            </summary>
            <param name="batCliResFile"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.BlobSource">
            <summary>
            The blob source of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.FilePath">
            <summary>
            The location to download the file on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskPropertyIds">
            <summary>
            The properties of a Task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskPropertyMapper">
            <summary>
            Maps type constraints to TaskPropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskPropertyConstraints`1">
            <summary>
            The constraints for Task properties.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.TypeConstraintMapper`1">
            <summary>
             Since an enum cannot be a type constraint, this object will let a lower level templatized class
             map a template type to a local well-known type.
             
             This is intended to be used only with enums.
            </summary>
            <typeparam name="LowerLevelType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleOperations">
            <summary>
            Performs operations on Azure Batch job schedules.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule">job schedules</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate job schedules asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the job schedules are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; schedules are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>The get job schedule operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="schedule">The schedule that determines when jobs will be created.</param>
            <param name="jobSpecification">a <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> containing details of the jobs to be created according to the <paramref name="schedule"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobScheduleOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulePropertyIds">
            <summary>
            The properties of a job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulePropertyConstraints`1">
            <summary>
            The constraints for each property.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool,
            run all the tasks for the job on it, and by default delete the pool once the job has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AutoPoolSpecification"/> class with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.CreateAutoPoolSpecAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.AutoPoolSpecificationPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.AutoPoolSpecificationPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Gets or sets a prefix to be added to the unique identifier when a pool is automatically created.
            </summary>
            <remarks>The prefix is optional. If present, it can be up to 20 characters long and must adhere to the usual rules for ids (alphanumeric
            characters, hyphens and underscores only).</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive">
            <summary>
            Gets or sets whether to keep the auto pool alive after its <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption"/> expires.
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolSpecification">
            <summary>
            Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
            </summary>
            <remarks>An auto pool may live longer than its PoolLifetimeOption if <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive"/> is set.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecificationPropMapper.MapToAutoPoolSpecPropId``1(``0)">
            <summary>
            Maps type constraints to AutoPoolSpecificationPropertyIds
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
            <param name="propIdGeneric"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoPoolSpecificationPropConstraints`1">
            <summary>
            The constraints for AutoPoolSpecification properties.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateReference">
            <summary>
            Represents a certificate object of Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor">
            <summary>
            Instantiates an instance of CertificateReference with default property values.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)">
            <summary>
            Instantiates an instance of CertificateReference with default property values.  
            Values for the Thumbprint and ThumbprintAlgorithm properties are taken from the provided base certificate.
            </summary>
            <param name="baseCertificate">Provides initial values for the CertificateReference properties Thumbprint and ThumbprintAlgorithm.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Protocol.Models.CertificateReference,Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.CertificateReferencePropIds})">
            <summary>
            Instantiates a bound object with optional ConstraintProvider.
            </summary>
            <param name="bindToThisCR"></param>
            <param name="conProvider">Null gets you AlwaysReadWrite.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertToProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CertificateReference})">
            <summary>
            Convert a collection of om certrefs to protocol certrefs
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Batch.Common.CertStoreLocation"/> for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the name of the certificate store. Besides <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/>
            the value can have a custom store name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Thumbprint">
            <summary>
            Gets or sets the certificate thumbprint property of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm">
            <summary>
             Gets or sets the certificate thumbprint algorithm.  Currently sha1 is the
             only supported algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Visibility">
            <summary>
            Gets or sets the set of users that can get to the private data of the installed
            certificate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateReferencePropertyBag`1">
            <summary>
            Provides access to the bound CertificateReference properties
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process, such as a job task, start task,
            job manager task, or job preparation or release task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.EnvironmentSetting"/> class.
            </summary>
            <param name="name">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.#ctor(Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)">
            <summary>
            Instantiates a new object with initial values from the given protocol object.
            </summary>
            <param name="protocolES"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Boolean)">
            <summary>
            Convert a collection of protocol layer objects to Object Layer collection objects.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Name">
            <summary>
            Gets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Value">
            <summary>
            Gets the value of the environment variable.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.#ctor">
            <summary>
            Constructs an unbound (empty) PoolInformation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.CreatePoolInformationAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolInformationPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolInformationPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification">
            <summary>
            Gets or sets the properties for the auto pool that will be created..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.PoolId">
            <summary>
             Gets or sets the name of an existing pool that can be used for running tasks.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobExecutionEnvironmentPropertyConstraints`1">
            <summary>
            The constraints for PoolInformation properties.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPropertyBag`1">
            <summary>
            Provides access to the bound Job properties
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPropertyBag`1.#ctor(Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.JobPropertyIds})">
            <summary>
             unbound job property bag
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPropertyBag`1.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudJob,Microsoft.Azure.Batch.IPropertyContraintProvider{Microsoft.Azure.Batch.JobPropertyIds})">
            <summary>
             bound job property bag
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.MetadataItem">
            <summary>
            An item of metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Instantiate an object with the given initial values.
            </summary>
            <param name="name">The metadata name.</param>
            <param name="value">The metadata value.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.#ctor(Microsoft.Azure.Batch.Protocol.Models.MetadataItem)">
            <summary>
            Instantiates an object with initial values specified by the protocol object.
            </summary>
            <param name="protocolMDItem"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertToProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.MetadataItem})">
            <summary>
            Convert to protocol layer metadata array.
            </summary>
            <param name="metadataEnumerable"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts from a Protocol Layer collection to convenience layer collection.
            </summary>
            <param name="protoMetaData"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Name">
            <summary>
            The metadata name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Value">
            <summary>
            The metadata value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolPropertyBag`1.#ctor">
            <summary>
            Instantiate an unbound pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolPropertyBag`1.#ctor(Microsoft.Azure.Batch.Protocol.Models.CloudPool)">
            <summary>
            instantiate a bound pool.
            </summary>
            <param name="bindToThisPool"></param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolSpecification">
            <summary>
            The specification for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/> class.
            </summary>
            <remarks>The new instance is not bound to a pool specification in the service, but may be
            committed as part of a pool creation request or auto pool specification.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolSpecification)">
            <summary>
            Instantiates and initializes a bound object
            </summary>
            <param name="bindToThisPUS"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.CreatePoolUserSpecAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolSpecificationPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.PoolSpecificationPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust over time.
            </summary>
            <remarks>
            <para>If false, the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated"/> property is required.</para>
            <para>If true, the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula"/> property is required. The pool automatically resizes according to the formula.</para>
            <para>The default value is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>This property is required if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true.</para>
            <para>The formula is checked for validity before the pool is created. If the formula is not valid, an exception is thrown when you try to commit the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between compute nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>The default value is 1. The maximum value of this setting depends on the size of the compute nodes
            in the pool (the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize"/> property).</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.OSFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
            <remarks>
            <para>This timeout applies only to manual scaling; it has no effect when <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true.</para>
            <para>The default value is 10 minutes.  The minimum value is 5 minutes.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            This setting has no effect if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true.  It is required if AutoScaleEnabled is set to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
            </summary>
            <remarks>
            If omitted, the default value is the latest operating system version for the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.OSFamily"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize">
            <summary>
            Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines, see the Azure documentation.
            Batch supports all Azure VM sizes except ExtraSmall.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolSpecificationPropertyMapper">
            <summary>
            Maps type constraints to PoolSpecificationPropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolSpecificationPropertyConstraints`1">
            <summary>
            The constraints for PoolSpecificationPropertyIds.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTask">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.#ctor">
            <summary>
            Will instantiate an unbound StartTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.GetProtocolObject">
            <summary>
            Return a protocol object to which the changelist has been applied.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.CreateStartTaskAction(Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.StartTaskPropertyIds},Microsoft.Azure.Batch.IPropertyBag{Microsoft.Azure.Batch.StartTaskPropertyIds})">
            <summary>
            Create a new protocol layer object based off of the current PropertyRouter state.
            </summary>
            <param name="memoryBag"></param>
            <param name="boundBag"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.CommandLine">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for a job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.ResourceFiles">
            <summary>
            Gets or sets a set of Windows Azure blobs to run the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.RunElevated">
            <summary>
            Gets or sets the value that indicates if run the task as admin
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.WaitForSuccess">
            <summary>
            Specifies a value indicating whether the Task Service should wait for start
            task completion before scheduling any tasks on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTaskPropertyMapper">
            <summary>
            Maps type constraints to StartTaskPropertyIds
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTaskPropertyConstraints`1">
            <summary>
            The constraints for StartTaskPropertyIds.
            </summary>
            <typeparam name="PropertyIdType"></typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Util.Stream2String(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads entire Stream into a string.  When null encoding is provided, ASCII is used.
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulePropertyBag`1">
            <summary>
            Provides access to the bound job schedule properties
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount">
            <summary>
            Holds storage account information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StagingStorageAccount class using the specified credentials and service endpoint.
            </summary>
            <param name="storageAccount">A string specifying the storage account to be used.</param>
            <param name="storageAccountKey">A string specifying the storage account key to be used.</param>
            <param name="blobEndpoint">A string specifying the primary Blob service endpoint.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount">
            <summary>
            Specifies the storage account to be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey">
            <summary>
            Specifies the storage account key to be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint">
            <summary>
            The serviced endpoint for blob storage.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.Constants">
            <summary>
            Set of useful constants for interacting with file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.FileStaging.Constants.DefaultContainerPolicyFragment">
            <summary>
            The default container policy fragment.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.FileToStage">
            <summary>
            Provides for file staging of a local file to blob storage.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider">
            <summary>
            Provides basic file staging features.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            Begins an asynchronous operation to stage all of the files in the given collection.
            When file staging begins, all instances of IFileStagingProvider are bucketized by their implementation type.
            This produces one collection of instances per implementation.
            Each implmentation of IFileStagingProvider has a StageFilesAsync() method.  That method is called once with the 
            collection produced by the bucketization step oulined above.
            </summary>
            <param name="filesToStage">Collection of all file staging objects to be staged.  All instances must have the same implementation type.</param>
            <param name="fileStagingArtifact">IFileStagingProvider specific staging artifacts including error/progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact">
            <summary>
            Returns an instance of IFileStagingArtifact with whatever values the implementation requires.
            This will be called during file staging whenever a staging artifact has not been otherwise provided.
            </summary>
            <returns>An instance of IFileStagingArtifact with whatever values the implementation requires.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate">
            <summary>
            Performs client-side validation on the current object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles">
            <summary>
            The collection of ResourceFile objects that are the result of file staging.   
            Must be set by the IFileStagingProvider.StageFilesAsync() method.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)">
            <summary>
            Specifies that a local file should be staged to blob storage.  
            The specified account will be charged for storage costs.
            </summary>
            <param name="localFileToStage">The name of the local file.</param>
            <param name="storageCredentials">The storage credentials to be used when creating the default container.</param>
            <param name="nodeFileName">Optional name to be given to the file on the compute node.  If this parameter is null or missing 
            the name on the compute node will be set to the value of localFileToStage stripped of all path information.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)"/>.
            </summary>
            <param name="filesToStage">The instances of IFileStagingProvider to stage.</param>
            <param name="fileStagingArtifact">IFileStagingProvider specific staging artifacts including error/progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact"/>.
            </summary>
            <returns>An instance of IFileStagingArtifact with default values.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.Validate">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.ConstructBlobSource(System.String,System.String)">
            <summary>
            combine container and blob into an URL.
            </summary>
            <param name="container">container url</param>
            <param name="blob">blob url</param>
            <returns>full url</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateContainerWithPolicySASIfNotExist(System.String,System.String,System.Uri,System.String,System.String,System.DateTime,System.DateTime,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPermissions)">
            <summary>
            create a container if doesn't exist, setting permission with policy, and return assosciated SAS signature
            </summary>
            <param name="account">storage account</param>
            <param name="key">storage key</param>
            <param name="container">container to be created</param>
            <param name="policy">name for the policy</param>
            <param name="start">start time of the policy</param>
            <param name="end">expire time of the policy</param>
            <param name="permissions">permission on the name</param>
            <param name="blobUri">blob URI</param>
            <returns>the SAS for the container, in full URI format.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.FindAtLeastOne(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider})">
            <summary>
            Since this is the SequentialFileStagingProvider, all files are supposed to be of this type.
            Find any one and return the implementation instance.
            </summary>
            <param name="filesToStage"></param>
            <returns>Null means there was not even one.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesInternalAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            Starts an asynchronous call to stage the given files.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact)">
            <summary>
            Stages all files in the queue 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageOneFileAsync(Microsoft.Azure.Batch.FileStaging.FileToStage,Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact)">
            <summary>
            Stage a single file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage">
            <summary>
            The name of the local file to stage to blob storage
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName">
            <summary>
            The target filename, on the compute node, to which the blob contents will be downloaded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles">
            <summary>
            The instances of ResourcesFile for the staged local file.
            For this implementation, successful file staging of this object will
            result in a collection with only one entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.Exception">
            <summary>
            The exception, if any, caught while attempting to stage this file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileStagingLinkedSources.BucketizeFileStagingProviders(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider})">
            <summary>
            Creates buckets for the FileStagingProviders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.ListBlobsAsync">
            <summary>
            Begins asychronous call to list all the blobs in the current container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.ListBlobs">
            <summary>
            Blocking call to list all the blobs in the current container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.CreateSASForBlob(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.TimeSpan)">
            <summary>
            Creates a SAS for a blob that already exists.
            </summary>
            <param name="blob"></param>
            <param name="ttl"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact">
            <summary>
            The file staging artifact payload for this file staging provider
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated">
            <summary>
            The name of any blob container created.  
            
            A blob container is created if there is at least one file 
            to be uploaded that does not have an explicit container specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment">
            <summary>
            Optionally set by caller.  Optionally used by implementation. A name fragment that can be used when constructing default names.
            
            Can only be set once.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.DefaultContainerSAS">
            <summary>
            Holds the SAS for the default container after it is created.
            </summary>
        </member>
    </members>
</doc>
